{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/knockout/build/output/knockout-latest.debug.js","webpack:///./node_modules/rxjs/_esm5/internal/util/root.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isFunction.js","webpack:///./node_modules/rxjs/_esm5/internal/config.js","webpack:///./node_modules/rxjs/_esm5/internal/util/hostReportError.js","webpack:///./node_modules/rxjs/_esm5/internal/Observer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArray.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isObject.js","webpack:///./node_modules/rxjs/_esm5/internal/util/errorObject.js","webpack:///./node_modules/rxjs/_esm5/internal/util/tryCatch.js","webpack:///./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscription.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/observable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/noop.js","webpack:///./node_modules/rxjs/_esm5/internal/util/pipe.js","webpack:///./node_modules/rxjs/_esm5/internal/Observable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/toSubscriber.js","webpack:///./src/models/location.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js","webpack:///./node_modules/rxjs/_esm5/internal/SubjectSubscription.js","webpack:///./node_modules/rxjs/_esm5/internal/Subject.js","webpack:///./node_modules/rxjs/_esm5/internal/BehaviorSubject.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/map.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/dom/AjaxObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/dom/ajax.js","webpack:///./src/services/foursquare-service.js","webpack:///./src/services/places-seed.js","webpack:///./src/models/place.js","webpack:///./src/services/map-styles.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/filter.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/Action.js","webpack:///./node_modules/rxjs/_esm5/internal/Scheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/async.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/debounceTime.js","webpack:///./src/services/locations-seed.js","webpack:///./src/components/explore.js","webpack:///./node_modules/rxjs/_esm5/internal/OuterSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/InnerSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/iterator.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeTo.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArrayLike.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isPromise.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/combineLatest.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromArray.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js","webpack:///./src/components/favorites.js","webpack:///./src/app.js","webpack:///./src/services/map-service.js","webpack:///./src/services/geocoder-service.js","webpack:///./src/services/places-service.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./src/scss/styles.scss","webpack:///./src/scss/styles.scss?5cfc"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","window","this","eval","document","navigator","jQueryInstance","JSON","koExports","amdRequire","ko","exportSymbol","koPath","tokens","split","target","length","exportProperty","owner","publicName","version","options","deferUpdates","useOnlyNativeEvents","utils","objectForEach","obj","action","prop","extend","source","setPrototypeOf","proto","__proto__","canSetPrototype","Array","knownEvents","knownEventTypesByEventName","test","userAgent","eventType","knownEventsForType","j","eventsThatMustBeRegisteredUsingAttachEvent","propertychange","ieVersion","div","createElement","iElems","getElementsByTagName","innerHTML","cssClassNameRegex","toggleObjectClassPropertyString","classNames","shouldHaveClass","currentClassNames","match","arrayForEach","className","addOrRemoveItem","join","fieldsIncludedWithJsonPost","array","arrayIndexOf","item","indexOf","arrayFirst","predicate","predicateOwner","arrayRemoveItem","itemToRemove","index","splice","shift","arrayGetDistinctValues","result","push","arrayMap","mapping","arrayFilter","arrayPushAll","valuesToPush","apply","included","existingEntryIndex","peekObservable","setPrototypeOfOrExtend","objectMap","emptyDomNode","domNode","firstChild","removeNode","moveCleanedNodesToContainerElement","nodes","nodesArray","makeArray","container","ownerDocument","appendChild","cleanNode","cloneNodes","shouldCleanNodes","newNodesArray","clonedNode","cloneNode","setDomNodeChildren","childNodes","replaceDomNodes","nodeToReplaceOrNodeArray","nodesToReplaceArray","nodeType","insertionPoint","parent","parentNode","insertBefore","fixUpContinuousNodeArray","continuousNodeArray","current","last","nextSibling","setOptionNodeSelectionState","optionNode","isSelected","setAttribute","selected","stringTrim","string","trim","toString","replace","stringStartsWith","startsWith","substring","domNodeIsContainedBy","node","containedByNode","contains","compareDocumentPosition","domNodeIsAttachedToDocument","documentElement","anyDomNodeIsAttachedToDocument","tagNameLower","element","tagName","toLowerCase","catchFunctionErrors","delegate","arguments","e","setTimeout","handler","timeout","deferError","error","registerEventHandler","wrappedHandler","mustUseAttachEvent","addEventListener","attachEvent","Error","attachEventHandler","event","attachEventName","domNodeDisposal","addDisposeCallback","detachEvent","triggerEvent","useClickWorkaround","type","inputType","isClickOnCheckableElement","createEvent","dispatchEvent","eventCategory","initEvent","click","fireEvent","unwrapObservable","isObservable","peek","toggleDomNodeCssClass","addOrRemoveFn","classList","setTextContent","textContent","innerTextNode","virtualElements","createTextNode","data","forceRefresh","setElementName","mergeAttributes","elem","style","zoom","ensureSelectElementIsRenderedCorrectly","selectElement","originalWidth","width","range","min","max","arrayLikeObject","createSymbolOrString","identifier","isIe6","isIe7","getFormFields","form","fieldName","fields","concat","isMatchingField","field","matches","parseJson","jsonString","parse","Function","stringifyJson","replacer","space","stringify","postJson","urlOrForm","params","includeFields","url","originalForm","key","display","method","input","body","submit","removeChild","originalFunction","partialArgs","slice","args","domData","uniqueId","dataStoreKeyExpandoPropertyName","Date","getTime","dataStore","getAll","createIfNotFound","dataStoreKey","hasExistingDataStore","allDataForNode","set","clear","nextKey","domDataKey","cleanableNodeTypes","1","8","9","cleanableNodeTypesWithDescendants","getDisposeCallbacksCollection","allDisposeCallbacks","cleanSingleNode","callbacks","nodeWithChildren","child","nextChild","cleanImmediateCommentTypeChildren","callback","removeDisposeCallback","callbacksCollection","destroyCallbacksCollection","descendants","cleanExternalData","none","table","tr","select","lookup","thead","tbody","tfoot","td","th","option","optgroup","mayRequireCreateElementHack","simpleHtmlParse","html","documentContext","windowContext","tags","wrap","getWrap","depth","markup","lastChild","parseHtmlFragment","elems","jQueryHtmlParse","setHtml","parsedNodes","memoization","memos","randomMax8HexChars","Math","random","memoize","memoId","unmemoize","callbackParams","unmemoizeDomNodeAndDescendants","extraCallbackParamsArray","findMemoNodes","rootNode","appendToArray","parseMemoText","nodeValue","combinedParams","memoText","tasks","scheduler","taskQueue","taskQueueLength","nextHandle","nextIndexToProcess","processTasks","task","mark","countMarks","ex","scheduledProcess","MutationObserver","observe","attributes","toggle","script","onreadystatechange","schedule","func","cancel","handle","resetForTesting","runEarly","extenders","throttle","writeTimeoutInstance","dependentObservable","read","write","clearTimeout","rateLimit","limitFunction","_deferUpdates","debounce","limit","deferred","ignoreUpdates","notify","notifyWhen","valuesArePrimitiveAndEqual","primitiveTypes","boolean","number","a","b","oldValueIsPrimitive","timeoutInstance","subscription","disposeCallback","_target","isDisposed","dispose","subscribable","ko_subscribable_fn","init","defaultEvent","limitNotifySubscribers","_limitBeforeChange","_origNotifySubscribers","_limitChange","instance","_subscriptions","change","_versionNumber","subscribe","callbackTarget","self","boundCallback","bind","afterSubscriptionRemove","beforeSubscriptionAdd","notifySubscribers","valueToNotify","updateVersion","hasSubscriptionsForEvent","subs","_changeSubscriptions","dependencyDetection","begin","end","getVersion","hasChanged","versionToCheck","ignoreBeforeChange","notifyNextChange","previousValue","pendingValue","selfIsObservable","finish","_notificationIsPending","_evalIfChanged","shouldNotify","isDifferent","_notifyNextChangeIfValueIsDifferent","getSubscriptionsCount","total","eventName","subscriptions","oldValue","newValue","requestedExtenders","extenderHandler","isSubscribable","computedContext","currentFrame","outerFrames","lastId","pop","registerDependency","_id","ignore","callbackArgs","getDependenciesCount","computed","isInitial","ignoreDependencies","observableLatestValue","observable","initialValue","valueWillMutate","valueHasMutated","observableFn","equalityComparer","protoProperty","hasPrototype","isWriteableObservable","observableArray","initialValues","trackArrayChanges","remove","valueOrPredicate","underlyingArray","removedValues","removeAll","arrayOfValues","allValues","destroy","destroyAll","oldItem","newItem","methodName","cacheDiffForKnownOperation","methodCallResult","arrayChangeEventName","compareArrayOptions","arrayChangeSubscription","underlyingNotifySubscribersFunction","trackingChanges","cachedDiff","pendingNotifications","underlyingBeforeSubscriptionAddFunction","underlyingAfterSubscriptionRemoveFunction","previousContents","currentContents","changes","compareArrays","getChanges","trackChanges","rawArray","operationName","diff","arrayLength","argsLength","offset","pushDiff","startIndex","endDeleteIndex","endAddIndex","endIndex","additions","deletions","argsIndex","findMovesInArrayComparison","status","computedState","computedDisposeDependencyCallback","id","entryToDispose","computedBeginDependencyDetectionCallback","computedObservable","state","disposalCount","disposalCandidates","addDependencyTracking","dependencyTracking","isSleeping","subscribeToDependency","evaluatorFunctionOrOptions","evaluatorFunctionTarget","writeFunction","latestValue","isStale","isDirty","isBeingEvaluated","suppressDisposalUntilDisposeWhenReturnsFalse","pure","readFunction","disposeWhenNodeIsRemoved","disposeWhen","domNodeDisposalCallback","dependenciesCount","evaluationTimeoutInstance","haveDependenciesChanged","evaluateImmediate","hasWriteFunction","computedFn","pureComputedOverrides","deferEvaluationOverrides","isActive","trackingObj","_order","_version","dependency","_evalDelayed","markDirty","respondToChange","evaluatePossiblyAsync","dirtySub","changeSub","throttleEvaluationTimeout","notifyChange","changed","evaluateImmediate_CallReadWithDependencyDetection","dependencyDetectionContext","evaluateImmediate_CallReadThenEndDependencyDetection","_latestValue","evaluate","isChange","dependeciesOrder","order","componentLoadingOperationUniqueId","protoProp","isComputed","isPureComputed","pureComputed","objectLookup","keys","values","toJS","rootObject","mapJsObjectGraph","mapInputCallback","visitedObjects","canHaveProperties","RegExp","String","Number","Boolean","outputProperties","save","visitorCallback","propertyName","visitPropertiesOrArrayEntries","indexer","propertyValue","previouslyMappedValue","valueToMap","toJSON","plainJavaScriptObject","constructor","existingIndex","selectExtensions","readValue","bindingHandlers","optionValueDomDataKey","getAttributeNode","specified","text","selectedIndex","writeValue","allowUnset","optionValue","selection","size","expressionRewriting","javaScriptReservedWords","javaScriptAssignmentTarget","bindingToken","stringDouble","divisionLookBehind","keywordRegexLookBehind","in","return","typeof","parseObjectLiteral","objectLiteralString","str","charCodeAt","toks","tok","unknown","substr","twoWayBindings","bindingRewriteValidators","preProcessBindings","bindingsStringOrKeyValueArray","bindingOptions","processKeyValue","val","writableVal","bindingParams","expression","getWriteableValue","propertyAccessorResultStrings","makeValueAccessors","resultStrings","keyValueArray","keyValue","keyValueArrayContainsKey","writeValueToProperty","allBindings","checkIfDifferent","propWriters","commentNodesHaveTextProperty","createComment","startCommentRegex","endCommentRegex","htmlTagsWithOptionallyClosingChildren","ul","ol","isStartComment","isEndComment","getVirtualChildren","startComment","allowUnbalanced","currentNode","children","getMatchingEndComment","allVirtualChildren","getUnbalancedChildTags","childNode","captureRemaining","matchingEndComment","allowedBindings","emptyNode","virtualChildren","endCommentNode","prepend","containerNode","nodeToPrepend","insertAfter","nodeToInsert","insertAfterNode","hasBindingValue","virtualNodeBindingValue","regexMatch","normaliseVirtualElementDomStructure","elementVerified","unbalancedTags","nodeToInsertBefore","bindingProvider","bindingCache","nodeHasBindings","getAttribute","components","getBindings","bindingContext","bindingsString","parsedBindings","addBindingsForCustomElement","getBindingAccessors","valueAccessors","getBindingsString","parseBindingsString","bindingFunction","cache","cacheKey","rewrittenBindings","createBindingsStringEvaluator","createBindingsStringEvaluatorViaCache","message","bindingDoesNotRecurseIntoElementTypes","textarea","template","makeValueAccessor","evaluateValueAccessor","valueAccessor","makeAccessorsFromFunction","getBindingsAndMakeAccessors","context","applyBindingsToDescendantsInternal","elementOrVirtualElement","bindingContextsMayDifferFromDomParentElement","currentChild","nextInQueue","provider","preprocessNode","applyBindingsToNodeAndDescendantsInternal","nodeVerified","bindingContextMayDifferFromDomParentElement","shouldBindDescendants","isElement","shouldApplyBindings","applyBindingsToNodeInternal","bindingKey","dataItemOrAccessor","parentContext","dataItemAlias","extendCallback","updateContext","dataItemOrObservable","isFunc","dataItem","_subscribable","_addNode","unshift","properties","createStaticChildContext","exportDependencies","boundElementDomDataKey","sourceBindings","bindings","bindingHandlerThatControlsDescendantBindings","alreadyBound","storedBindingContextForNode","bindingsUpdater","getValueAccessor","orderedBindings","bindingsConsidered","cyclicDependencyStack","pushBinding","binding","bindingDependencyKey","topologicalSortBindings","bindingKeyAndHandler","handlerInitFn","handlerUpdateFn","bindingName","validateThatBindingIsAllowedForVirtualElements","initResult","storedBindingContextDomDataKey","getBindingContext","viewModelOrBindingContext","applyBindingAccessorsToNode","applyBindingsToNode","makeBindingAccessors","applyBindingsToDescendants","applyBindings","contextFor","dataFor","loadingSubscribablesCache","loadedDefinitionsCache","getObjectOwnProperty","propName","getFirstResultFromLoaders","argsExceptCallback","candidateLoaders","currentCandidateLoader","methodInstance","wasAborted","synchronousReturnValue","componentName","cachedDefinition","isSynchronousComponent","definition","completedAsync","config","beginLoadingComponent","loadComponentAndNotify","clearCachedDefinition","_getFirstResultFromLoaders","defaultConfigRegistry","register","isRegistered","unregister","defaultLoader","getConfig","loadComponent","errorCallback","makeErrorCallback","possiblyGetConfigFromAmd","loadedConfig","makeCallBackWhenZero","tryIssueCallback","templateConfig","viewModelConfig","resolvedTemplate","resolvedViewModel","createViewModelKey","resolveConfig","loadTemplate","isDocumentFragment","HTMLElement","cloneNodesFromTemplateSourceElement","elemInstance","getElementById","resolveTemplate","loadViewModel","resolveViewModel","fixedInstance","componentInfo","content","DocumentFragment","_allRegisteredComponents","componentBindingValue","paramsAttribute","nativeBindingProviderInstance","rawParamComputedValues","paramValue","paramName","paramValueComputed","$raw","getComponentParamsFromCustomElement","createDocumentFragment","newDocFrag","allComponents","ignored1","ignored2","currentViewModel","currentLoadingOperationId","disposeAssociatedComponentViewModel","currentViewModelDispose","originalChildNodes","componentParams","loadingOperationId","componentDefinition","clonedNodesArray","cloneTemplateIntoElement","componentViewModel","componentViewModelFactory","templateNodes","createViewModel","childBindingContext","ctx","controlsDescendantBindings","attrHtmlToJavascriptMap","class","for","makeWithIfBinding","isWith","isNot","makeContextCallback","viewModel","didDisplayOnLastUpdate","savedNodes","rawValue","dataValue","shouldDisplay","isFirstRender","needsRefresh","update","attrName","attrValue","toRemove","removeAttribute","after","checkedValue","updateModel","isChecked","checked","elemValue","useCheckedValue","isRadio","modelValue","valueIsArray","writableValue","rawValueIsNonArrayObservable","oldElemValue","isCheckbox","disabled","eventsToHandle","handlerReturnValue","handlerFunction","argsForHandler","preventDefault","returnValue","bubble","cancelBubble","stopPropagation","makeTemplateValueAccessor","unwrappedValue","foreach","as","includeDestroyed","afterAdd","beforeRemove","afterRender","beforeMove","afterMove","templateEngine","nativeTemplateEngine","handleElementFocusChange","isFocused","ownerDoc","active","activeElement","handleElementFocusIn","handleElementFocusOut","focus","blur","captionPlaceholder","selectedOptions","captionValue","filteredArray","selectWasPreviouslyEmpty","multiple","previousScrollTop","scrollTop","unwrappedArray","valueAllowUnset","arrayToDomNodeChildrenOptions","previousSelectedValues","applyToObject","defaultValue","predicateType","itemUpdate","setSelectionCallback","arrayEntry","newOptions","setDomNodeChildrenFromArrayMapping","oldOptions","optionText","abs","valueToWrite","styleName","styleValue","parseVersion","parseFloat","operaVersion","opera","parseInt","safariVersion","firefoxVersion","selectionChangeRegisteredName","selectionChangeHandlerName","selectionChangeHandler","registerForSelectionChangeEvent","timeoutHandle","elementValueBeforeEvent","previousElementValue","elementValue","deferUpdateModel","ieUpdateModel","updateView","onEvent","preprocess","addBinding","currentIndex","eventsToCatch","requestedEventsToCatch","propertyChangedFired","valueUpdateHandler","ieAutoCompleteHackNeeded","autocomplete","updateFromModel","valueHasChanged","applyValueAction","isCurrentlyVisible","templateSource","templateDocument","templateSources","domElement","anonymousTemplate","rewriterCallback","rewritten","templateRewriting","memoizeDataBindingAttributeSyntaxRegex","memoizeVirtualContainerBindingSyntaxRegex","constructMemoizedTagReplacement","dataBindAttributeValue","tagToRetain","nodeName","dataBindKeyValueArray","allValidators","validator","possibleErrorMessage","validateDataBindValuesForRewriting","rewrittenDataBindAttributeValue","applyBindingsToNextSiblingScript","ensureTemplateIsRewritten","htmlString","memoizeBindingAttributeSyntax","applyMemoizedBindingsToNextSibling","nodeToBind","templateType","elemContentsProperty","dataDomDataPrefix","templatesDomDataKey","getTemplateDomData","setTemplateDomData","templateData","containerData","textData","_templateEngine","invokeForEachNodeInContinuousRange","firstNode","lastNode","firstOutOfRangeNode","activateBindingsOnContinuousNodeArray","nextNodeInRange","nodePreviousSibling","previousSibling","newNodes","getFirstNodeFromPossibleArray","nodeOrNodeArray","executeTemplate","targetNodeOrNodeArray","renderMode","firstTargetNode","templateEngineToUse","renderedNodesArray","haveAddedNodesToParent","resolveTemplateName","setTemplateEngine","renderTemplate","dataOrBindingContext","activelyDisposeWhenNodeIsRemoved","templateName","renderTemplateForEach","arrayOrObservableArray","targetNode","parentBindingContext","arrayItemContext","executeTemplateForArrayItem","arrayValue","activateBindingsCallback","addedNodesArray","templateComputedDomDataKey","bindingValue","templateComputed","dataArray","innerBindingContext","newComputed","oldComputed","disposeOldComputedAndStoreNewOne","parsedBindingValue","left","right","limitFailedCompares","failedCompares","leftItem","rightItem","statusNotInOld","statusNotInNew","compareSmallArrayToBigArray","smlArray","bigArray","statusNotInSml","statusNotInBig","smlIndex","bigIndex","thisRow","lastRow","bigIndexMaxForRow","bigIndexMinForRow","myMin","myMax","editDistanceMatrix","smlIndexMax","bigIndexMax","compareRange","maxDistance","northDistance","westDistance","meMinusOne","editScript","notInSml","notInBig","reverse","oldArray","newArray","dontLimitMoves","mapNodeAndRefreshWhenChanged","callbackAfterAddingNodes","mappedNodes","newMappedNodes","lastMappingResultDomDataKey","deletedItemDummyValue","mapData","isFirstExecution","lastMappingResult","lastArray","x","newMappingResult","lastMappingResultIndex","newMappingResultIndex","nodesToDelete","itemsToProcess","itemsForBeforeRemoveCallbacks","itemsForMoveCallbacks","itemsForAfterAddCallbacks","itemMovedOrRetained","editScriptIndex","oldPosition","indexObservable","callCallback","items","editScriptItem","movedIndex","nextNode","initialized","useNodesIfAvailable","templateNodesFunc","templateText","jqueryTmplTemplateEngine","jQueryTmplVersion","ensureHasReferencedJQueryTemplates","precompiled","jQueryTemplateOptions","koBindingContext","resultNodes","compiledTemplate","templateMarkup","open","close","jqueryTmplTemplateEngineInstance","__webpack_exports__","_root","__window","__self","WorkerGlobalScope","global","extendStatics","__extends","__","create","assign","isFunction","_enable_super_gross_mode_that_will_cause_bad_things","Promise","useDeprecatedSynchronousErrorHandling","stack","hostReportError","err","empty","closed","next","complete","isArray","isObject","tryCatchTarget","errorObject","tryCatcher","tryCatch","fn","UnsubscriptionError_UnsubscriptionError","_super","UnsubscriptionError","errors","_this","map","Subscription_Subscription","Subscription","unsubscribe","_parent","_parents","_unsubscribe","hasErrors","len","flattenUnsubscriptionErrors","sub","add","teardown","EMPTY","_addParent","tmp","subscriptionIndex","reduce","errs","rxSubscriber","Symbol","Subscriber_Subscriber","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","trustedSubscriber","Subscriber_SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","observable_observable","noop","pipeFromArray","fns","prev","Observable_Observable","Observable","_isScalar","_subscribe","lift","operator","sink","nextOrObserver","toSubscriber","_trySubscribe","forEach","promiseCtor","getPromiseCtor","resolve","reject","pipe","operations","_i","toPromise","LocationViewModel","placeId","address","geoBounds","geoLocation","ObjectUnsubscribedError_ObjectUnsubscribedError","ObjectUnsubscribedError","SubjectSubscription_SubjectSubscription","SubjectSubscription","subject","observers","subscriberIndex","Subject_SubjectSubscriber","SubjectSubscriber","Subject_Subject","Subject","hasError","thrownError","Subject_AnonymousSubject","copy","asObservable","AnonymousSubject","BehaviorSubject_BehaviorSubject","BehaviorSubject","_value","getValue","project","thisArg","TypeError","MapOperator","map_MapSubscriber","MapSubscriber","count","ajaxGet","headers","AjaxObservable_AjaxObservable","ajaxPost","ajaxDelete","ajaxPut","ajaxPatch","mapResponse","response","ajaxGetJSON","responseType","AjaxObservable","urlOrRequest","request","async","createXHR","crossDomain","root","XMLHttpRequest","XDomainRequest","getCORSRequest","progId","progIds","ActiveXObject","getXMLHttpRequest","withCredentials","AjaxObservable_AjaxSubscriber","post","delete","put","patch","getJSON","AjaxSubscriber","done","FormData","serializeBody","send","xhr","AjaxResponse","_b","user","password","setupEvents","setHeaders","contentType","splitIndex","encodeURIComponent","setRequestHeader","progressSubscriber","xhrTimeout","_a","AjaxObservable_AjaxTimeoutError","ontimeout","upload","xhrProgress_1","xhrError_1","onprogress","AjaxObservable_AjaxError","onerror","xhrReadyStateChange","readyState","status_1","responseText","abort","originalEvent","parseXhrResponse","AjaxError","responseXML","AjaxTimeoutError","ajax","FS_CATEGORY_BAR","FS_CATEGORY_BREWERY","foursquare_service_FoursquareService","searchVenues","categories","ll","lat","lng","categoryId","_request","intent","radius","venueDetail","venueId","urlSlug","query","_getQuery","client_id","client_secret","v","resource","PLACES_SEED","place_PlaceViewModel","isSaved","knockout_latest_debug_default","marker","serialize","MAP_STYLES","featureType","elementType","stylers","color","FilterOperator","filter_FilterSubscriber","FilterSubscriber","AsyncAction_AsyncAction","AsyncAction","work","pending","delay","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","Action","Scheduler","SchedulerAction","now","async_async","AsyncScheduler","scheduled","debounceTime","dueTime","DebounceTimeOperator","debounceTime_DebounceTimeSubscriber","DebounceTimeSubscriber","debouncedSubscription","lastValue","hasValue","clearDebounce","dispatchNext","debouncedNext","RECOMMENDED_LOCATIONS","explore_ExploreViewModel","mapService","geocoderService","placesService","_mapService","_geocoderService","_placesService","_filterText$","_filterTextSub","filterText","places","locations","isLocationsEmpty","focusedLocation","showLocations","showPlaces","selectLocation","location","fitBounds","setCenter","setZoom","searchPlaces","selectPlace","place","getDetail","detail","showInfo","togglePlaces","toggleButtonIcon","toggleSave","searchLocations","geocode","searchNear","updateMapMarkers","focused","_getRandomLocation","fitPlaces","clearMarkers","placeMarker","addListener","floor","OuterSubscriber_OuterSubscriber","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","InnerSubscriber_InnerSubscriber","InnerSubscriber","subscribeToArray","iterator_iterator","iterator","getSymbolIterator","subscribeTo","then","isPromise","promise","iterable","obs","NONE","combineLatest","observables","resultSelector","fromArray","CombineLatestOperator","combineLatest_CombineLatestSubscriber","CombineLatestSubscriber","toRespond","unused","oldVal","_tryResultSelector","favorites_FavoritesViewModel","_filterSub","isPlacesEmpty","isFilteredEmpty","removePlace","favorites$","favorites","filter","search","closeInfo","initMap","app","explore","mode","switchModeExplore","switchModeFavorite","markers","infoWindow","_locationListener","google","maps","Map","center","disableDefaultUI","styles","InfoWindow","pos","bounds","level","details","setContent","link","setAnimation","Animation","BOUNCE","LatLngBounds","Marker","position","title","setMap","_googleGeocoder","Geocoder","observer","results","models","_resultToLocationModel","cancelled","place_id","formatted_address","geometry","_places$","_foursquare","_load","has","find","_save","saved","venue","cat","shortUrl","rating","venues","_foursquareResultToPlace","ojects","localStorage","setItem","stored","getItem","parsed","_objectToPlace","findIndex","formattedAddress","g","css","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","memo","stylesInDom","isOldIE","all","atob","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","domStyle","refs","parts","addStyle","listToStyles","list","newStyles","base","part","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","before","removeStyleElement","idx","createStyleElement","attrs","addAttrs","el","transform","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","blob","oldSrc","href","styleSheet","cssText","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","cssNode","useSourceMap","cssMapping","sourceMapping","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","hmr","locals"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/*!\n * Knockout JavaScript library v3.4.2\n * (c) The Knockout.js team - http://knockoutjs.com/\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n\n(function(){\nvar DEBUG=true;\n(function(undefined){\n    // (0, eval)('this') is a robust way of getting a reference to the global object\n    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\n    var window = this || (0, eval)('this'),\n        document = window['document'],\n        navigator = window['navigator'],\n        jQueryInstance = window[\"jQuery\"],\n        JSON = window[\"JSON\"];\n(function(factory) {\n    // Support three module loading scenarios\n    if (typeof define === 'function' && define['amd']) {\n        // [1] AMD anonymous module\n        define(['exports', 'require'], factory);\n    } else if (typeof exports === 'object' && typeof module === 'object') {\n        // [2] CommonJS/Node.js\n        factory(module['exports'] || exports);  // module.exports is for Node.js\n    } else {\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\n        factory(window['ko'] = {});\n    }\n}(function(koExports, amdRequire){\n// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\n// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\nvar ko = typeof koExports !== 'undefined' ? koExports : {};\n// Google Closure Compiler helpers (used only to make the minified file smaller)\nko.exportSymbol = function(koPath, object) {\n    var tokens = koPath.split(\".\");\n\n    // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\n    // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\n    var target = ko;\n\n    for (var i = 0; i < tokens.length - 1; i++)\n        target = target[tokens[i]];\n    target[tokens[tokens.length - 1]] = object;\n};\nko.exportProperty = function(owner, publicName, object) {\n    owner[publicName] = object;\n};\nko.version = \"3.4.2\";\n\nko.exportSymbol('version', ko.version);\n// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\nko.options = {\n    'deferUpdates': false,\n    'useOnlyNativeEvents': false\n};\n\n//ko.exportSymbol('options', ko.options);   // 'options' isn't minified\nko.utils = (function () {\n    function objectForEach(obj, action) {\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                action(prop, obj[prop]);\n            }\n        }\n    }\n\n    function extend(target, source) {\n        if (source) {\n            for(var prop in source) {\n                if(source.hasOwnProperty(prop)) {\n                    target[prop] = source[prop];\n                }\n            }\n        }\n        return target;\n    }\n\n    function setPrototypeOf(obj, proto) {\n        obj.__proto__ = proto;\n        return obj;\n    }\n\n    var canSetPrototype = ({ __proto__: [] } instanceof Array);\n    var canUseSymbols = !DEBUG && typeof Symbol === 'function';\n\n    // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\n    var knownEvents = {}, knownEventTypesByEventName = {};\n    var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\n    knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\n    knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\n    objectForEach(knownEvents, function(eventType, knownEventsForType) {\n        if (knownEventsForType.length) {\n            for (var i = 0, j = knownEventsForType.length; i < j; i++)\n                knownEventTypesByEventName[knownEventsForType[i]] = eventType;\n        }\n    });\n    var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\n\n    // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\n    // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\n    // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\n    // If there is a future need to detect specific versions of IE10+, we will amend this.\n    var ieVersion = document && (function() {\n        var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\n\n        // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\n        while (\n            div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\n            iElems[0]\n        ) {}\n        return version > 4 ? version : undefined;\n    }());\n    var isIe6 = ieVersion === 6,\n        isIe7 = ieVersion === 7;\n\n    function isClickOnCheckableElement(element, eventType) {\n        if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\n        if (eventType.toLowerCase() != \"click\") return false;\n        var inputType = element.type;\n        return (inputType == \"checkbox\") || (inputType == \"radio\");\n    }\n\n    // For details on the pattern for changing node classes\n    // see: https://github.com/knockout/knockout/issues/1597\n    var cssClassNameRegex = /\\S+/g;\n\n    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\n        var addOrRemoveFn;\n        if (classNames) {\n            if (typeof node.classList === 'object') {\n                addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\n                ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n                    addOrRemoveFn.call(node.classList, className);\n                });\n            } else if (typeof node.className['baseVal'] === 'string') {\n                // SVG tag .classNames is an SVGAnimatedString instance\n                toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\n            } else {\n                // node.className ought to be a string.\n                toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\n            }\n        }\n    }\n\n    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\n        // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\n        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\n        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\n        });\n        obj[prop] = currentClassNames.join(\" \");\n    }\n\n    return {\n        fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\n\n        arrayForEach: function (array, action) {\n            for (var i = 0, j = array.length; i < j; i++)\n                action(array[i], i);\n        },\n\n        arrayIndexOf: function (array, item) {\n            if (typeof Array.prototype.indexOf == \"function\")\n                return Array.prototype.indexOf.call(array, item);\n            for (var i = 0, j = array.length; i < j; i++)\n                if (array[i] === item)\n                    return i;\n            return -1;\n        },\n\n        arrayFirst: function (array, predicate, predicateOwner) {\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate.call(predicateOwner, array[i], i))\n                    return array[i];\n            return null;\n        },\n\n        arrayRemoveItem: function (array, itemToRemove) {\n            var index = ko.utils.arrayIndexOf(array, itemToRemove);\n            if (index > 0) {\n                array.splice(index, 1);\n            }\n            else if (index === 0) {\n                array.shift();\n            }\n        },\n\n        arrayGetDistinctValues: function (array) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++) {\n                if (ko.utils.arrayIndexOf(result, array[i]) < 0)\n                    result.push(array[i]);\n            }\n            return result;\n        },\n\n        arrayMap: function (array, mapping) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                result.push(mapping(array[i], i));\n            return result;\n        },\n\n        arrayFilter: function (array, predicate) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate(array[i], i))\n                    result.push(array[i]);\n            return result;\n        },\n\n        arrayPushAll: function (array, valuesToPush) {\n            if (valuesToPush instanceof Array)\n                array.push.apply(array, valuesToPush);\n            else\n                for (var i = 0, j = valuesToPush.length; i < j; i++)\n                    array.push(valuesToPush[i]);\n            return array;\n        },\n\n        addOrRemoveItem: function(array, value, included) {\n            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\n            if (existingEntryIndex < 0) {\n                if (included)\n                    array.push(value);\n            } else {\n                if (!included)\n                    array.splice(existingEntryIndex, 1);\n            }\n        },\n\n        canSetPrototype: canSetPrototype,\n\n        extend: extend,\n\n        setPrototypeOf: setPrototypeOf,\n\n        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\n\n        objectForEach: objectForEach,\n\n        objectMap: function(source, mapping) {\n            if (!source)\n                return source;\n            var target = {};\n            for (var prop in source) {\n                if (source.hasOwnProperty(prop)) {\n                    target[prop] = mapping(source[prop], prop, source);\n                }\n            }\n            return target;\n        },\n\n        emptyDomNode: function (domNode) {\n            while (domNode.firstChild) {\n                ko.removeNode(domNode.firstChild);\n            }\n        },\n\n        moveCleanedNodesToContainerElement: function(nodes) {\n            // Ensure it's a real array, as we're about to reparent the nodes and\n            // we don't want the underlying collection to change while we're doing that.\n            var nodesArray = ko.utils.makeArray(nodes);\n            var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\n\n            var container = templateDocument.createElement('div');\n            for (var i = 0, j = nodesArray.length; i < j; i++) {\n                container.appendChild(ko.cleanNode(nodesArray[i]));\n            }\n            return container;\n        },\n\n        cloneNodes: function (nodesArray, shouldCleanNodes) {\n            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\n                var clonedNode = nodesArray[i].cloneNode(true);\n                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\n            }\n            return newNodesArray;\n        },\n\n        setDomNodeChildren: function (domNode, childNodes) {\n            ko.utils.emptyDomNode(domNode);\n            if (childNodes) {\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    domNode.appendChild(childNodes[i]);\n            }\n        },\n\n        replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\n            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\n            if (nodesToReplaceArray.length > 0) {\n                var insertionPoint = nodesToReplaceArray[0];\n                var parent = insertionPoint.parentNode;\n                for (var i = 0, j = newNodesArray.length; i < j; i++)\n                    parent.insertBefore(newNodesArray[i], insertionPoint);\n                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\n                    ko.removeNode(nodesToReplaceArray[i]);\n                }\n            }\n        },\n\n        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\n            // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\n            // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\n            // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\n            // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\n            // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\n            //\n            // Rules:\n            //   [A] Any leading nodes that have been removed should be ignored\n            //       These most likely correspond to memoization nodes that were already removed during binding\n            //       See https://github.com/knockout/knockout/pull/440\n            //   [B] Any trailing nodes that have been remove should be ignored\n            //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\n            //       See https://github.com/knockout/knockout/pull/1903\n            //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\n            //       and include any nodes that have been inserted among the previous collection\n\n            if (continuousNodeArray.length) {\n                // The parent node can be a virtual element; so get the real parent node\n                parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\n\n                // Rule [A]\n                while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\n                    continuousNodeArray.splice(0, 1);\n\n                // Rule [B]\n                while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode)\n                    continuousNodeArray.length--;\n\n                // Rule [C]\n                if (continuousNodeArray.length > 1) {\n                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\n                    // Replace with the actual new continuous node set\n                    continuousNodeArray.length = 0;\n                    while (current !== last) {\n                        continuousNodeArray.push(current);\n                        current = current.nextSibling;\n                    }\n                    continuousNodeArray.push(last);\n                }\n            }\n            return continuousNodeArray;\n        },\n\n        setOptionNodeSelectionState: function (optionNode, isSelected) {\n            // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\n            if (ieVersion < 7)\n                optionNode.setAttribute(\"selected\", isSelected);\n            else\n                optionNode.selected = isSelected;\n        },\n\n        stringTrim: function (string) {\n            return string === null || string === undefined ? '' :\n                string.trim ?\n                    string.trim() :\n                    string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n        },\n\n        stringStartsWith: function (string, startsWith) {\n            string = string || \"\";\n            if (startsWith.length > string.length)\n                return false;\n            return string.substring(0, startsWith.length) === startsWith;\n        },\n\n        domNodeIsContainedBy: function (node, containedByNode) {\n            if (node === containedByNode)\n                return true;\n            if (node.nodeType === 11)\n                return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\n            if (containedByNode.contains)\n                return containedByNode.contains(node.nodeType === 3 ? node.parentNode : node);\n            if (containedByNode.compareDocumentPosition)\n                return (containedByNode.compareDocumentPosition(node) & 16) == 16;\n            while (node && node != containedByNode) {\n                node = node.parentNode;\n            }\n            return !!node;\n        },\n\n        domNodeIsAttachedToDocument: function (node) {\n            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\n        },\n\n        anyDomNodeIsAttachedToDocument: function(nodes) {\n            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\n        },\n\n        tagNameLower: function(element) {\n            // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\n            // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\n            // we don't need to do the .toLowerCase() as it will always be lower case anyway.\n            return element && element.tagName && element.tagName.toLowerCase();\n        },\n\n        catchFunctionErrors: function (delegate) {\n            return ko['onError'] ? function () {\n                try {\n                    return delegate.apply(this, arguments);\n                } catch (e) {\n                    ko['onError'] && ko['onError'](e);\n                    throw e;\n                }\n            } : delegate;\n        },\n\n        setTimeout: function (handler, timeout) {\n            return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);\n        },\n\n        deferError: function (error) {\n            setTimeout(function () {\n                ko['onError'] && ko['onError'](error);\n                throw error;\n            }, 0);\n        },\n\n        registerEventHandler: function (element, eventType, handler) {\n            var wrappedHandler = ko.utils.catchFunctionErrors(handler);\n\n            var mustUseAttachEvent = ieVersion && eventsThatMustBeRegisteredUsingAttachEvent[eventType];\n            if (!ko.options['useOnlyNativeEvents'] && !mustUseAttachEvent && jQueryInstance) {\n                jQueryInstance(element)['bind'](eventType, wrappedHandler);\n            } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\n                element.addEventListener(eventType, wrappedHandler, false);\n            else if (typeof element.attachEvent != \"undefined\") {\n                var attachEventHandler = function (event) { wrappedHandler.call(element, event); },\n                    attachEventName = \"on\" + eventType;\n                element.attachEvent(attachEventName, attachEventHandler);\n\n                // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\n                // so to avoid leaks, we have to remove them manually. See bug #856\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n                    element.detachEvent(attachEventName, attachEventHandler);\n                });\n            } else\n                throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\n        },\n\n        triggerEvent: function (element, eventType) {\n            if (!(element && element.nodeType))\n                throw new Error(\"element must be a DOM node when calling triggerEvent\");\n\n            // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\n            // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\n            // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\n            // In both cases, we'll use the click method instead.\n            var useClickWorkaround = isClickOnCheckableElement(element, eventType);\n\n            if (!ko.options['useOnlyNativeEvents'] && jQueryInstance && !useClickWorkaround) {\n                jQueryInstance(element)['trigger'](eventType);\n            } else if (typeof document.createEvent == \"function\") {\n                if (typeof element.dispatchEvent == \"function\") {\n                    var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\n                    var event = document.createEvent(eventCategory);\n                    event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\n                    element.dispatchEvent(event);\n                }\n                else\n                    throw new Error(\"The supplied element doesn't support dispatchEvent\");\n            } else if (useClickWorkaround && element.click) {\n                element.click();\n            } else if (typeof element.fireEvent != \"undefined\") {\n                element.fireEvent(\"on\" + eventType);\n            } else {\n                throw new Error(\"Browser doesn't support triggering events\");\n            }\n        },\n\n        unwrapObservable: function (value) {\n            return ko.isObservable(value) ? value() : value;\n        },\n\n        peekObservable: function (value) {\n            return ko.isObservable(value) ? value.peek() : value;\n        },\n\n        toggleDomNodeCssClass: toggleDomNodeCssClass,\n\n        setTextContent: function(element, textContent) {\n            var value = ko.utils.unwrapObservable(textContent);\n            if ((value === null) || (value === undefined))\n                value = \"\";\n\n            // We need there to be exactly one child: a text node.\n            // If there are no children, more than one, or if it's not a text node,\n            // we'll clear everything and create a single text node.\n            var innerTextNode = ko.virtualElements.firstChild(element);\n            if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\n                ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\n            } else {\n                innerTextNode.data = value;\n            }\n\n            ko.utils.forceRefresh(element);\n        },\n\n        setElementName: function(element, name) {\n            element.name = name;\n\n            // Workaround IE 6/7 issue\n            // - https://github.com/SteveSanderson/knockout/issues/197\n            // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\n            if (ieVersion <= 7) {\n                try {\n                    element.mergeAttributes(document.createElement(\"<input name='\" + element.name + \"'/>\"), false);\n                }\n                catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\n            }\n        },\n\n        forceRefresh: function(node) {\n            // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\n            if (ieVersion >= 9) {\n                // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\n                var elem = node.nodeType == 1 ? node : node.parentNode;\n                if (elem.style)\n                    elem.style.zoom = elem.style.zoom;\n            }\n        },\n\n        ensureSelectElementIsRenderedCorrectly: function(selectElement) {\n            // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\n            // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\n            // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\n            if (ieVersion) {\n                var originalWidth = selectElement.style.width;\n                selectElement.style.width = 0;\n                selectElement.style.width = originalWidth;\n            }\n        },\n\n        range: function (min, max) {\n            min = ko.utils.unwrapObservable(min);\n            max = ko.utils.unwrapObservable(max);\n            var result = [];\n            for (var i = min; i <= max; i++)\n                result.push(i);\n            return result;\n        },\n\n        makeArray: function(arrayLikeObject) {\n            var result = [];\n            for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\n                result.push(arrayLikeObject[i]);\n            };\n            return result;\n        },\n\n        createSymbolOrString: function(identifier) {\n            return canUseSymbols ? Symbol(identifier) : identifier;\n        },\n\n        isIe6 : isIe6,\n        isIe7 : isIe7,\n        ieVersion : ieVersion,\n\n        getFormFields: function(form, fieldName) {\n            var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\n            var isMatchingField = (typeof fieldName == 'string')\n                ? function(field) { return field.name === fieldName }\n                : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\n            var matches = [];\n            for (var i = fields.length - 1; i >= 0; i--) {\n                if (isMatchingField(fields[i]))\n                    matches.push(fields[i]);\n            };\n            return matches;\n        },\n\n        parseJson: function (jsonString) {\n            if (typeof jsonString == \"string\") {\n                jsonString = ko.utils.stringTrim(jsonString);\n                if (jsonString) {\n                    if (JSON && JSON.parse) // Use native parsing where available\n                        return JSON.parse(jsonString);\n                    return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\n                }\n            }\n            return null;\n        },\n\n        stringifyJson: function (data, replacer, space) {   // replacer and space are optional\n            if (!JSON || !JSON.stringify)\n                throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\n            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\n        },\n\n        postJson: function (urlOrForm, data, options) {\n            options = options || {};\n            var params = options['params'] || {};\n            var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\n            var url = urlOrForm;\n\n            // If we were given a form, use its 'action' URL and pick out any requested field values\n            if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\n                var originalForm = urlOrForm;\n                url = originalForm.action;\n                for (var i = includeFields.length - 1; i >= 0; i--) {\n                    var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\n                    for (var j = fields.length - 1; j >= 0; j--)\n                        params[fields[j].name] = fields[j].value;\n                }\n            }\n\n            data = ko.utils.unwrapObservable(data);\n            var form = document.createElement(\"form\");\n            form.style.display = \"none\";\n            form.action = url;\n            form.method = \"post\";\n            for (var key in data) {\n                // Since 'data' this is a model object, we include all properties including those inherited from its prototype\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\n                form.appendChild(input);\n            }\n            objectForEach(params, function(key, value) {\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = value;\n                form.appendChild(input);\n            });\n            document.body.appendChild(form);\n            options['submitter'] ? options['submitter'](form) : form.submit();\n            setTimeout(function () { form.parentNode.removeChild(form); }, 0);\n        }\n    }\n}());\n\nko.exportSymbol('utils', ko.utils);\nko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\nko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\nko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\nko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\nko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\nko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\nko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\nko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\nko.exportSymbol('utils.extend', ko.utils.extend);\nko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\nko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\nko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\nko.exportSymbol('utils.postJson', ko.utils.postJson);\nko.exportSymbol('utils.parseJson', ko.utils.parseJson);\nko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\nko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\nko.exportSymbol('utils.range', ko.utils.range);\nko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\nko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\nko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\nko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\nko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\nko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\nko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\n\nif (!Function.prototype['bind']) {\n    // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\n    // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\n    Function.prototype['bind'] = function (object) {\n        var originalFunction = this;\n        if (arguments.length === 1) {\n            return function () {\n                return originalFunction.apply(object, arguments);\n            };\n        } else {\n            var partialArgs = Array.prototype.slice.call(arguments, 1);\n            return function () {\n                var args = partialArgs.slice(0);\n                args.push.apply(args, arguments);\n                return originalFunction.apply(object, args);\n            };\n        }\n    };\n}\n\nko.utils.domData = new (function () {\n    var uniqueId = 0;\n    var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\n    var dataStore = {};\n\n    function getAll(node, createIfNotFound) {\n        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n        var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\n        if (!hasExistingDataStore) {\n            if (!createIfNotFound)\n                return undefined;\n            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\n            dataStore[dataStoreKey] = {};\n        }\n        return dataStore[dataStoreKey];\n    }\n\n    return {\n        get: function (node, key) {\n            var allDataForNode = getAll(node, false);\n            return allDataForNode === undefined ? undefined : allDataForNode[key];\n        },\n        set: function (node, key, value) {\n            if (value === undefined) {\n                // Make sure we don't actually create a new domData key if we are actually deleting a value\n                if (getAll(node, false) === undefined)\n                    return;\n            }\n            var allDataForNode = getAll(node, true);\n            allDataForNode[key] = value;\n        },\n        clear: function (node) {\n            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n            if (dataStoreKey) {\n                delete dataStore[dataStoreKey];\n                node[dataStoreKeyExpandoPropertyName] = null;\n                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\n            }\n            return false;\n        },\n\n        nextKey: function () {\n            return (uniqueId++) + dataStoreKeyExpandoPropertyName;\n        }\n    };\n})();\n\nko.exportSymbol('utils.domData', ko.utils.domData);\nko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\n\nko.utils.domNodeDisposal = new (function () {\n    var domDataKey = ko.utils.domData.nextKey();\n    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\n    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\n\n    function getDisposeCallbacksCollection(node, createIfNotFound) {\n        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\n        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\n            allDisposeCallbacks = [];\n            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\n        }\n        return allDisposeCallbacks;\n    }\n    function destroyCallbacksCollection(node) {\n        ko.utils.domData.set(node, domDataKey, undefined);\n    }\n\n    function cleanSingleNode(node) {\n        // Run all the dispose callbacks\n        var callbacks = getDisposeCallbacksCollection(node, false);\n        if (callbacks) {\n            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\n            for (var i = 0; i < callbacks.length; i++)\n                callbacks[i](node);\n        }\n\n        // Erase the DOM data\n        ko.utils.domData.clear(node);\n\n        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\n        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\n\n        // Clear any immediate-child comment nodes, as these wouldn't have been found by\n        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\n        if (cleanableNodeTypesWithDescendants[node.nodeType])\n            cleanImmediateCommentTypeChildren(node);\n    }\n\n    function cleanImmediateCommentTypeChildren(nodeWithChildren) {\n        var child, nextChild = nodeWithChildren.firstChild;\n        while (child = nextChild) {\n            nextChild = child.nextSibling;\n            if (child.nodeType === 8)\n                cleanSingleNode(child);\n        }\n    }\n\n    return {\n        addDisposeCallback : function(node, callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"Callback must be a function\");\n            getDisposeCallbacksCollection(node, true).push(callback);\n        },\n\n        removeDisposeCallback : function(node, callback) {\n            var callbacksCollection = getDisposeCallbacksCollection(node, false);\n            if (callbacksCollection) {\n                ko.utils.arrayRemoveItem(callbacksCollection, callback);\n                if (callbacksCollection.length == 0)\n                    destroyCallbacksCollection(node);\n            }\n        },\n\n        cleanNode : function(node) {\n            // First clean this node, where applicable\n            if (cleanableNodeTypes[node.nodeType]) {\n                cleanSingleNode(node);\n\n                // ... then its descendants, where applicable\n                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\n                    // Clone the descendants list in case it changes during iteration\n                    var descendants = [];\n                    ko.utils.arrayPushAll(descendants, node.getElementsByTagName(\"*\"));\n                    for (var i = 0, j = descendants.length; i < j; i++)\n                        cleanSingleNode(descendants[i]);\n                }\n            }\n            return node;\n        },\n\n        removeNode : function(node) {\n            ko.cleanNode(node);\n            if (node.parentNode)\n                node.parentNode.removeChild(node);\n        },\n\n        \"cleanExternalData\" : function (node) {\n            // Special support for jQuery here because it's so commonly used.\n            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\n            // so notify it to tear down any resources associated with the node & descendants here.\n            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\n                jQueryInstance['cleanData']([node]);\n        }\n    };\n})();\nko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\nko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\nko.exportSymbol('cleanNode', ko.cleanNode);\nko.exportSymbol('removeNode', ko.removeNode);\nko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\nko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\nko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\n(function () {\n    var none = [0, \"\", \"\"],\n        table = [1, \"<table>\", \"</table>\"],\n        tbody = [2, \"<table><tbody>\", \"</tbody></table>\"],\n        tr = [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n        select = [1, \"<select multiple='multiple'>\", \"</select>\"],\n        lookup = {\n            'thead': table,\n            'tbody': table,\n            'tfoot': table,\n            'tr': tbody,\n            'td': tr,\n            'th': tr,\n            'option': select,\n            'optgroup': select\n        },\n\n        // This is needed for old IE if you're *not* using either jQuery or innerShiv. Doesn't affect other cases.\n        mayRequireCreateElementHack = ko.utils.ieVersion <= 8;\n\n    function getWrap(tags) {\n        var m = tags.match(/^<([a-z]+)[ >]/);\n        return (m && lookup[m[1]]) || none;\n    }\n\n    function simpleHtmlParse(html, documentContext) {\n        documentContext || (documentContext = document);\n        var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\n\n        // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\n        // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\n\n        // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\n        // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\n        // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\n        // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\n\n        // Trim whitespace, otherwise indexOf won't work as expected\n        var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\"),\n            wrap = getWrap(tags),\n            depth = wrap[0];\n\n        // Go to html and back, then peel off extra wrappers\n        // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\n        var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\n        if (typeof windowContext['innerShiv'] == \"function\") {\n            // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\n            // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\n            // somehow shims the native APIs so it just works anyway)\n            div.appendChild(windowContext['innerShiv'](markup));\n        } else {\n            if (mayRequireCreateElementHack) {\n                // The document.createElement('my-element') trick to enable custom elements in IE6-8\n                // only works if we assign innerHTML on an element associated with that document.\n                documentContext.appendChild(div);\n            }\n\n            div.innerHTML = markup;\n\n            if (mayRequireCreateElementHack) {\n                div.parentNode.removeChild(div);\n            }\n        }\n\n        // Move to the right depth\n        while (depth--)\n            div = div.lastChild;\n\n        return ko.utils.makeArray(div.lastChild.childNodes);\n    }\n\n    function jQueryHtmlParse(html, documentContext) {\n        // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\n        if (jQueryInstance['parseHTML']) {\n            return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\n        } else {\n            // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\n            var elems = jQueryInstance['clean']([html], documentContext);\n\n            // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\n            // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\n            // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\n            if (elems && elems[0]) {\n                // Find the top-most parent element that's a direct child of a document fragment\n                var elem = elems[0];\n                while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\n                    elem = elem.parentNode;\n                // ... then detach it\n                if (elem.parentNode)\n                    elem.parentNode.removeChild(elem);\n            }\n\n            return elems;\n        }\n    }\n\n    ko.utils.parseHtmlFragment = function(html, documentContext) {\n        return jQueryInstance ?\n            jQueryHtmlParse(html, documentContext) :   // As below, benefit from jQuery's optimisations where possible\n            simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\n    };\n\n    ko.utils.setHtml = function(node, html) {\n        ko.utils.emptyDomNode(node);\n\n        // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\n        html = ko.utils.unwrapObservable(html);\n\n        if ((html !== null) && (html !== undefined)) {\n            if (typeof html != 'string')\n                html = html.toString();\n\n            // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\n            // for example <tr> elements which are not normally allowed to exist on their own.\n            // If you've referenced jQuery we'll use that rather than duplicating its code.\n            if (jQueryInstance) {\n                jQueryInstance(node)['html'](html);\n            } else {\n                // ... otherwise, use KO's own parsing logic.\n                var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\n                for (var i = 0; i < parsedNodes.length; i++)\n                    node.appendChild(parsedNodes[i]);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\nko.exportSymbol('utils.setHtml', ko.utils.setHtml);\n\nko.memoization = (function () {\n    var memos = {};\n\n    function randomMax8HexChars() {\n        return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\n    }\n    function generateRandomId() {\n        return randomMax8HexChars() + randomMax8HexChars();\n    }\n    function findMemoNodes(rootNode, appendToArray) {\n        if (!rootNode)\n            return;\n        if (rootNode.nodeType == 8) {\n            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\n            if (memoId != null)\n                appendToArray.push({ domNode: rootNode, memoId: memoId });\n        } else if (rootNode.nodeType == 1) {\n            for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\n                findMemoNodes(childNodes[i], appendToArray);\n        }\n    }\n\n    return {\n        memoize: function (callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\n            var memoId = generateRandomId();\n            memos[memoId] = callback;\n            return \"<!--[ko_memo:\" + memoId + \"]-->\";\n        },\n\n        unmemoize: function (memoId, callbackParams) {\n            var callback = memos[memoId];\n            if (callback === undefined)\n                throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\n            try {\n                callback.apply(null, callbackParams || []);\n                return true;\n            }\n            finally { delete memos[memoId]; }\n        },\n\n        unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\n            var memos = [];\n            findMemoNodes(domNode, memos);\n            for (var i = 0, j = memos.length; i < j; i++) {\n                var node = memos[i].domNode;\n                var combinedParams = [node];\n                if (extraCallbackParamsArray)\n                    ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\n                ko.memoization.unmemoize(memos[i].memoId, combinedParams);\n                node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\n                if (node.parentNode)\n                    node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\n            }\n        },\n\n        parseMemoText: function (memoText) {\n            var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\n            return match ? match[1] : null;\n        }\n    };\n})();\n\nko.exportSymbol('memoization', ko.memoization);\nko.exportSymbol('memoization.memoize', ko.memoization.memoize);\nko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\nko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\nko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\nko.tasks = (function () {\n    var scheduler,\n        taskQueue = [],\n        taskQueueLength = 0,\n        nextHandle = 1,\n        nextIndexToProcess = 0;\n\n    if (window['MutationObserver']) {\n        // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\n        // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n        scheduler = (function (callback) {\n            var div = document.createElement(\"div\");\n            new MutationObserver(callback).observe(div, {attributes: true});\n            return function () { div.classList.toggle(\"foo\"); };\n        })(scheduledProcess);\n    } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\n        // IE 6-10\n        // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\n        scheduler = function (callback) {\n            var script = document.createElement(\"script\");\n            script.onreadystatechange = function () {\n                script.onreadystatechange = null;\n                document.documentElement.removeChild(script);\n                script = null;\n                callback();\n            };\n            document.documentElement.appendChild(script);\n        };\n    } else {\n        scheduler = function (callback) {\n            setTimeout(callback, 0);\n        };\n    }\n\n    function processTasks() {\n        if (taskQueueLength) {\n            // Each mark represents the end of a logical group of tasks and the number of these groups is\n            // limited to prevent unchecked recursion.\n            var mark = taskQueueLength, countMarks = 0;\n\n            // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n            for (var task; nextIndexToProcess < taskQueueLength; ) {\n                if (task = taskQueue[nextIndexToProcess++]) {\n                    if (nextIndexToProcess > mark) {\n                        if (++countMarks >= 5000) {\n                            nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\n                            ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n                            break;\n                        }\n                        mark = taskQueueLength;\n                    }\n                    try {\n                        task();\n                    } catch (ex) {\n                        ko.utils.deferError(ex);\n                    }\n                }\n            }\n        }\n    }\n\n    function scheduledProcess() {\n        processTasks();\n\n        // Reset the queue\n        nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n    }\n\n    function scheduleTaskProcessing() {\n        ko.tasks['scheduler'](scheduledProcess);\n    }\n\n    var tasks = {\n        'scheduler': scheduler,     // Allow overriding the scheduler\n\n        schedule: function (func) {\n            if (!taskQueueLength) {\n                scheduleTaskProcessing();\n            }\n\n            taskQueue[taskQueueLength++] = func;\n            return nextHandle++;\n        },\n\n        cancel: function (handle) {\n            var index = handle - (nextHandle - taskQueueLength);\n            if (index >= nextIndexToProcess && index < taskQueueLength) {\n                taskQueue[index] = null;\n            }\n        },\n\n        // For testing only: reset the queue and return the previous queue length\n        'resetForTesting': function () {\n            var length = taskQueueLength - nextIndexToProcess;\n            nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n            return length;\n        },\n\n        runEarly: processTasks\n    };\n\n    return tasks;\n})();\n\nko.exportSymbol('tasks', ko.tasks);\nko.exportSymbol('tasks.schedule', ko.tasks.schedule);\n//ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\nko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\nko.extenders = {\n    'throttle': function(target, timeout) {\n        // Throttling means two things:\n\n        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\n        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\n        target['throttleEvaluation'] = timeout;\n\n        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\n        //     so the target cannot change value synchronously or faster than a certain rate\n        var writeTimeoutInstance = null;\n        return ko.dependentObservable({\n            'read': target,\n            'write': function(value) {\n                clearTimeout(writeTimeoutInstance);\n                writeTimeoutInstance = ko.utils.setTimeout(function() {\n                    target(value);\n                }, timeout);\n            }\n        });\n    },\n\n    'rateLimit': function(target, options) {\n        var timeout, method, limitFunction;\n\n        if (typeof options == 'number') {\n            timeout = options;\n        } else {\n            timeout = options['timeout'];\n            method = options['method'];\n        }\n\n        // rateLimit supersedes deferred updates\n        target._deferUpdates = false;\n\n        limitFunction = method == 'notifyWhenChangesStop' ?  debounce : throttle;\n        target.limit(function(callback) {\n            return limitFunction(callback, timeout);\n        });\n    },\n\n    'deferred': function(target, options) {\n        if (options !== true) {\n            throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.')\n        }\n\n        if (!target._deferUpdates) {\n            target._deferUpdates = true;\n            target.limit(function (callback) {\n                var handle,\n                    ignoreUpdates = false;\n                return function () {\n                    if (!ignoreUpdates) {\n                        ko.tasks.cancel(handle);\n                        handle = ko.tasks.schedule(callback);\n\n                        try {\n                            ignoreUpdates = true;\n                            target['notifySubscribers'](undefined, 'dirty');\n                        } finally {\n                            ignoreUpdates = false;\n                        }\n                    }\n                };\n            });\n        }\n    },\n\n    'notify': function(target, notifyWhen) {\n        target[\"equalityComparer\"] = notifyWhen == \"always\" ?\n            null :  // null equalityComparer means to always notify\n            valuesArePrimitiveAndEqual;\n    }\n};\n\nvar primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\nfunction valuesArePrimitiveAndEqual(a, b) {\n    var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\n    return oldValueIsPrimitive ? (a === b) : false;\n}\n\nfunction throttle(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        if (!timeoutInstance) {\n            timeoutInstance = ko.utils.setTimeout(function () {\n                timeoutInstance = undefined;\n                callback();\n            }, timeout);\n        }\n    };\n}\n\nfunction debounce(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        clearTimeout(timeoutInstance);\n        timeoutInstance = ko.utils.setTimeout(callback, timeout);\n    };\n}\n\nfunction applyExtenders(requestedExtenders) {\n    var target = this;\n    if (requestedExtenders) {\n        ko.utils.objectForEach(requestedExtenders, function(key, value) {\n            var extenderHandler = ko.extenders[key];\n            if (typeof extenderHandler == 'function') {\n                target = extenderHandler(target, value) || target;\n            }\n        });\n    }\n    return target;\n}\n\nko.exportSymbol('extenders', ko.extenders);\n\nko.subscription = function (target, callback, disposeCallback) {\n    this._target = target;\n    this.callback = callback;\n    this.disposeCallback = disposeCallback;\n    this.isDisposed = false;\n    ko.exportProperty(this, 'dispose', this.dispose);\n};\nko.subscription.prototype.dispose = function () {\n    this.isDisposed = true;\n    this.disposeCallback();\n};\n\nko.subscribable = function () {\n    ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\n    ko_subscribable_fn.init(this);\n}\n\nvar defaultEvent = \"change\";\n\n// Moved out of \"limit\" to avoid the extra closure\nfunction limitNotifySubscribers(value, event) {\n    if (!event || event === defaultEvent) {\n        this._limitChange(value);\n    } else if (event === 'beforeChange') {\n        this._limitBeforeChange(value);\n    } else {\n        this._origNotifySubscribers(value, event);\n    }\n}\n\nvar ko_subscribable_fn = {\n    init: function(instance) {\n        instance._subscriptions = { \"change\": [] };\n        instance._versionNumber = 1;\n    },\n\n    subscribe: function (callback, callbackTarget, event) {\n        var self = this;\n\n        event = event || defaultEvent;\n        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\n        var subscription = new ko.subscription(self, boundCallback, function () {\n            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\n            if (self.afterSubscriptionRemove)\n                self.afterSubscriptionRemove(event);\n        });\n\n        if (self.beforeSubscriptionAdd)\n            self.beforeSubscriptionAdd(event);\n\n        if (!self._subscriptions[event])\n            self._subscriptions[event] = [];\n        self._subscriptions[event].push(subscription);\n\n        return subscription;\n    },\n\n    \"notifySubscribers\": function (valueToNotify, event) {\n        event = event || defaultEvent;\n        if (event === defaultEvent) {\n            this.updateVersion();\n        }\n        if (this.hasSubscriptionsForEvent(event)) {\n            var subs = event === defaultEvent && this._changeSubscriptions || this._subscriptions[event].slice(0);\n            try {\n                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n                for (var i = 0, subscription; subscription = subs[i]; ++i) {\n                    // In case a subscription was disposed during the arrayForEach cycle, check\n                    // for isDisposed on each subscription before invoking its callback\n                    if (!subscription.isDisposed)\n                        subscription.callback(valueToNotify);\n                }\n            } finally {\n                ko.dependencyDetection.end(); // End suppressing dependency detection\n            }\n        }\n    },\n\n    getVersion: function () {\n        return this._versionNumber;\n    },\n\n    hasChanged: function (versionToCheck) {\n        return this.getVersion() !== versionToCheck;\n    },\n\n    updateVersion: function () {\n        ++this._versionNumber;\n    },\n\n    limit: function(limitFunction) {\n        var self = this, selfIsObservable = ko.isObservable(self),\n            ignoreBeforeChange, notifyNextChange, previousValue, pendingValue, beforeChange = 'beforeChange';\n\n        if (!self._origNotifySubscribers) {\n            self._origNotifySubscribers = self[\"notifySubscribers\"];\n            self[\"notifySubscribers\"] = limitNotifySubscribers;\n        }\n\n        var finish = limitFunction(function() {\n            self._notificationIsPending = false;\n\n            // If an observable provided a reference to itself, access it to get the latest value.\n            // This allows computed observables to delay calculating their value until needed.\n            if (selfIsObservable && pendingValue === self) {\n                pendingValue = self._evalIfChanged ? self._evalIfChanged() : self();\n            }\n            var shouldNotify = notifyNextChange || self.isDifferent(previousValue, pendingValue);\n\n            notifyNextChange = ignoreBeforeChange = false;\n\n            if (shouldNotify) {\n                self._origNotifySubscribers(previousValue = pendingValue);\n            }\n        });\n\n        self._limitChange = function(value) {\n            self._changeSubscriptions = self._subscriptions[defaultEvent].slice(0);\n            self._notificationIsPending = ignoreBeforeChange = true;\n            pendingValue = value;\n            finish();\n        };\n        self._limitBeforeChange = function(value) {\n            if (!ignoreBeforeChange) {\n                previousValue = value;\n                self._origNotifySubscribers(value, beforeChange);\n            }\n        };\n        self._notifyNextChangeIfValueIsDifferent = function() {\n            if (self.isDifferent(previousValue, self.peek(true /*evaluate*/))) {\n                notifyNextChange = true;\n            }\n        };\n    },\n\n    hasSubscriptionsForEvent: function(event) {\n        return this._subscriptions[event] && this._subscriptions[event].length;\n    },\n\n    getSubscriptionsCount: function (event) {\n        if (event) {\n            return this._subscriptions[event] && this._subscriptions[event].length || 0;\n        } else {\n            var total = 0;\n            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\n                if (eventName !== 'dirty')\n                    total += subscriptions.length;\n            });\n            return total;\n        }\n    },\n\n    isDifferent: function(oldValue, newValue) {\n        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\n    },\n\n    extend: applyExtenders\n};\n\nko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\nko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\nko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\n\n// For browsers that support proto assignment, we overwrite the prototype of each\n// observable instance. Since observables are functions, we need Function.prototype\n// to still be in the prototype chain.\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\n}\n\nko.subscribable['fn'] = ko_subscribable_fn;\n\n\nko.isSubscribable = function (instance) {\n    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\n};\n\nko.exportSymbol('subscribable', ko.subscribable);\nko.exportSymbol('isSubscribable', ko.isSubscribable);\n\nko.computedContext = ko.dependencyDetection = (function () {\n    var outerFrames = [],\n        currentFrame,\n        lastId = 0;\n\n    // Return a unique ID that can be assigned to an observable for dependency tracking.\n    // Theoretically, you could eventually overflow the number storage size, resulting\n    // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n    // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n    // take over 285 years to reach that number.\n    // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\n    function getId() {\n        return ++lastId;\n    }\n\n    function begin(options) {\n        outerFrames.push(currentFrame);\n        currentFrame = options;\n    }\n\n    function end() {\n        currentFrame = outerFrames.pop();\n    }\n\n    return {\n        begin: begin,\n\n        end: end,\n\n        registerDependency: function (subscribable) {\n            if (currentFrame) {\n                if (!ko.isSubscribable(subscribable))\n                    throw new Error(\"Only subscribable things can act as dependencies\");\n                currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));\n            }\n        },\n\n        ignore: function (callback, callbackTarget, callbackArgs) {\n            try {\n                begin();\n                return callback.apply(callbackTarget, callbackArgs || []);\n            } finally {\n                end();\n            }\n        },\n\n        getDependenciesCount: function () {\n            if (currentFrame)\n                return currentFrame.computed.getDependenciesCount();\n        },\n\n        isInitial: function() {\n            if (currentFrame)\n                return currentFrame.isInitial;\n        }\n    };\n})();\n\nko.exportSymbol('computedContext', ko.computedContext);\nko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\nko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\n\nko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\nvar observableLatestValue = ko.utils.createSymbolOrString('_latestValue');\n\nko.observable = function (initialValue) {\n    function observable() {\n        if (arguments.length > 0) {\n            // Write\n\n            // Ignore writes if the value hasn't changed\n            if (observable.isDifferent(observable[observableLatestValue], arguments[0])) {\n                observable.valueWillMutate();\n                observable[observableLatestValue] = arguments[0];\n                observable.valueHasMutated();\n            }\n            return this; // Permits chained assignments\n        }\n        else {\n            // Read\n            ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\n            return observable[observableLatestValue];\n        }\n    }\n\n    observable[observableLatestValue] = initialValue;\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(observable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(observable);\n\n    // Inherit from 'observable'\n    ko.utils.setPrototypeOfOrExtend(observable, observableFn);\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](observable, true);\n    }\n\n    return observable;\n}\n\n// Define prototype for observables\nvar observableFn = {\n    'equalityComparer': valuesArePrimitiveAndEqual,\n    peek: function() { return this[observableLatestValue]; },\n    valueHasMutated: function () { this['notifySubscribers'](this[observableLatestValue]); },\n    valueWillMutate: function () { this['notifySubscribers'](this[observableLatestValue], 'beforeChange'); }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observable constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(observableFn, ko.subscribable['fn']);\n}\n\nvar protoProperty = ko.observable.protoProperty = '__ko_proto__';\nobservableFn[protoProperty] = ko.observable;\n\nko.hasPrototype = function(instance, prototype) {\n    if ((instance === null) || (instance === undefined) || (instance[protoProperty] === undefined)) return false;\n    if (instance[protoProperty] === prototype) return true;\n    return ko.hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\n};\n\nko.isObservable = function (instance) {\n    return ko.hasPrototype(instance, ko.observable);\n}\nko.isWriteableObservable = function (instance) {\n    // Observable\n    if ((typeof instance == 'function') && instance[protoProperty] === ko.observable)\n        return true;\n    // Writeable dependent observable\n    if ((typeof instance == 'function') && (instance[protoProperty] === ko.dependentObservable) && (instance.hasWriteFunction))\n        return true;\n    // Anything else\n    return false;\n}\n\nko.exportSymbol('observable', ko.observable);\nko.exportSymbol('isObservable', ko.isObservable);\nko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\nko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\nko.exportSymbol('observable.fn', observableFn);\nko.exportProperty(observableFn, 'peek', observableFn.peek);\nko.exportProperty(observableFn, 'valueHasMutated', observableFn.valueHasMutated);\nko.exportProperty(observableFn, 'valueWillMutate', observableFn.valueWillMutate);\nko.observableArray = function (initialValues) {\n    initialValues = initialValues || [];\n\n    if (typeof initialValues != 'object' || !('length' in initialValues))\n        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\n\n    var result = ko.observable(initialValues);\n    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\n    return result.extend({'trackArrayChanges':true});\n};\n\nko.observableArray['fn'] = {\n    'remove': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var removedValues = [];\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        for (var i = 0; i < underlyingArray.length; i++) {\n            var value = underlyingArray[i];\n            if (predicate(value)) {\n                if (removedValues.length === 0) {\n                    this.valueWillMutate();\n                }\n                removedValues.push(value);\n                underlyingArray.splice(i, 1);\n                i--;\n            }\n        }\n        if (removedValues.length) {\n            this.valueHasMutated();\n        }\n        return removedValues;\n    },\n\n    'removeAll': function (arrayOfValues) {\n        // If you passed zero args, we remove everything\n        if (arrayOfValues === undefined) {\n            var underlyingArray = this.peek();\n            var allValues = underlyingArray.slice(0);\n            this.valueWillMutate();\n            underlyingArray.splice(0, underlyingArray.length);\n            this.valueHasMutated();\n            return allValues;\n        }\n        // If you passed an arg, we interpret it as an array of entries to remove\n        if (!arrayOfValues)\n            return [];\n        return this['remove'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'destroy': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        this.valueWillMutate();\n        for (var i = underlyingArray.length - 1; i >= 0; i--) {\n            var value = underlyingArray[i];\n            if (predicate(value))\n                underlyingArray[i][\"_destroy\"] = true;\n        }\n        this.valueHasMutated();\n    },\n\n    'destroyAll': function (arrayOfValues) {\n        // If you passed zero args, we destroy everything\n        if (arrayOfValues === undefined)\n            return this['destroy'](function() { return true });\n\n        // If you passed an arg, we interpret it as an array of entries to destroy\n        if (!arrayOfValues)\n            return [];\n        return this['destroy'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'indexOf': function (item) {\n        var underlyingArray = this();\n        return ko.utils.arrayIndexOf(underlyingArray, item);\n    },\n\n    'replace': function(oldItem, newItem) {\n        var index = this['indexOf'](oldItem);\n        if (index >= 0) {\n            this.valueWillMutate();\n            this.peek()[index] = newItem;\n            this.valueHasMutated();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observableArray constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\n}\n\n// Populate ko.observableArray.fn with read/write functions from native arrays\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\nko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n        // (for consistency with mutating regular observables)\n        var underlyingArray = this.peek();\n        this.valueWillMutate();\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n        this.valueHasMutated();\n        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n        return methodCallResult === underlyingArray ? this : methodCallResult;\n    };\n});\n\n// Populate ko.observableArray.fn with read-only functions from native arrays\nko.utils.arrayForEach([\"slice\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        var underlyingArray = this();\n        return underlyingArray[methodName].apply(underlyingArray, arguments);\n    };\n});\n\nko.exportSymbol('observableArray', ko.observableArray);\nvar arrayChangeEventName = 'arrayChange';\nko.extenders['trackArrayChanges'] = function(target, options) {\n    // Use the provided options--each call to trackArrayChanges overwrites the previously set options\n    target.compareArrayOptions = {};\n    if (options && typeof options == \"object\") {\n        ko.utils.extend(target.compareArrayOptions, options);\n    }\n    target.compareArrayOptions['sparse'] = true;\n\n    // Only modify the target observable once\n    if (target.cacheDiffForKnownOperation) {\n        return;\n    }\n    var trackingChanges = false,\n        cachedDiff = null,\n        arrayChangeSubscription,\n        pendingNotifications = 0,\n        underlyingNotifySubscribersFunction,\n        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\n    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n    target.beforeSubscriptionAdd = function (event) {\n        if (underlyingBeforeSubscriptionAddFunction)\n            underlyingBeforeSubscriptionAddFunction.call(target, event);\n        if (event === arrayChangeEventName) {\n            trackChanges();\n        }\n    };\n    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n    target.afterSubscriptionRemove = function (event) {\n        if (underlyingAfterSubscriptionRemoveFunction)\n            underlyingAfterSubscriptionRemoveFunction.call(target, event);\n        if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n            if (underlyingNotifySubscribersFunction) {\n                target['notifySubscribers'] = underlyingNotifySubscribersFunction;\n                underlyingNotifySubscribersFunction = undefined;\n            }\n            arrayChangeSubscription.dispose();\n            trackingChanges = false;\n        }\n    };\n\n    function trackChanges() {\n        // Calling 'trackChanges' multiple times is the same as calling it once\n        if (trackingChanges) {\n            return;\n        }\n\n        trackingChanges = true;\n\n        // Intercept \"notifySubscribers\" to track how many times it was called.\n        underlyingNotifySubscribersFunction = target['notifySubscribers'];\n        target['notifySubscribers'] = function(valueToNotify, event) {\n            if (!event || event === defaultEvent) {\n                ++pendingNotifications;\n            }\n            return underlyingNotifySubscribersFunction.apply(this, arguments);\n        };\n\n        // Each time the array changes value, capture a clone so that on the next\n        // change it's possible to produce a diff\n        var previousContents = [].concat(target.peek() || []);\n        cachedDiff = null;\n        arrayChangeSubscription = target.subscribe(function(currentContents) {\n            // Make a copy of the current contents and ensure it's an array\n            currentContents = [].concat(currentContents || []);\n\n            // Compute the diff and issue notifications, but only if someone is listening\n            if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n                var changes = getChanges(previousContents, currentContents);\n            }\n\n            // Eliminate references to the old, removed items, so they can be GCed\n            previousContents = currentContents;\n            cachedDiff = null;\n            pendingNotifications = 0;\n\n            if (changes && changes.length) {\n                target['notifySubscribers'](changes, arrayChangeEventName);\n            }\n        });\n    }\n\n    function getChanges(previousContents, currentContents) {\n        // We try to re-use cached diffs.\n        // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\n        // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\n        // notifications are issued immediately so we wouldn't be queueing up more than one.\n        if (!cachedDiff || pendingNotifications > 1) {\n            cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions);\n        }\n\n        return cachedDiff;\n    }\n\n    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\n        // Only run if we're currently tracking changes for this observable array\n        // and there aren't any pending deferred notifications.\n        if (!trackingChanges || pendingNotifications) {\n            return;\n        }\n        var diff = [],\n            arrayLength = rawArray.length,\n            argsLength = args.length,\n            offset = 0;\n\n        function pushDiff(status, value, index) {\n            return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\n        }\n        switch (operationName) {\n            case 'push':\n                offset = arrayLength;\n            case 'unshift':\n                for (var index = 0; index < argsLength; index++) {\n                    pushDiff('added', args[index], offset + index);\n                }\n                break;\n\n            case 'pop':\n                offset = arrayLength - 1;\n            case 'shift':\n                if (arrayLength) {\n                    pushDiff('deleted', rawArray[offset], offset);\n                }\n                break;\n\n            case 'splice':\n                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n                var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n                    endAddIndex = startIndex + argsLength - 2,\n                    endIndex = Math.max(endDeleteIndex, endAddIndex),\n                    additions = [], deletions = [];\n                for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n                    if (index < endDeleteIndex)\n                        deletions.push(pushDiff('deleted', rawArray[index], index));\n                    if (index < endAddIndex)\n                        additions.push(pushDiff('added', args[argsIndex], index));\n                }\n                ko.utils.findMovesInArrayComparison(deletions, additions);\n                break;\n\n            default:\n                return;\n        }\n        cachedDiff = diff;\n    };\n};\nvar computedState = ko.utils.createSymbolOrString('_state');\n\nko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\n    if (typeof evaluatorFunctionOrOptions === \"object\") {\n        // Single-parameter syntax - everything is on this \"options\" param\n        options = evaluatorFunctionOrOptions;\n    } else {\n        // Multi-parameter syntax - construct the options according to the params passed\n        options = options || {};\n        if (evaluatorFunctionOrOptions) {\n            options[\"read\"] = evaluatorFunctionOrOptions;\n        }\n    }\n    if (typeof options[\"read\"] != \"function\")\n        throw Error(\"Pass a function that returns the value of the ko.computed\");\n\n    var writeFunction = options[\"write\"];\n    var state = {\n        latestValue: undefined,\n        isStale: true,\n        isDirty: true,\n        isBeingEvaluated: false,\n        suppressDisposalUntilDisposeWhenReturnsFalse: false,\n        isDisposed: false,\n        pure: false,\n        isSleeping: false,\n        readFunction: options[\"read\"],\n        evaluatorFunctionTarget: evaluatorFunctionTarget || options[\"owner\"],\n        disposeWhenNodeIsRemoved: options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\n        disposeWhen: options[\"disposeWhen\"] || options.disposeWhen,\n        domNodeDisposalCallback: null,\n        dependencyTracking: {},\n        dependenciesCount: 0,\n        evaluationTimeoutInstance: null\n    };\n\n    function computedObservable() {\n        if (arguments.length > 0) {\n            if (typeof writeFunction === \"function\") {\n                // Writing a value\n                writeFunction.apply(state.evaluatorFunctionTarget, arguments);\n            } else {\n                throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n            }\n            return this; // Permits chained assignments\n        } else {\n            // Reading the value\n            ko.dependencyDetection.registerDependency(computedObservable);\n            if (state.isDirty || (state.isSleeping && computedObservable.haveDependenciesChanged())) {\n                computedObservable.evaluateImmediate();\n            }\n            return state.latestValue;\n        }\n    }\n\n    computedObservable[computedState] = state;\n    computedObservable.hasWriteFunction = typeof writeFunction === \"function\";\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(computedObservable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(computedObservable);\n\n    // Inherit from 'computed'\n    ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn);\n\n    if (options['pure']) {\n        state.pure = true;\n        state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\n        ko.utils.extend(computedObservable, pureComputedOverrides);\n    } else if (options['deferEvaluation']) {\n        ko.utils.extend(computedObservable, deferEvaluationOverrides);\n    }\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](computedObservable, true);\n    }\n\n    if (DEBUG) {\n        // #1731 - Aid debugging by exposing the computed's options\n        computedObservable[\"_options\"] = options;\n    }\n\n    if (state.disposeWhenNodeIsRemoved) {\n        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\n        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\n        // we'll prevent disposal until \"disposeWhen\" first returns false.\n        state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\n\n        // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\n        // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\n        // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\n        // be documented or used by application code, as it's likely to change in a future version of KO.\n        if (!state.disposeWhenNodeIsRemoved.nodeType) {\n            state.disposeWhenNodeIsRemoved = null;\n        }\n    }\n\n    // Evaluate, unless sleeping or deferEvaluation is true\n    if (!state.isSleeping && !options['deferEvaluation']) {\n        computedObservable.evaluateImmediate();\n    }\n\n    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\n    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\n    if (state.disposeWhenNodeIsRemoved && computedObservable.isActive()) {\n        ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function () {\n            computedObservable.dispose();\n        });\n    }\n\n    return computedObservable;\n};\n\n// Utility function that disposes a given dependencyTracking entry\nfunction computedDisposeDependencyCallback(id, entryToDispose) {\n    if (entryToDispose !== null && entryToDispose.dispose) {\n        entryToDispose.dispose();\n    }\n}\n\n// This function gets called each time a dependency is detected while evaluating a computed.\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\nfunction computedBeginDependencyDetectionCallback(subscribable, id) {\n    var computedObservable = this.computedObservable,\n        state = computedObservable[computedState];\n    if (!state.isDisposed) {\n        if (this.disposalCount && this.disposalCandidates[id]) {\n            // Don't want to dispose this subscription, as it's still being used\n            computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]);\n            this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\n            --this.disposalCount;\n        } else if (!state.dependencyTracking[id]) {\n            // Brand new subscription - add it\n            computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? { _target: subscribable } : computedObservable.subscribeToDependency(subscribable));\n        }\n        // If the observable we've accessed has a pending notification, ensure we get notified of the actual final value (bypass equality checks)\n        if (subscribable._notificationIsPending) {\n            subscribable._notifyNextChangeIfValueIsDifferent();\n        }\n    }\n}\n\nvar computedFn = {\n    \"equalityComparer\": valuesArePrimitiveAndEqual,\n    getDependenciesCount: function () {\n        return this[computedState].dependenciesCount;\n    },\n    addDependencyTracking: function (id, target, trackingObj) {\n        if (this[computedState].pure && target === this) {\n            throw Error(\"A 'pure' computed must not be called recursively\");\n        }\n\n        this[computedState].dependencyTracking[id] = trackingObj;\n        trackingObj._order = this[computedState].dependenciesCount++;\n        trackingObj._version = target.getVersion();\n    },\n    haveDependenciesChanged: function () {\n        var id, dependency, dependencyTracking = this[computedState].dependencyTracking;\n        for (id in dependencyTracking) {\n            if (dependencyTracking.hasOwnProperty(id)) {\n                dependency = dependencyTracking[id];\n                if ((this._evalDelayed && dependency._target._notificationIsPending) || dependency._target.hasChanged(dependency._version)) {\n                    return true;\n                }\n            }\n        }\n    },\n    markDirty: function () {\n        // Process \"dirty\" events if we can handle delayed notifications\n        if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\n            this._evalDelayed(false /*isChange*/);\n        }\n    },\n    isActive: function () {\n        var state = this[computedState];\n        return state.isDirty || state.dependenciesCount > 0;\n    },\n    respondToChange: function () {\n        // Ignore \"change\" events if we've already scheduled a delayed notification\n        if (!this._notificationIsPending) {\n            this.evaluatePossiblyAsync();\n        } else if (this[computedState].isDirty) {\n            this[computedState].isStale = true;\n        }\n    },\n    subscribeToDependency: function (target) {\n        if (target._deferUpdates && !this[computedState].disposeWhenNodeIsRemoved) {\n            var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\n                changeSub = target.subscribe(this.respondToChange, this);\n            return {\n                _target: target,\n                dispose: function () {\n                    dirtySub.dispose();\n                    changeSub.dispose();\n                }\n            };\n        } else {\n            return target.subscribe(this.evaluatePossiblyAsync, this);\n        }\n    },\n    evaluatePossiblyAsync: function () {\n        var computedObservable = this,\n            throttleEvaluationTimeout = computedObservable['throttleEvaluation'];\n        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n            clearTimeout(this[computedState].evaluationTimeoutInstance);\n            this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {\n                computedObservable.evaluateImmediate(true /*notifyChange*/);\n            }, throttleEvaluationTimeout);\n        } else if (computedObservable._evalDelayed) {\n            computedObservable._evalDelayed(true /*isChange*/);\n        } else {\n            computedObservable.evaluateImmediate(true /*notifyChange*/);\n        }\n    },\n    evaluateImmediate: function (notifyChange) {\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            disposeWhen = state.disposeWhen,\n            changed = false;\n\n        if (state.isBeingEvaluated) {\n            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n            return;\n        }\n\n        // Do not evaluate (and possibly capture new dependencies) if disposed\n        if (state.isDisposed) {\n            return;\n        }\n\n        if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\n            // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\n            if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\n                computedObservable.dispose();\n                return;\n            }\n        } else {\n            // It just did return false, so we can stop suppressing now\n            state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\n        }\n\n        state.isBeingEvaluated = true;\n        try {\n            changed = this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\n        } finally {\n            state.isBeingEvaluated = false;\n        }\n\n        if (!state.dependenciesCount) {\n            computedObservable.dispose();\n        }\n\n        return changed;\n    },\n    evaluateImmediate_CallReadWithDependencyDetection: function (notifyChange) {\n        // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\n        // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\n        // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\n\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            changed = false;\n\n        // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n        // Then, during evaluation, we cross off any that are in fact still being used.\n        var isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\n            dependencyDetectionContext = {\n                computedObservable: computedObservable,\n                disposalCandidates: state.dependencyTracking,\n                disposalCount: state.dependenciesCount\n            };\n\n        ko.dependencyDetection.begin({\n            callbackTarget: dependencyDetectionContext,\n            callback: computedBeginDependencyDetectionCallback,\n            computed: computedObservable,\n            isInitial: isInitial\n        });\n\n        state.dependencyTracking = {};\n        state.dependenciesCount = 0;\n\n        var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\n\n        if (computedObservable.isDifferent(state.latestValue, newValue)) {\n            if (!state.isSleeping) {\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"beforeChange\");\n            }\n\n            state.latestValue = newValue;\n            if (DEBUG) computedObservable._latestValue = newValue;\n\n            if (state.isSleeping) {\n                computedObservable.updateVersion();\n            } else if (notifyChange) {\n                computedObservable[\"notifySubscribers\"](state.latestValue);\n            }\n\n            changed = true;\n        }\n\n        if (isInitial) {\n            computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n        }\n\n        return changed;\n    },\n    evaluateImmediate_CallReadThenEndDependencyDetection: function (state, dependencyDetectionContext) {\n        // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\n        // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\n        // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\n        // overhead of computed evaluation (on V8 at least).\n\n        try {\n            var readFunction = state.readFunction;\n            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\n        } finally {\n            ko.dependencyDetection.end();\n\n            // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n            if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\n                ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\n            }\n\n            state.isStale = state.isDirty = false;\n        }\n    },\n    peek: function (evaluate) {\n        // By default, peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n        // Pass in true to evaluate if needed.\n        var state = this[computedState];\n        if ((state.isDirty && (evaluate || !state.dependenciesCount)) || (state.isSleeping && this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return state.latestValue;\n    },\n    limit: function (limitFunction) {\n        // Override the limit function with one that delays evaluation as well\n        ko.subscribable['fn'].limit.call(this, limitFunction);\n        this._evalIfChanged = function () {\n            if (this[computedState].isStale) {\n                this.evaluateImmediate();\n            } else {\n                this[computedState].isDirty = false;\n            }\n            return this[computedState].latestValue;\n        };\n        this._evalDelayed = function (isChange) {\n            this._limitBeforeChange(this[computedState].latestValue);\n\n            // Mark as dirty\n            this[computedState].isDirty = true;\n            if (isChange) {\n                this[computedState].isStale = true;\n            }\n\n            // Pass the observable to the \"limit\" code, which will evaluate it when\n            // it's time to do the notification.\n            this._limitChange(this);\n        };\n    },\n    dispose: function () {\n        var state = this[computedState];\n        if (!state.isSleeping && state.dependencyTracking) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose)\n                    dependency.dispose();\n            });\n        }\n        if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\n            ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\n        }\n        state.dependencyTracking = null;\n        state.dependenciesCount = 0;\n        state.isDisposed = true;\n        state.isStale = false;\n        state.isDirty = false;\n        state.isSleeping = false;\n        state.disposeWhenNodeIsRemoved = null;\n    }\n};\n\nvar pureComputedOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // If asleep, wake up the computed by subscribing to any dependencies.\n        var computedObservable = this,\n            state = computedObservable[computedState];\n        if (!state.isDisposed && state.isSleeping && event == 'change') {\n            state.isSleeping = false;\n            if (state.isStale || computedObservable.haveDependenciesChanged()) {\n                state.dependencyTracking = null;\n                state.dependenciesCount = 0;\n                if (computedObservable.evaluateImmediate()) {\n                    computedObservable.updateVersion();\n                }\n            } else {\n                // First put the dependencies in order\n                var dependeciesOrder = [];\n                ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                    dependeciesOrder[dependency._order] = id;\n                });\n                // Next, subscribe to each one\n                ko.utils.arrayForEach(dependeciesOrder, function (id, order) {\n                    var dependency = state.dependencyTracking[id],\n                        subscription = computedObservable.subscribeToDependency(dependency._target);\n                    subscription._order = order;\n                    subscription._version = dependency._version;\n                    state.dependencyTracking[id] = subscription;\n                });\n            }\n            if (!state.isDisposed) {     // test since evaluating could trigger disposal\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n            }\n        }\n    },\n    afterSubscriptionRemove: function (event) {\n        var state = this[computedState];\n        if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose) {\n                    state.dependencyTracking[id] = {\n                        _target: dependency._target,\n                        _order: dependency._order,\n                        _version: dependency._version\n                    };\n                    dependency.dispose();\n                }\n            });\n            state.isSleeping = true;\n            this[\"notifySubscribers\"](undefined, \"asleep\");\n        }\n    },\n    getVersion: function () {\n        // Because a pure computed is not automatically updated while it is sleeping, we can't\n        // simply return the version number. Instead, we check if any of the dependencies have\n        // changed and conditionally re-evaluate the computed observable.\n        var state = this[computedState];\n        if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return ko.subscribable['fn'].getVersion.call(this);\n    }\n};\n\nvar deferEvaluationOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\n        if (event == 'change' || event == 'beforeChange') {\n            this.peek();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.computed constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(computedFn, ko.subscribable['fn']);\n}\n\n// Set the proto chain values for ko.hasPrototype\nvar protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\nko.computed[protoProp] = ko.observable;\ncomputedFn[protoProp] = ko.computed;\n\nko.isComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed);\n};\n\nko.isPureComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed)\n        && instance[computedState] && instance[computedState].pure;\n};\n\nko.exportSymbol('computed', ko.computed);\nko.exportSymbol('dependentObservable', ko.computed);    // export ko.dependentObservable for backwards compatibility (1.x)\nko.exportSymbol('isComputed', ko.isComputed);\nko.exportSymbol('isPureComputed', ko.isPureComputed);\nko.exportSymbol('computed.fn', computedFn);\nko.exportProperty(computedFn, 'peek', computedFn.peek);\nko.exportProperty(computedFn, 'dispose', computedFn.dispose);\nko.exportProperty(computedFn, 'isActive', computedFn.isActive);\nko.exportProperty(computedFn, 'getDependenciesCount', computedFn.getDependenciesCount);\n\nko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n    if (typeof evaluatorFunctionOrOptions === 'function') {\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\n    } else {\n        evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\n        evaluatorFunctionOrOptions['pure'] = true;\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n    }\n}\nko.exportSymbol('pureComputed', ko.pureComputed);\n\n(function() {\n    var maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\n\n    ko.toJS = function(rootObject) {\n        if (arguments.length == 0)\n            throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n\n        // We just unwrap everything at every level in the object graph\n        return mapJsObjectGraph(rootObject, function(valueToMap) {\n            // Loop because an observable's value might in turn be another observable wrapper\n            for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\n                valueToMap = valueToMap();\n            return valueToMap;\n        });\n    };\n\n    ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\n        var plainJavaScriptObject = ko.toJS(rootObject);\n        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\n    };\n\n    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\n        visitedObjects = visitedObjects || new objectLookup();\n\n        rootObject = mapInputCallback(rootObject);\n        var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\n        if (!canHaveProperties)\n            return rootObject;\n\n        var outputProperties = rootObject instanceof Array ? [] : {};\n        visitedObjects.save(rootObject, outputProperties);\n\n        visitPropertiesOrArrayEntries(rootObject, function(indexer) {\n            var propertyValue = mapInputCallback(rootObject[indexer]);\n\n            switch (typeof propertyValue) {\n                case \"boolean\":\n                case \"number\":\n                case \"string\":\n                case \"function\":\n                    outputProperties[indexer] = propertyValue;\n                    break;\n                case \"object\":\n                case \"undefined\":\n                    var previouslyMappedValue = visitedObjects.get(propertyValue);\n                    outputProperties[indexer] = (previouslyMappedValue !== undefined)\n                        ? previouslyMappedValue\n                        : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n                    break;\n            }\n        });\n\n        return outputProperties;\n    }\n\n    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n        if (rootObject instanceof Array) {\n            for (var i = 0; i < rootObject.length; i++)\n                visitorCallback(i);\n\n            // For arrays, also respect toJSON property for custom mappings (fixes #278)\n            if (typeof rootObject['toJSON'] == 'function')\n                visitorCallback('toJSON');\n        } else {\n            for (var propertyName in rootObject) {\n                visitorCallback(propertyName);\n            }\n        }\n    };\n\n    function objectLookup() {\n        this.keys = [];\n        this.values = [];\n    };\n\n    objectLookup.prototype = {\n        constructor: objectLookup,\n        save: function(key, value) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            if (existingIndex >= 0)\n                this.values[existingIndex] = value;\n            else {\n                this.keys.push(key);\n                this.values.push(value);\n            }\n        },\n        get: function(key) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\n        }\n    };\n})();\n\nko.exportSymbol('toJS', ko.toJS);\nko.exportSymbol('toJSON', ko.toJSON);\n(function () {\n    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\n\n    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\n    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\n    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\n    ko.selectExtensions = {\n        readValue : function(element) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    if (element[hasDomDataExpandoProperty] === true)\n                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\n                    return ko.utils.ieVersion <= 7\n                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\n                        : element.value;\n                case 'select':\n                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\n                default:\n                    return element.value;\n            }\n        },\n\n        writeValue: function(element, value, allowUnset) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    switch(typeof value) {\n                        case \"string\":\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\n                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\n                                delete element[hasDomDataExpandoProperty];\n                            }\n                            element.value = value;\n                            break;\n                        default:\n                            // Store arbitrary object using DomData\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\n                            element[hasDomDataExpandoProperty] = true;\n\n                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\n                            element.value = typeof value === \"number\" ? value : \"\";\n                            break;\n                    }\n                    break;\n                case 'select':\n                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\n                        value = undefined;\n                    var selection = -1;\n                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\n                        optionValue = ko.selectExtensions.readValue(element.options[i]);\n                        // Include special check to handle selecting a caption with a blank string value\n                        if (optionValue == value || (optionValue == \"\" && value === undefined)) {\n                            selection = i;\n                            break;\n                        }\n                    }\n                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\n                        element.selectedIndex = selection;\n                    }\n                    break;\n                default:\n                    if ((value === null) || (value === undefined))\n                        value = \"\";\n                    element.value = value;\n                    break;\n            }\n        }\n    };\n})();\n\nko.exportSymbol('selectExtensions', ko.selectExtensions);\nko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\nko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\nko.expressionRewriting = (function () {\n    var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\n\n    // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\n    // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\n    // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\n    var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\n\n    function getWriteableValue(expression) {\n        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\n            return false;\n        var match = expression.match(javaScriptAssignmentTarget);\n        return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\n    }\n\n    // The following regular expressions will be used to split an object-literal string into tokens\n\n        // These two match strings, either with double quotes or single quotes\n    var stringDouble = '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"',\n        stringSingle = \"'(?:[^'\\\\\\\\]|\\\\\\\\.)*'\",\n        // Matches a regular expression (text enclosed by slashes), but will also match sets of divisions\n        // as a regular expression (this is handled by the parsing loop below).\n        stringRegexp = '/(?:[^/\\\\\\\\]|\\\\\\\\.)*/\\w*',\n        // These characters have special meaning to the parser and must not appear in the middle of a\n        // token, except as part of a string.\n        specials = ',\"\\'{}()/:[\\\\]',\n        // Match text (at least two characters) that does not contain any of the above special characters,\n        // although some of the special characters are allowed to start it (all but the colon and comma).\n        // The text can contain spaces, but leading or trailing spaces are skipped.\n        everyThingElse = '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\n        // Match any non-space character not matched already. This will match colons and commas, since they're\n        // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\n        // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\n        oneNotSpace = '[^\\\\s]',\n\n        // Create the actual regular expression by or-ing the above strings. The order is important.\n        bindingToken = RegExp(stringDouble + '|' + stringSingle + '|' + stringRegexp + '|' + everyThingElse + '|' + oneNotSpace, 'g'),\n\n        // Match end of previous token to determine whether a slash is a division or regex.\n        divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\n        keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\n\n    function parseObjectLiteral(objectLiteralString) {\n        // Trim leading and trailing spaces from the string\n        var str = ko.utils.stringTrim(objectLiteralString);\n\n        // Trim braces '{' surrounding the whole object literal\n        if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\n\n        // Split into tokens\n        var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\n\n        if (toks) {\n            // Append a comma so that we don't need a separate code block to deal with the last item\n            toks.push(',');\n\n            for (var i = 0, tok; tok = toks[i]; ++i) {\n                var c = tok.charCodeAt(0);\n                // A comma signals the end of a key/value pair if depth is zero\n                if (c === 44) { // \",\"\n                    if (depth <= 0) {\n                        result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\n                        key = depth = 0;\n                        values = [];\n                        continue;\n                    }\n                // Simply skip the colon that separates the name and value\n                } else if (c === 58) { // \":\"\n                    if (!depth && !key && values.length === 1) {\n                        key = values.pop();\n                        continue;\n                    }\n                // A set of slashes is initially matched as a regular expression, but could be division\n                } else if (c === 47 && i && tok.length > 1) {  // \"/\"\n                    // Look at the end of the previous token to determine if the slash is actually division\n                    var match = toks[i-1].match(divisionLookBehind);\n                    if (match && !keywordRegexLookBehind[match[0]]) {\n                        // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\n                        str = str.substr(str.indexOf(tok) + 1);\n                        toks = str.match(bindingToken);\n                        toks.push(',');\n                        i = -1;\n                        // Continue with just the slash\n                        tok = '/';\n                    }\n                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\n                } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\n                    ++depth;\n                } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\n                    --depth;\n                // The key will be the first token; if it's a string, trim the quotes\n                } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\n                    tok = tok.slice(1, -1);\n                }\n                values.push(tok);\n            }\n        }\n        return result;\n    }\n\n    // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\n    var twoWayBindings = {};\n\n    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\n        bindingOptions = bindingOptions || {};\n\n        function processKeyValue(key, val) {\n            var writableVal;\n            function callPreprocessHook(obj) {\n                return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\n            }\n            if (!bindingParams) {\n                if (!callPreprocessHook(ko['getBindingHandler'](key)))\n                    return;\n\n                if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\n                    // For two-way bindings, provide a write method in case the value\n                    // isn't a writable observable.\n                    propertyAccessorResultStrings.push(\"'\" + key + \"':function(_z){\" + writableVal + \"=_z}\");\n                }\n            }\n            // Values are wrapped in a function so that each value can be accessed independently\n            if (makeValueAccessors) {\n                val = 'function(){return ' + val + ' }';\n            }\n            resultStrings.push(\"'\" + key + \"':\" + val);\n        }\n\n        var resultStrings = [],\n            propertyAccessorResultStrings = [],\n            makeValueAccessors = bindingOptions['valueAccessors'],\n            bindingParams = bindingOptions['bindingParams'],\n            keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\n                parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\n\n        ko.utils.arrayForEach(keyValueArray, function(keyValue) {\n            processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\n        });\n\n        if (propertyAccessorResultStrings.length)\n            processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\n\n        return resultStrings.join(\",\");\n    }\n\n    return {\n        bindingRewriteValidators: [],\n\n        twoWayBindings: twoWayBindings,\n\n        parseObjectLiteral: parseObjectLiteral,\n\n        preProcessBindings: preProcessBindings,\n\n        keyValueArrayContainsKey: function(keyValueArray, key) {\n            for (var i = 0; i < keyValueArray.length; i++)\n                if (keyValueArray[i]['key'] == key)\n                    return true;\n            return false;\n        },\n\n        // Internal, private KO utility for updating model properties from within bindings\n        // property:            If the property being updated is (or might be) an observable, pass it here\n        //                      If it turns out to be a writable observable, it will be written to directly\n        // allBindings:         An object with a get method to retrieve bindings in the current execution context.\n        //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\n        // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\n        // value:               The value to be written\n        // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\n        //                      it is !== existing value on that writable observable\n        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\n            if (!property || !ko.isObservable(property)) {\n                var propWriters = allBindings.get('_ko_property_writers');\n                if (propWriters && propWriters[key])\n                    propWriters[key](value);\n            } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\n                property(value);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('expressionRewriting', ko.expressionRewriting);\nko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\nko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\nko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\n\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\n// as an internal implementation detail in the short term.\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\nko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\n\n// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\n// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\nko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\nko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\n(function() {\n    // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\n    // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\n    // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\n    // of that virtual hierarchy\n    //\n    // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\n    // without having to scatter special cases all over the binding and templating code.\n\n    // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\n    // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\n    // So, use node.text where available, and node.nodeValue elsewhere\n    var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\n\n    var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\n    var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\n    var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\n\n    function isStartComment(node) {\n        return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function isEndComment(node) {\n        return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function getVirtualChildren(startComment, allowUnbalanced) {\n        var currentNode = startComment;\n        var depth = 1;\n        var children = [];\n        while (currentNode = currentNode.nextSibling) {\n            if (isEndComment(currentNode)) {\n                depth--;\n                if (depth === 0)\n                    return children;\n            }\n\n            children.push(currentNode);\n\n            if (isStartComment(currentNode))\n                depth++;\n        }\n        if (!allowUnbalanced)\n            throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\n        return null;\n    }\n\n    function getMatchingEndComment(startComment, allowUnbalanced) {\n        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\n        if (allVirtualChildren) {\n            if (allVirtualChildren.length > 0)\n                return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\n            return startComment.nextSibling;\n        } else\n            return null; // Must have no matching end comment, and allowUnbalanced is true\n    }\n\n    function getUnbalancedChildTags(node) {\n        // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\n        //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\n        var childNode = node.firstChild, captureRemaining = null;\n        if (childNode) {\n            do {\n                if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\n                    captureRemaining.push(childNode);\n                else if (isStartComment(childNode)) {\n                    var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\n                    if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\n                        childNode = matchingEndComment;\n                    else\n                        captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\n                } else if (isEndComment(childNode)) {\n                    captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\n                }\n            } while (childNode = childNode.nextSibling);\n        }\n        return captureRemaining;\n    }\n\n    ko.virtualElements = {\n        allowedBindings: {},\n\n        childNodes: function(node) {\n            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\n        },\n\n        emptyNode: function(node) {\n            if (!isStartComment(node))\n                ko.utils.emptyDomNode(node);\n            else {\n                var virtualChildren = ko.virtualElements.childNodes(node);\n                for (var i = 0, j = virtualChildren.length; i < j; i++)\n                    ko.removeNode(virtualChildren[i]);\n            }\n        },\n\n        setDomNodeChildren: function(node, childNodes) {\n            if (!isStartComment(node))\n                ko.utils.setDomNodeChildren(node, childNodes);\n            else {\n                ko.virtualElements.emptyNode(node);\n                var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\n            }\n        },\n\n        prepend: function(containerNode, nodeToPrepend) {\n            if (!isStartComment(containerNode)) {\n                if (containerNode.firstChild)\n                    containerNode.insertBefore(nodeToPrepend, containerNode.firstChild);\n                else\n                    containerNode.appendChild(nodeToPrepend);\n            } else {\n                // Start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling);\n            }\n        },\n\n        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\n            if (!insertAfterNode) {\n                ko.virtualElements.prepend(containerNode, nodeToInsert);\n            } else if (!isStartComment(containerNode)) {\n                // Insert after insertion point\n                if (insertAfterNode.nextSibling)\n                    containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n                else\n                    containerNode.appendChild(nodeToInsert);\n            } else {\n                // Children of start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n            }\n        },\n\n        firstChild: function(node) {\n            if (!isStartComment(node))\n                return node.firstChild;\n            if (!node.nextSibling || isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        nextSibling: function(node) {\n            if (isStartComment(node))\n                node = getMatchingEndComment(node);\n            if (node.nextSibling && isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        hasBindingValue: isStartComment,\n\n        virtualNodeBindingValue: function(node) {\n            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\n            return regexMatch ? regexMatch[1] : null;\n        },\n\n        normaliseVirtualElementDomStructure: function(elementVerified) {\n            // Workaround for https://github.com/SteveSanderson/knockout/issues/155\n            // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\n            // that are direct descendants of <ul> into the preceding <li>)\n            if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\n                return;\n\n            // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\n            // must be intended to appear *after* that child, so move them there.\n            var childNode = elementVerified.firstChild;\n            if (childNode) {\n                do {\n                    if (childNode.nodeType === 1) {\n                        var unbalancedTags = getUnbalancedChildTags(childNode);\n                        if (unbalancedTags) {\n                            // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\n                            var nodeToInsertBefore = childNode.nextSibling;\n                            for (var i = 0; i < unbalancedTags.length; i++) {\n                                if (nodeToInsertBefore)\n                                    elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\n                                else\n                                    elementVerified.appendChild(unbalancedTags[i]);\n                            }\n                        }\n                    }\n                } while (childNode = childNode.nextSibling);\n            }\n        }\n    };\n})();\nko.exportSymbol('virtualElements', ko.virtualElements);\nko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\nko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\n//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\nko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\n//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\nko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\nko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\n(function() {\n    var defaultBindingAttributeName = \"data-bind\";\n\n    ko.bindingProvider = function() {\n        this.bindingCache = {};\n    };\n\n    ko.utils.extend(ko.bindingProvider.prototype, {\n        'nodeHasBindings': function(node) {\n            switch (node.nodeType) {\n                case 1: // Element\n                    return node.getAttribute(defaultBindingAttributeName) != null\n                        || ko.components['getComponentNameForNode'](node);\n                case 8: // Comment node\n                    return ko.virtualElements.hasBindingValue(node);\n                default: return false;\n            }\n        },\n\n        'getBindings': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\n        },\n\n        'getBindingAccessors': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'getBindingsString': function(node, bindingContext) {\n            switch (node.nodeType) {\n                case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\n                case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\n                default: return null;\n            }\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'parseBindingsString': function(bindingsString, bindingContext, node, options) {\n            try {\n                var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\n                return bindingFunction(bindingContext, node);\n            } catch (ex) {\n                ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\n                throw ex;\n            }\n        }\n    });\n\n    ko.bindingProvider['instance'] = new ko.bindingProvider();\n\n    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\n        var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\n        return cache[cacheKey]\n            || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\n    }\n\n    function createBindingsStringEvaluator(bindingsString, options) {\n        // Build the source for a function that evaluates \"expression\"\n        // For each scope variable, add an extra level of \"with\" nesting\n        // Example result: with(sc1) { with(sc0) { return (expression) } }\n        var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\n            functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\n        return new Function(\"$context\", \"$element\", functionBody);\n    }\n})();\n\nko.exportSymbol('bindingProvider', ko.bindingProvider);\n(function () {\n    ko.bindingHandlers = {};\n\n    // The following element types will not be recursed into during binding.\n    var bindingDoesNotRecurseIntoElementTypes = {\n        // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\n        // because it's unexpected and a potential XSS issue.\n        // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\n        // and because such elements' contents are always intended to be bound in a different context\n        // from where they appear in the document.\n        'script': true,\n        'textarea': true,\n        'template': true\n    };\n\n    // Use an overridable method for retrieving binding handlers so that a plugins may support dynamically created handlers\n    ko['getBindingHandler'] = function(bindingKey) {\n        return ko.bindingHandlers[bindingKey];\n    };\n\n    // The ko.bindingContext constructor is only called directly to create the root context. For child\n    // contexts, use bindingContext.createChildContext or bindingContext.extend.\n    ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback, options) {\n\n        // The binding context object includes static properties for the current, parent, and root view models.\n        // If a view model is actually stored in an observable, the corresponding binding context object, and\n        // any child contexts, must be updated when the view model is changed.\n        function updateContext() {\n            // Most of the time, the context will directly get a view model object, but if a function is given,\n            // we call the function to retrieve the view model. If the function accesses any observables or returns\n            // an observable, the dependency is tracked, and those observables can later cause the binding\n            // context to be updated.\n            var dataItemOrObservable = isFunc ? dataItemOrAccessor() : dataItemOrAccessor,\n                dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\n\n            if (parentContext) {\n                // When a \"parent\" context is given, register a dependency on the parent context. Thus whenever the\n                // parent context is updated, this context will also be updated.\n                if (parentContext._subscribable)\n                    parentContext._subscribable();\n\n                // Copy $root and any custom properties from the parent context\n                ko.utils.extend(self, parentContext);\n\n                // Because the above copy overwrites our own properties, we need to reset them.\n                self._subscribable = subscribable;\n            } else {\n                self['$parents'] = [];\n                self['$root'] = dataItem;\n\n                // Export 'ko' in the binding context so it will be available in bindings and templates\n                // even if 'ko' isn't exported as a global, such as when using an AMD loader.\n                // See https://github.com/SteveSanderson/knockout/issues/490\n                self['ko'] = ko;\n            }\n            self['$rawData'] = dataItemOrObservable;\n            self['$data'] = dataItem;\n            if (dataItemAlias)\n                self[dataItemAlias] = dataItem;\n\n            // The extendCallback function is provided when creating a child context or extending a context.\n            // It handles the specific actions needed to finish setting up the binding context. Actions in this\n            // function could also add dependencies to this binding context.\n            if (extendCallback)\n                extendCallback(self, parentContext, dataItem);\n\n            return self['$data'];\n        }\n        function disposeWhen() {\n            return nodes && !ko.utils.anyDomNodeIsAttachedToDocument(nodes);\n        }\n\n        var self = this,\n            isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor),\n            nodes,\n            subscribable;\n\n        if (options && options['exportDependencies']) {\n            // The \"exportDependencies\" option means that the calling code will track any dependencies and re-create\n            // the binding context when they change.\n            updateContext();\n        } else {\n            subscribable = ko.dependentObservable(updateContext, null, { disposeWhen: disposeWhen, disposeWhenNodeIsRemoved: true });\n\n            // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\n            // subscribed to any observables that were accessed in the process. If there is nothing to track, the\n            // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\n            // the context object.\n            if (subscribable.isActive()) {\n                self._subscribable = subscribable;\n\n                // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\n                subscribable['equalityComparer'] = null;\n\n                // We need to be able to dispose of this computed observable when it's no longer needed. This would be\n                // easy if we had a single node to watch, but binding contexts can be used by many different nodes, and\n                // we cannot assume that those nodes have any relation to each other. So instead we track any node that\n                // the context is attached to, and dispose the computed when all of those nodes have been cleaned.\n\n                // Add properties to *subscribable* instead of *self* because any properties added to *self* may be overwritten on updates\n                nodes = [];\n                subscribable._addNode = function(node) {\n                    nodes.push(node);\n                    ko.utils.domNodeDisposal.addDisposeCallback(node, function(node) {\n                        ko.utils.arrayRemoveItem(nodes, node);\n                        if (!nodes.length) {\n                            subscribable.dispose();\n                            self._subscribable = subscribable = undefined;\n                        }\n                    });\n                };\n            }\n        }\n    }\n\n    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\n    // any observables, the new child context will automatically get a dependency on the parent context.\n    // But this does not mean that the $data value of the child context will also get updated. If the child\n    // view model also depends on the parent view model, you must provide a function that returns the correct\n    // view model on each update.\n    ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback, options) {\n        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function(self, parentContext) {\n            // Extend the context hierarchy by setting the appropriate pointers\n            self['$parentContext'] = parentContext;\n            self['$parent'] = parentContext['$data'];\n            self['$parents'] = (parentContext['$parents'] || []).slice(0);\n            self['$parents'].unshift(self['$parent']);\n            if (extendCallback)\n                extendCallback(self);\n        }, options);\n    };\n\n    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\n    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\n    // when an observable view model is updated.\n    ko.bindingContext.prototype['extend'] = function(properties) {\n        // If the parent context references an observable view model, \"_subscribable\" will always be the\n        // latest view model object. If not, \"_subscribable\" isn't set, and we can use the static \"$data\" value.\n        return new ko.bindingContext(this._subscribable || this['$data'], this, null, function(self, parentContext) {\n            // This \"child\" context doesn't directly track a parent observable view model,\n            // so we need to manually set the $rawData value to match the parent.\n            self['$rawData'] = parentContext['$rawData'];\n            ko.utils.extend(self, typeof(properties) == \"function\" ? properties() : properties);\n        });\n    };\n\n    ko.bindingContext.prototype.createStaticChildContext = function (dataItemOrAccessor, dataItemAlias) {\n        return this['createChildContext'](dataItemOrAccessor, dataItemAlias, null, { \"exportDependencies\": true });\n    };\n\n    // Returns the valueAccesor function for a binding value\n    function makeValueAccessor(value) {\n        return function() {\n            return value;\n        };\n    }\n\n    // Returns the value of a valueAccessor function\n    function evaluateValueAccessor(valueAccessor) {\n        return valueAccessor();\n    }\n\n    // Given a function that returns bindings, create and return a new object that contains\n    // binding value-accessors functions. Each accessor function calls the original function\n    // so that it always gets the latest value and all dependencies are captured. This is used\n    // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\n    function makeAccessorsFromFunction(callback) {\n        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\n            return function() {\n                return callback()[key];\n            };\n        });\n    }\n\n    // Given a bindings function or object, create and return a new object that contains\n    // binding value-accessors functions. This is used by ko.applyBindingsToNode.\n    function makeBindingAccessors(bindings, context, node) {\n        if (typeof bindings === 'function') {\n            return makeAccessorsFromFunction(bindings.bind(null, context, node));\n        } else {\n            return ko.utils.objectMap(bindings, makeValueAccessor);\n        }\n    }\n\n    // This function is used if the binding provider doesn't include a getBindingAccessors function.\n    // It must be called with 'this' set to the provider instance.\n    function getBindingsAndMakeAccessors(node, context) {\n        return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\n    }\n\n    function validateThatBindingIsAllowedForVirtualElements(bindingName) {\n        var validator = ko.virtualElements.allowedBindings[bindingName];\n        if (!validator)\n            throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\n    }\n\n    function applyBindingsToDescendantsInternal (bindingContext, elementOrVirtualElement, bindingContextsMayDifferFromDomParentElement) {\n        var currentChild,\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement),\n            provider = ko.bindingProvider['instance'],\n            preprocessNode = provider['preprocessNode'];\n\n        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\n        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\n        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\n        // trigger insertion of <template> contents at that point in the document.\n        if (preprocessNode) {\n            while (currentChild = nextInQueue) {\n                nextInQueue = ko.virtualElements.nextSibling(currentChild);\n                preprocessNode.call(provider, currentChild);\n            }\n            // Reset nextInQueue for the next loop\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\n        }\n\n        while (currentChild = nextInQueue) {\n            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\n            nextInQueue = ko.virtualElements.nextSibling(currentChild);\n            applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild, bindingContextsMayDifferFromDomParentElement);\n        }\n    }\n\n    function applyBindingsToNodeAndDescendantsInternal (bindingContext, nodeVerified, bindingContextMayDifferFromDomParentElement) {\n        var shouldBindDescendants = true;\n\n        // Perf optimisation: Apply bindings only if...\n        // (1) We need to store the binding context on this node (because it may differ from the DOM parent node's binding context)\n        //     Note that we can't store binding contexts on non-elements (e.g., text nodes), as IE doesn't allow expando properties for those\n        // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\n        var isElement = (nodeVerified.nodeType === 1);\n        if (isElement) // Workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\n\n        var shouldApplyBindings = (isElement && bindingContextMayDifferFromDomParentElement)             // Case (1)\n                               || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);       // Case (2)\n        if (shouldApplyBindings)\n            shouldBindDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext, bindingContextMayDifferFromDomParentElement)['shouldBindDescendants'];\n\n        if (shouldBindDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\n            // We're recursing automatically into (real or virtual) child nodes without changing binding contexts. So,\n            //  * For children of a *real* element, the binding context is certainly the same as on their DOM .parentNode,\n            //    hence bindingContextsMayDifferFromDomParentElement is false\n            //  * For children of a *virtual* element, we can't be sure. Evaluating .parentNode on those children may\n            //    skip over any number of intermediate virtual elements, any of which might define a custom binding context,\n            //    hence bindingContextsMayDifferFromDomParentElement is true\n            applyBindingsToDescendantsInternal(bindingContext, nodeVerified, /* bindingContextsMayDifferFromDomParentElement: */ !isElement);\n        }\n    }\n\n    var boundElementDomDataKey = ko.utils.domData.nextKey();\n\n\n    function topologicalSortBindings(bindings) {\n        // Depth-first sort\n        var result = [],                // The list of key/handler pairs that we will return\n            bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\n            cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\n        ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\n            if (!bindingsConsidered[bindingKey]) {\n                var binding = ko['getBindingHandler'](bindingKey);\n                if (binding) {\n                    // First add dependencies (if any) of the current binding\n                    if (binding['after']) {\n                        cyclicDependencyStack.push(bindingKey);\n                        ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\n                            if (bindings[bindingDependencyKey]) {\n                                if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\n                                    throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\n                                } else {\n                                    pushBinding(bindingDependencyKey);\n                                }\n                            }\n                        });\n                        cyclicDependencyStack.length--;\n                    }\n                    // Next add the current binding\n                    result.push({ key: bindingKey, handler: binding });\n                }\n                bindingsConsidered[bindingKey] = true;\n            }\n        });\n\n        return result;\n    }\n\n    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext, bindingContextMayDifferFromDomParentElement) {\n        // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\n        var alreadyBound = ko.utils.domData.get(node, boundElementDomDataKey);\n        if (!sourceBindings) {\n            if (alreadyBound) {\n                throw Error(\"You cannot apply bindings multiple times to the same element.\");\n            }\n            ko.utils.domData.set(node, boundElementDomDataKey, true);\n        }\n\n        // Optimization: Don't store the binding context on this node if it's definitely the same as on node.parentNode, because\n        // we can easily recover it just by scanning up the node's ancestors in the DOM\n        // (note: here, parent node means \"real DOM parent\" not \"virtual parent\", as there's no O(1) way to find the virtual parent)\n        if (!alreadyBound && bindingContextMayDifferFromDomParentElement)\n            ko.storedBindingContextForNode(node, bindingContext);\n\n        // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\n        var bindings;\n        if (sourceBindings && typeof sourceBindings !== 'function') {\n            bindings = sourceBindings;\n        } else {\n            var provider = ko.bindingProvider['instance'],\n                getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\n\n            // Get the binding from the provider within a computed observable so that we can update the bindings whenever\n            // the binding context is updated or if the binding provider accesses observables.\n            var bindingsUpdater = ko.dependentObservable(\n                function() {\n                    bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\n                    // Register a dependency on the binding context to support observable view models.\n                    if (bindings && bindingContext._subscribable)\n                        bindingContext._subscribable();\n                    return bindings;\n                },\n                null, { disposeWhenNodeIsRemoved: node }\n            );\n\n            if (!bindings || !bindingsUpdater.isActive())\n                bindingsUpdater = null;\n        }\n\n        var bindingHandlerThatControlsDescendantBindings;\n        if (bindings) {\n            // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\n            // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\n            // the latest binding value and registers a dependency on the binding updater.\n            var getValueAccessor = bindingsUpdater\n                ? function(bindingKey) {\n                    return function() {\n                        return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\n                    };\n                } : function(bindingKey) {\n                    return bindings[bindingKey];\n                };\n\n            // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\n            function allBindings() {\n                return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\n            }\n            // The following is the 3.x allBindings API\n            allBindings['get'] = function(key) {\n                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\n            };\n            allBindings['has'] = function(key) {\n                return key in bindings;\n            };\n\n            // First put the bindings into the right order\n            var orderedBindings = topologicalSortBindings(bindings);\n\n            // Go through the sorted bindings, calling init and update for each\n            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\n                // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\n                // so bindingKeyAndHandler.handler will always be nonnull.\n                var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\n                    handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\n                    bindingKey = bindingKeyAndHandler.key;\n\n                if (node.nodeType === 8) {\n                    validateThatBindingIsAllowedForVirtualElements(bindingKey);\n                }\n\n                try {\n                    // Run init, ignoring any dependencies\n                    if (typeof handlerInitFn == \"function\") {\n                        ko.dependencyDetection.ignore(function() {\n                            var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n\n                            // If this binding handler claims to control descendant bindings, make a note of this\n                            if (initResult && initResult['controlsDescendantBindings']) {\n                                if (bindingHandlerThatControlsDescendantBindings !== undefined)\n                                    throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\n                                bindingHandlerThatControlsDescendantBindings = bindingKey;\n                            }\n                        });\n                    }\n\n                    // Run update in its own computed wrapper\n                    if (typeof handlerUpdateFn == \"function\") {\n                        ko.dependentObservable(\n                            function() {\n                                handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n                            },\n                            null,\n                            { disposeWhenNodeIsRemoved: node }\n                        );\n                    }\n                } catch (ex) {\n                    ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\n                    throw ex;\n                }\n            });\n        }\n\n        return {\n            'shouldBindDescendants': bindingHandlerThatControlsDescendantBindings === undefined\n        };\n    };\n\n    var storedBindingContextDomDataKey = ko.utils.domData.nextKey();\n    ko.storedBindingContextForNode = function (node, bindingContext) {\n        if (arguments.length == 2) {\n            ko.utils.domData.set(node, storedBindingContextDomDataKey, bindingContext);\n            if (bindingContext._subscribable)\n                bindingContext._subscribable._addNode(node);\n        } else {\n            return ko.utils.domData.get(node, storedBindingContextDomDataKey);\n        }\n    }\n\n    function getBindingContext(viewModelOrBindingContext) {\n        return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\n            ? viewModelOrBindingContext\n            : new ko.bindingContext(viewModelOrBindingContext);\n    }\n\n    ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\n        if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(node);\n        return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext), true);\n    };\n\n    ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\n        var context = getBindingContext(viewModelOrBindingContext);\n        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\n    };\n\n    ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\n        if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\n            applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    ko.applyBindings = function (viewModelOrBindingContext, rootNode) {\n        // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\n        if (!jQueryInstance && window['jQuery']) {\n            jQueryInstance = window['jQuery'];\n        }\n\n        if (rootNode && (rootNode.nodeType !== 1) && (rootNode.nodeType !== 8))\n            throw new Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\n        rootNode = rootNode || window.document.body; // Make \"rootNode\" parameter optional\n\n        applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    // Retrieving binding context from arbitrary nodes\n    ko.contextFor = function(node) {\n        // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\n        switch (node.nodeType) {\n            case 1:\n            case 8:\n                var context = ko.storedBindingContextForNode(node);\n                if (context) return context;\n                if (node.parentNode) return ko.contextFor(node.parentNode);\n                break;\n        }\n        return undefined;\n    };\n    ko.dataFor = function(node) {\n        var context = ko.contextFor(node);\n        return context ? context['$data'] : undefined;\n    };\n\n    ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\n    ko.exportSymbol('applyBindings', ko.applyBindings);\n    ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\n    ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\n    ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\n    ko.exportSymbol('contextFor', ko.contextFor);\n    ko.exportSymbol('dataFor', ko.dataFor);\n})();\n(function(undefined) {\n    var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\n        loadedDefinitionsCache = {};    // Tracks component loads that have already completed\n\n    ko.components = {\n        get: function(componentName, callback) {\n            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\n            if (cachedDefinition) {\n                // It's already loaded and cached. Reuse the same definition object.\n                // Note that for API consistency, even cache hits complete asynchronously by default.\n                // You can bypass this by putting synchronous:true on your component config.\n                if (cachedDefinition.isSynchronousComponent) {\n                    ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\n                        callback(cachedDefinition.definition);\n                    });\n                } else {\n                    ko.tasks.schedule(function() { callback(cachedDefinition.definition); });\n                }\n            } else {\n                // Join the loading process that is already underway, or start a new one.\n                loadComponentAndNotify(componentName, callback);\n            }\n        },\n\n        clearCachedDefinition: function(componentName) {\n            delete loadedDefinitionsCache[componentName];\n        },\n\n        _getFirstResultFromLoaders: getFirstResultFromLoaders\n    };\n\n    function getObjectOwnProperty(obj, propName) {\n        return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\n    }\n\n    function loadComponentAndNotify(componentName, callback) {\n        var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\n            completedAsync;\n        if (!subscribable) {\n            // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\n            subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\n            subscribable.subscribe(callback);\n\n            beginLoadingComponent(componentName, function(definition, config) {\n                var isSynchronousComponent = !!(config && config['synchronous']);\n                loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\n                delete loadingSubscribablesCache[componentName];\n\n                // For API consistency, all loads complete asynchronously. However we want to avoid\n                // adding an extra task schedule if it's unnecessary (i.e., the completion is already\n                // async).\n                //\n                // You can bypass the 'always asynchronous' feature by putting the synchronous:true\n                // flag on your component configuration when you register it.\n                if (completedAsync || isSynchronousComponent) {\n                    // Note that notifySubscribers ignores any dependencies read within the callback.\n                    // See comment in loaderRegistryBehaviors.js for reasoning\n                    subscribable['notifySubscribers'](definition);\n                } else {\n                    ko.tasks.schedule(function() {\n                        subscribable['notifySubscribers'](definition);\n                    });\n                }\n            });\n            completedAsync = true;\n        } else {\n            subscribable.subscribe(callback);\n        }\n    }\n\n    function beginLoadingComponent(componentName, callback) {\n        getFirstResultFromLoaders('getConfig', [componentName], function(config) {\n            if (config) {\n                // We have a config, so now load its definition\n                getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\n                    callback(definition, config);\n                });\n            } else {\n                // The component has no config - it's unknown to all the loaders.\n                // Note that this is not an error (e.g., a module loading error) - that would abort the\n                // process and this callback would not run. For this callback to run, all loaders must\n                // have confirmed they don't know about this component.\n                callback(null, null);\n            }\n        });\n    }\n\n    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\n        // On the first call in the stack, start with the full set of loaders\n        if (!candidateLoaders) {\n            candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\n        }\n\n        // Try the next candidate\n        var currentCandidateLoader = candidateLoaders.shift();\n        if (currentCandidateLoader) {\n            var methodInstance = currentCandidateLoader[methodName];\n            if (methodInstance) {\n                var wasAborted = false,\n                    synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\n                        if (wasAborted) {\n                            callback(null);\n                        } else if (result !== null) {\n                            // This candidate returned a value. Use it.\n                            callback(result);\n                        } else {\n                            // Try the next candidate\n                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n                        }\n                    }));\n\n                // Currently, loaders may not return anything synchronously. This leaves open the possibility\n                // that we'll extend the API to support synchronous return values in the future. It won't be\n                // a breaking change, because currently no loader is allowed to return anything except undefined.\n                if (synchronousReturnValue !== undefined) {\n                    wasAborted = true;\n\n                    // Method to suppress exceptions will remain undocumented. This is only to keep\n                    // KO's specs running tidily, since we can observe the loading got aborted without\n                    // having exceptions cluttering up the console too.\n                    if (!currentCandidateLoader['suppressLoaderExceptions']) {\n                        throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\n                    }\n                }\n            } else {\n                // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\n                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n            }\n        } else {\n            // No candidates returned a value\n            callback(null);\n        }\n    }\n\n    // Reference the loaders via string name so it's possible for developers\n    // to replace the whole array by assigning to ko.components.loaders\n    ko.components['loaders'] = [];\n\n    ko.exportSymbol('components', ko.components);\n    ko.exportSymbol('components.get', ko.components.get);\n    ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\n})();\n(function(undefined) {\n\n    // The default loader is responsible for two things:\n    // 1. Maintaining the default in-memory registry of component configuration objects\n    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\n    // 2. Answering requests for components by fetching configuration objects\n    //    from that default in-memory registry and resolving them into standard\n    //    component definition objects (of the form { createViewModel: ..., template: ... })\n    // Custom loaders may override either of these facilities, i.e.,\n    // 1. To supply configuration objects from some other source (e.g., conventions)\n    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\n\n    var defaultConfigRegistry = {};\n\n    ko.components.register = function(componentName, config) {\n        if (!config) {\n            throw new Error('Invalid configuration for ' + componentName);\n        }\n\n        if (ko.components.isRegistered(componentName)) {\n            throw new Error('Component ' + componentName + ' is already registered');\n        }\n\n        defaultConfigRegistry[componentName] = config;\n    };\n\n    ko.components.isRegistered = function(componentName) {\n        return defaultConfigRegistry.hasOwnProperty(componentName);\n    };\n\n    ko.components.unregister = function(componentName) {\n        delete defaultConfigRegistry[componentName];\n        ko.components.clearCachedDefinition(componentName);\n    };\n\n    ko.components.defaultLoader = {\n        'getConfig': function(componentName, callback) {\n            var result = defaultConfigRegistry.hasOwnProperty(componentName)\n                ? defaultConfigRegistry[componentName]\n                : null;\n            callback(result);\n        },\n\n        'loadComponent': function(componentName, config, callback) {\n            var errorCallback = makeErrorCallback(componentName);\n            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\n                resolveConfig(componentName, errorCallback, loadedConfig, callback);\n            });\n        },\n\n        'loadTemplate': function(componentName, templateConfig, callback) {\n            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\n        },\n\n        'loadViewModel': function(componentName, viewModelConfig, callback) {\n            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\n        }\n    };\n\n    var createViewModelKey = 'createViewModel';\n\n    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\n    // into the standard component definition format:\n    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\n    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\n    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\n    // so this is implemented manually below.\n    function resolveConfig(componentName, errorCallback, config, callback) {\n        var result = {},\n            makeCallBackWhenZero = 2,\n            tryIssueCallback = function() {\n                if (--makeCallBackWhenZero === 0) {\n                    callback(result);\n                }\n            },\n            templateConfig = config['template'],\n            viewModelConfig = config['viewModel'];\n\n        if (templateConfig) {\n            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\n                    result['template'] = resolvedTemplate;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n\n        if (viewModelConfig) {\n            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\n                    result[createViewModelKey] = resolvedViewModel;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n    }\n\n    function resolveTemplate(errorCallback, templateConfig, callback) {\n        if (typeof templateConfig === 'string') {\n            // Markup - parse it\n            callback(ko.utils.parseHtmlFragment(templateConfig));\n        } else if (templateConfig instanceof Array) {\n            // Assume already an array of DOM nodes - pass through unchanged\n            callback(templateConfig);\n        } else if (isDocumentFragment(templateConfig)) {\n            // Document fragment - use its child nodes\n            callback(ko.utils.makeArray(templateConfig.childNodes));\n        } else if (templateConfig['element']) {\n            var element = templateConfig['element'];\n            if (isDomElement(element)) {\n                // Element instance - copy its child nodes\n                callback(cloneNodesFromTemplateSourceElement(element));\n            } else if (typeof element === 'string') {\n                // Element ID - find it, then copy its child nodes\n                var elemInstance = document.getElementById(element);\n                if (elemInstance) {\n                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\n                } else {\n                    errorCallback('Cannot find element with ID ' + element);\n                }\n            } else {\n                errorCallback('Unknown element type: ' + element);\n            }\n        } else {\n            errorCallback('Unknown template value: ' + templateConfig);\n        }\n    }\n\n    function resolveViewModel(errorCallback, viewModelConfig, callback) {\n        if (typeof viewModelConfig === 'function') {\n            // Constructor - convert to standard factory function format\n            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\n            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\n            // be used in factory functions, not viewmodel constructors.\n            callback(function (params /*, componentInfo */) {\n                return new viewModelConfig(params);\n            });\n        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\n            // Already a factory function - use it as-is\n            callback(viewModelConfig[createViewModelKey]);\n        } else if ('instance' in viewModelConfig) {\n            // Fixed object instance - promote to createViewModel format for API consistency\n            var fixedInstance = viewModelConfig['instance'];\n            callback(function (params, componentInfo) {\n                return fixedInstance;\n            });\n        } else if ('viewModel' in viewModelConfig) {\n            // Resolved AMD module whose value is of the form { viewModel: ... }\n            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\n        } else {\n            errorCallback('Unknown viewModel value: ' + viewModelConfig);\n        }\n    }\n\n    function cloneNodesFromTemplateSourceElement(elemInstance) {\n        switch (ko.utils.tagNameLower(elemInstance)) {\n            case 'script':\n                return ko.utils.parseHtmlFragment(elemInstance.text);\n            case 'textarea':\n                return ko.utils.parseHtmlFragment(elemInstance.value);\n            case 'template':\n                // For browsers with proper <template> element support (i.e., where the .content property\n                // gives a document fragment), use that document fragment.\n                if (isDocumentFragment(elemInstance.content)) {\n                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\n                }\n        }\n\n        // Regular elements such as <div>, and <template> elements on old browsers that don't really\n        // understand <template> and just treat it as a regular container\n        return ko.utils.cloneNodes(elemInstance.childNodes);\n    }\n\n    function isDomElement(obj) {\n        if (window['HTMLElement']) {\n            return obj instanceof HTMLElement;\n        } else {\n            return obj && obj.tagName && obj.nodeType === 1;\n        }\n    }\n\n    function isDocumentFragment(obj) {\n        if (window['DocumentFragment']) {\n            return obj instanceof DocumentFragment;\n        } else {\n            return obj && obj.nodeType === 11;\n        }\n    }\n\n    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\n        if (typeof config['require'] === 'string') {\n            // The config is the value of an AMD module\n            if (amdRequire || window['require']) {\n                (amdRequire || window['require'])([config['require']], callback);\n            } else {\n                errorCallback('Uses require, but no AMD loader is present');\n            }\n        } else {\n            callback(config);\n        }\n    }\n\n    function makeErrorCallback(componentName) {\n        return function (message) {\n            throw new Error('Component \\'' + componentName + '\\': ' + message);\n        };\n    }\n\n    ko.exportSymbol('components.register', ko.components.register);\n    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\n    ko.exportSymbol('components.unregister', ko.components.unregister);\n\n    // Expose the default loader so that developers can directly ask it for configuration\n    // or to resolve configuration\n    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\n\n    // By default, the default loader is the only registered component loader\n    ko.components['loaders'].push(ko.components.defaultLoader);\n\n    // Privately expose the underlying config registry for use in old-IE shim\n    ko.components._allRegisteredComponents = defaultConfigRegistry;\n})();\n(function (undefined) {\n    // Overridable API for determining which component name applies to a given node. By overriding this,\n    // you can for example map specific tagNames to components that are not preregistered.\n    ko.components['getComponentNameForNode'] = function(node) {\n        var tagNameLower = ko.utils.tagNameLower(node);\n        if (ko.components.isRegistered(tagNameLower)) {\n            // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\n            if (tagNameLower.indexOf('-') != -1 || ('' + node) == \"[object HTMLUnknownElement]\" || (ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) {\n                return tagNameLower;\n            }\n        }\n    };\n\n    ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\n        // Determine if it's really a custom element matching a component\n        if (node.nodeType === 1) {\n            var componentName = ko.components['getComponentNameForNode'](node);\n            if (componentName) {\n                // It does represent a component, so add a component binding for it\n                allBindings = allBindings || {};\n\n                if (allBindings['component']) {\n                    // Avoid silently overwriting some other 'component' binding that may already be on the element\n                    throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\n                }\n\n                var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\n\n                allBindings['component'] = valueAccessors\n                    ? function() { return componentBindingValue; }\n                    : componentBindingValue;\n            }\n        }\n\n        return allBindings;\n    }\n\n    var nativeBindingProviderInstance = new ko.bindingProvider();\n\n    function getComponentParamsFromCustomElement(elem, bindingContext) {\n        var paramsAttribute = elem.getAttribute('params');\n\n        if (paramsAttribute) {\n            var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\n                rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\n                    return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\n                }),\n                result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\n                    var paramValue = paramValueComputed.peek();\n                    // Does the evaluation of the parameter value unwrap any observables?\n                    if (!paramValueComputed.isActive()) {\n                        // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\n                        // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\n                        return paramValue;\n                    } else {\n                        // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\n                        // level of observability, and any inner (resulting model value) level of observability.\n                        // This means the component doesn't have to worry about multiple unwrapping. If the value is a\n                        // writable observable, the computed will also be writable and pass the value on to the observable.\n                        return ko.computed({\n                            'read': function() {\n                                return ko.utils.unwrapObservable(paramValueComputed());\n                            },\n                            'write': ko.isWriteableObservable(paramValue) && function(value) {\n                                paramValueComputed()(value);\n                            },\n                            disposeWhenNodeIsRemoved: elem\n                        });\n                    }\n                });\n\n            // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\n            // This is in case the developer wants to react to outer (binding) observability separately from inner\n            // (model value) observability, or in case the model value observable has subobservables.\n            if (!result.hasOwnProperty('$raw')) {\n                result['$raw'] = rawParamComputedValues;\n            }\n\n            return result;\n        } else {\n            // For consistency, absence of a \"params\" attribute is treated the same as the presence of\n            // any empty one. Otherwise component viewmodels need special code to check whether or not\n            // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\n            return { '$raw': {} };\n        }\n    }\n\n    // --------------------------------------------------------------------------------\n    // Compatibility code for older (pre-HTML5) IE browsers\n\n    if (ko.utils.ieVersion < 9) {\n        // Whenever you preregister a component, enable it as a custom element in the current document\n        ko.components['register'] = (function(originalFunction) {\n            return function(componentName) {\n                document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\n                return originalFunction.apply(this, arguments);\n            }\n        })(ko.components['register']);\n\n        // Whenever you create a document fragment, enable all preregistered component names as custom elements\n        // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\n        document.createDocumentFragment = (function(originalFunction) {\n            return function() {\n                var newDocFrag = originalFunction(),\n                    allComponents = ko.components._allRegisteredComponents;\n                for (var componentName in allComponents) {\n                    if (allComponents.hasOwnProperty(componentName)) {\n                        newDocFrag.createElement(componentName);\n                    }\n                }\n                return newDocFrag;\n            };\n        })(document.createDocumentFragment);\n    }\n})();(function(undefined) {\n\n    var componentLoadingOperationUniqueId = 0;\n\n    ko.bindingHandlers['component'] = {\n        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\n            var currentViewModel,\n                currentLoadingOperationId,\n                disposeAssociatedComponentViewModel = function () {\n                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\n                    if (typeof currentViewModelDispose === 'function') {\n                        currentViewModelDispose.call(currentViewModel);\n                    }\n                    currentViewModel = null;\n                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\n                    currentLoadingOperationId = null;\n                },\n                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\n\n            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\n\n            ko.computed(function () {\n                var value = ko.utils.unwrapObservable(valueAccessor()),\n                    componentName, componentParams;\n\n                if (typeof value === 'string') {\n                    componentName = value;\n                } else {\n                    componentName = ko.utils.unwrapObservable(value['name']);\n                    componentParams = ko.utils.unwrapObservable(value['params']);\n                }\n\n                if (!componentName) {\n                    throw new Error('No component name specified');\n                }\n\n                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\n                ko.components.get(componentName, function(componentDefinition) {\n                    // If this is not the current load operation for this element, ignore it.\n                    if (currentLoadingOperationId !== loadingOperationId) {\n                        return;\n                    }\n\n                    // Clean up previous state\n                    disposeAssociatedComponentViewModel();\n\n                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\n                    if (!componentDefinition) {\n                        throw new Error('Unknown component \\'' + componentName + '\\'');\n                    }\n                    cloneTemplateIntoElement(componentName, componentDefinition, element);\n                    var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams),\n                        childBindingContext = bindingContext['createChildContext'](componentViewModel, /* dataItemAlias */ undefined, function(ctx) {\n                            ctx['$component'] = componentViewModel;\n                            ctx['$componentTemplateNodes'] = originalChildNodes;\n                        });\n                    currentViewModel = componentViewModel;\n                    ko.applyBindingsToDescendants(childBindingContext, element);\n                });\n            }, null, { disposeWhenNodeIsRemoved: element });\n\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n\n    ko.virtualElements.allowedBindings['component'] = true;\n\n    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\n        var template = componentDefinition['template'];\n        if (!template) {\n            throw new Error('Component \\'' + componentName + '\\' has no template');\n        }\n\n        var clonedNodesArray = ko.utils.cloneNodes(template);\n        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\n    }\n\n    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {\n        var componentViewModelFactory = componentDefinition['createViewModel'];\n        return componentViewModelFactory\n            ? componentViewModelFactory.call(componentDefinition, componentParams, { 'element': element, 'templateNodes': originalChildNodes })\n            : componentParams; // Template-only component\n    }\n\n})();\nvar attrHtmlToJavascriptMap = { 'class': 'className', 'for': 'htmlFor' };\nko.bindingHandlers['attr'] = {\n    'update': function(element, valueAccessor, allBindings) {\n        var value = ko.utils.unwrapObservable(valueAccessor()) || {};\n        ko.utils.objectForEach(value, function(attrName, attrValue) {\n            attrValue = ko.utils.unwrapObservable(attrValue);\n\n            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\n            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\n            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\n            var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\n            if (toRemove)\n                element.removeAttribute(attrName);\n\n            // In IE <= 7 and IE8 Quirks Mode, you have to use the Javascript property name instead of the\n            // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\n            // but instead of figuring out the mode, we'll just set the attribute through the Javascript\n            // property for IE <= 8.\n            if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavascriptMap) {\n                attrName = attrHtmlToJavascriptMap[attrName];\n                if (toRemove)\n                    element.removeAttribute(attrName);\n                else\n                    element[attrName] = attrValue;\n            } else if (!toRemove) {\n                element.setAttribute(attrName, attrValue.toString());\n            }\n\n            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\n            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\n            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\n            // entirely, and there's no strong reason to allow for such casing in HTML.\n            if (attrName === \"name\") {\n                ko.utils.setElementName(element, toRemove ? \"\" : attrValue.toString());\n            }\n        });\n    }\n};\n(function() {\n\nko.bindingHandlers['checked'] = {\n    'after': ['value', 'attr'],\n    'init': function (element, valueAccessor, allBindings) {\n        var checkedValue = ko.pureComputed(function() {\n            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\n            if (allBindings['has']('checkedValue')) {\n                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\n            } else if (allBindings['has']('value')) {\n                return ko.utils.unwrapObservable(allBindings.get('value'));\n            }\n\n            return element.value;\n        });\n\n        function updateModel() {\n            // This updates the model value from the view value.\n            // It runs in response to DOM events (click) and changes in checkedValue.\n            var isChecked = element.checked,\n                elemValue = useCheckedValue ? checkedValue() : isChecked;\n\n            // When we're first setting up this computed, don't change any model state.\n            if (ko.computedContext.isInitial()) {\n                return;\n            }\n\n            // We can ignore unchecked radio buttons, because some other radio\n            // button will be getting checked, and that one can take care of updating state.\n            if (isRadio && !isChecked) {\n                return;\n            }\n\n            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\n            if (valueIsArray) {\n                var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue;\n                if (oldElemValue !== elemValue) {\n                    // When we're responding to the checkedValue changing, and the element is\n                    // currently checked, replace the old elem value with the new elem value\n                    // in the model array.\n                    if (isChecked) {\n                        ko.utils.addOrRemoveItem(writableValue, elemValue, true);\n                        ko.utils.addOrRemoveItem(writableValue, oldElemValue, false);\n                    }\n\n                    oldElemValue = elemValue;\n                } else {\n                    // When we're responding to the user having checked/unchecked a checkbox,\n                    // add/remove the element value to the model array.\n                    ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked);\n                }\n                if (rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue)) {\n                    modelValue(writableValue);\n                }\n            } else {\n                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\n            }\n        };\n\n        function updateView() {\n            // This updates the view value from the model value.\n            // It runs in response to changes in the bound (checked) value.\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (valueIsArray) {\n                // When a checkbox is bound to an array, being checked represents its value being present in that array\n                element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\n            } else if (isCheckbox) {\n                // When a checkbox is bound to any other value (not an array), being checked represents the value being trueish\n                element.checked = modelValue;\n            } else {\n                // For radio buttons, being checked means that the radio button's value corresponds to the model value\n                element.checked = (checkedValue() === modelValue);\n            }\n        };\n\n        var isCheckbox = element.type == \"checkbox\",\n            isRadio = element.type == \"radio\";\n\n        // Only bind to check boxes and radio buttons\n        if (!isCheckbox && !isRadio) {\n            return;\n        }\n\n        var rawValue = valueAccessor(),\n            valueIsArray = isCheckbox && (ko.utils.unwrapObservable(rawValue) instanceof Array),\n            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\n            oldElemValue = valueIsArray ? checkedValue() : undefined,\n            useCheckedValue = isRadio || valueIsArray;\n\n        // IE 6 won't allow radio buttons to be selected unless they have a name\n        if (isRadio && !element.name)\n            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\n\n        // Set up two computeds to update the binding:\n\n        // The first responds to changes in the checkedValue value and to element clicks\n        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\n        ko.utils.registerEventHandler(element, \"click\", updateModel);\n\n        // The second responds to changes in the model value (the one associated with the checked binding)\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n\n        rawValue = undefined;\n    }\n};\nko.expressionRewriting.twoWayBindings['checked'] = true;\n\nko.bindingHandlers['checkedValue'] = {\n    'update': function (element, valueAccessor) {\n        element.value = ko.utils.unwrapObservable(valueAccessor());\n    }\n};\n\n})();var classesWrittenByBindingKey = '__ko__cssValue';\nko.bindingHandlers['css'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value !== null && typeof value == \"object\") {\n            ko.utils.objectForEach(value, function(className, shouldHaveClass) {\n                shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\n                ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\n            });\n        } else {\n            value = ko.utils.stringTrim(String(value || '')); // Make sure we don't try to store or set a non-string value\n            ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\n            element[classesWrittenByBindingKey] = value;\n            ko.utils.toggleDomNodeCssClass(element, value, true);\n        }\n    }\n};\nko.bindingHandlers['enable'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value && element.disabled)\n            element.removeAttribute(\"disabled\");\n        else if ((!value) && (!element.disabled))\n            element.disabled = true;\n    }\n};\n\nko.bindingHandlers['disable'] = {\n    'update': function (element, valueAccessor) {\n        ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\n    }\n};\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\n// e.g. click:handler instead of the usual full-length event:{click:handler}\nfunction makeEventHandlerShortcut(eventName) {\n    ko.bindingHandlers[eventName] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var newValueAccessor = function () {\n                var result = {};\n                result[eventName] = valueAccessor();\n                return result;\n            };\n            return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\n        }\n    }\n}\n\nko.bindingHandlers['event'] = {\n    'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var eventsToHandle = valueAccessor() || {};\n        ko.utils.objectForEach(eventsToHandle, function(eventName) {\n            if (typeof eventName == \"string\") {\n                ko.utils.registerEventHandler(element, eventName, function (event) {\n                    var handlerReturnValue;\n                    var handlerFunction = valueAccessor()[eventName];\n                    if (!handlerFunction)\n                        return;\n\n                    try {\n                        // Take all the event args, and prefix with the viewmodel\n                        var argsForHandler = ko.utils.makeArray(arguments);\n                        viewModel = bindingContext['$data'];\n                        argsForHandler.unshift(viewModel);\n                        handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\n                    } finally {\n                        if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                            if (event.preventDefault)\n                                event.preventDefault();\n                            else\n                                event.returnValue = false;\n                        }\n                    }\n\n                    var bubble = allBindings.get(eventName + 'Bubble') !== false;\n                    if (!bubble) {\n                        event.cancelBubble = true;\n                        if (event.stopPropagation)\n                            event.stopPropagation();\n                    }\n                });\n            }\n        });\n    }\n};\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\nko.bindingHandlers['foreach'] = {\n    makeTemplateValueAccessor: function(valueAccessor) {\n        return function() {\n            var modelValue = valueAccessor(),\n                unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\n\n            // If unwrappedValue is the array, pass in the wrapped value on its own\n            // The value will be unwrapped and tracked within the template binding\n            // (See https://github.com/SteveSanderson/knockout/issues/523)\n            if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\n                return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\n\n            // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\n            ko.utils.unwrapObservable(modelValue);\n            return {\n                'foreach': unwrappedValue['data'],\n                'as': unwrappedValue['as'],\n                'includeDestroyed': unwrappedValue['includeDestroyed'],\n                'afterAdd': unwrappedValue['afterAdd'],\n                'beforeRemove': unwrappedValue['beforeRemove'],\n                'afterRender': unwrappedValue['afterRender'],\n                'beforeMove': unwrappedValue['beforeMove'],\n                'afterMove': unwrappedValue['afterMove'],\n                'templateEngine': ko.nativeTemplateEngine.instance\n            };\n        };\n    },\n    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\n    },\n    'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\n    }\n};\nko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\nko.virtualElements.allowedBindings['foreach'] = true;\nvar hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\nvar hasfocusLastValue = '__ko_hasfocusLastValue';\nko.bindingHandlers['hasfocus'] = {\n    'init': function(element, valueAccessor, allBindings) {\n        var handleElementFocusChange = function(isFocused) {\n            // Where possible, ignore which event was raised and determine focus state using activeElement,\n            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\n            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\n            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\n            // from calling 'blur()' on the element when it loses focus.\n            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\n            element[hasfocusUpdatingProperty] = true;\n            var ownerDoc = element.ownerDocument;\n            if (\"activeElement\" in ownerDoc) {\n                var active;\n                try {\n                    active = ownerDoc.activeElement;\n                } catch(e) {\n                    // IE9 throws if you access activeElement during page load (see issue #703)\n                    active = ownerDoc.body;\n                }\n                isFocused = (active === element);\n            }\n            var modelValue = valueAccessor();\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\n\n            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\n            element[hasfocusLastValue] = isFocused;\n            element[hasfocusUpdatingProperty] = false;\n        };\n        var handleElementFocusIn = handleElementFocusChange.bind(null, true);\n        var handleElementFocusOut = handleElementFocusChange.bind(null, false);\n\n        ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\n        ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\n        ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\n        ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\n    },\n    'update': function(element, valueAccessor) {\n        var value = !!ko.utils.unwrapObservable(valueAccessor());\n\n        if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\n            value ? element.focus() : element.blur();\n\n            // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\n            // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\n            // element was focused already.\n            if (!value && element[hasfocusLastValue]) {\n                element.ownerDocument.body.focus();\n            }\n\n            // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\n            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\n        }\n    }\n};\nko.expressionRewriting.twoWayBindings['hasfocus'] = true;\n\nko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\nko.expressionRewriting.twoWayBindings['hasFocus'] = true;\nko.bindingHandlers['html'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        // setHtml will unwrap the value if needed\n        ko.utils.setHtml(element, valueAccessor());\n    }\n};\n// Makes a binding like with or if\nfunction makeWithIfBinding(bindingKey, isWith, isNot, makeContextCallback) {\n    ko.bindingHandlers[bindingKey] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var didDisplayOnLastUpdate,\n                savedNodes;\n            ko.computed(function() {\n                var rawValue = valueAccessor(),\n                    dataValue = ko.utils.unwrapObservable(rawValue),\n                    shouldDisplay = !isNot !== !dataValue, // equivalent to isNot ? !dataValue : !!dataValue\n                    isFirstRender = !savedNodes,\n                    needsRefresh = isFirstRender || isWith || (shouldDisplay !== didDisplayOnLastUpdate);\n\n                if (needsRefresh) {\n                    // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\n                    if (isFirstRender && ko.computedContext.getDependenciesCount()) {\n                        savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\n                    }\n\n                    if (shouldDisplay) {\n                        if (!isFirstRender) {\n                            ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\n                        }\n                        ko.applyBindingsToDescendants(makeContextCallback ? makeContextCallback(bindingContext, rawValue) : bindingContext, element);\n                    } else {\n                        ko.virtualElements.emptyNode(element);\n                    }\n\n                    didDisplayOnLastUpdate = shouldDisplay;\n                }\n            }, null, { disposeWhenNodeIsRemoved: element });\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\n    ko.virtualElements.allowedBindings[bindingKey] = true;\n}\n\n// Construct the actual binding handlers\nmakeWithIfBinding('if');\nmakeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\nmakeWithIfBinding('with', true /* isWith */, false /* isNot */,\n    function(bindingContext, dataValue) {\n        return bindingContext.createStaticChildContext(dataValue);\n    }\n);\nvar captionPlaceholder = {};\nko.bindingHandlers['options'] = {\n    'init': function(element) {\n        if (ko.utils.tagNameLower(element) !== \"select\")\n            throw new Error(\"options binding applies only to SELECT elements\");\n\n        // Remove all existing <option>s.\n        while (element.length > 0) {\n            element.remove(0);\n        }\n\n        // Ensures that the binding processor doesn't try to bind the options\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor, allBindings) {\n        function selectedOptions() {\n            return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\n        }\n\n        var selectWasPreviouslyEmpty = element.length == 0,\n            multiple = element.multiple,\n            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\n            unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\n            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\n            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\n            arrayToDomNodeChildrenOptions = {},\n            captionValue,\n            filteredArray,\n            previousSelectedValues = [];\n\n        if (!valueAllowUnset) {\n            if (multiple) {\n                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\n            } else if (element.selectedIndex >= 0) {\n                previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\n            }\n        }\n\n        if (unwrappedArray) {\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // If caption is included, add it to the array\n            if (allBindings['has']('optionsCaption')) {\n                captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\n                // If caption value is null or undefined, don't show a caption\n                if (captionValue !== null && captionValue !== undefined) {\n                    filteredArray.unshift(captionPlaceholder);\n                }\n            }\n        } else {\n            // If a falsy value is provided (e.g. null), we'll simply empty the select element\n        }\n\n        function applyToObject(object, predicate, defaultValue) {\n            var predicateType = typeof predicate;\n            if (predicateType == \"function\")    // Given a function; run it against the data value\n                return predicate(object);\n            else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\n                return object[predicate];\n            else                                // Given no optionsText arg; use the data value itself\n                return defaultValue;\n        }\n\n        // The following functions can run at two different times:\n        // The first is when the whole array is being updated directly from this binding handler.\n        // The second is when an observable value for a specific array entry is updated.\n        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\n        var itemUpdate = false;\n        function optionForArrayItem(arrayEntry, index, oldOptions) {\n            if (oldOptions.length) {\n                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\n                itemUpdate = true;\n            }\n            var option = element.ownerDocument.createElement(\"option\");\n            if (arrayEntry === captionPlaceholder) {\n                ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\n                ko.selectExtensions.writeValue(option, undefined);\n            } else {\n                // Apply a value to the option element\n                var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\n                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\n\n                // Apply some text to the option element\n                var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\n                ko.utils.setTextContent(option, optionText);\n            }\n            return [option];\n        }\n\n        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\n        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\n        arrayToDomNodeChildrenOptions['beforeRemove'] =\n            function (option) {\n                element.removeChild(option);\n            };\n\n        function setSelectionCallback(arrayEntry, newOptions) {\n            if (itemUpdate && valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                // There is no need to use dependencyDetection.ignore since setDomNodeChildrenFromArrayMapping does so already.\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else if (previousSelectedValues.length) {\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\n                // That's why we first added them without selection. Now it's time to set the selection.\n                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\n                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\n\n                // If this option was changed from being selected during a single-item update, notify the change\n                if (itemUpdate && !isSelected) {\n                    ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                }\n            }\n        }\n\n        var callback = setSelectionCallback;\n        if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\n            callback = function(arrayEntry, newOptions) {\n                setSelectionCallback(arrayEntry, newOptions);\n                ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\n            }\n        }\n\n        ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\n\n        ko.dependencyDetection.ignore(function () {\n            if (valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else {\n                // Determine if the selection has changed as a result of updating the options list\n                var selectionChanged;\n                if (multiple) {\n                    // For a multiple-select box, compare the new selection count to the previous one\n                    // But if nothing was selected before, the selection can't have changed\n                    selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\n                } else {\n                    // For a single-select box, compare the current value to the previous value\n                    // But if nothing was selected before or nothing is selected now, just look for a change in selection\n                    selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\n                        ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\n                        : (previousSelectedValues.length || element.selectedIndex >= 0);\n                }\n\n                // Ensure consistency between model value and selected option.\n                // If the dropdown was changed so that selection is no longer the same,\n                // notify the value or selectedOptions binding.\n                if (selectionChanged) {\n                    ko.utils.triggerEvent(element, \"change\");\n                }\n            }\n        });\n\n        // Workaround for IE bug\n        ko.utils.ensureSelectElementIsRenderedCorrectly(element);\n\n        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\n            element.scrollTop = previousScrollTop;\n    }\n};\nko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\nko.bindingHandlers['selectedOptions'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        ko.utils.registerEventHandler(element, \"change\", function () {\n            var value = valueAccessor(), valueToWrite = [];\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                if (node.selected)\n                    valueToWrite.push(ko.selectExtensions.readValue(node));\n            });\n            ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\n        });\n    },\n    'update': function (element, valueAccessor) {\n        if (ko.utils.tagNameLower(element) != \"select\")\n            throw new Error(\"values binding applies only to SELECT elements\");\n\n        var newValue = ko.utils.unwrapObservable(valueAccessor()),\n            previousScrollTop = element.scrollTop;\n\n        if (newValue && typeof newValue.length == \"number\") {\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\n                if (node.selected != isSelected) {      // This check prevents flashing of the select element in IE\n                    ko.utils.setOptionNodeSelectionState(node, isSelected);\n                }\n            });\n        }\n\n        element.scrollTop = previousScrollTop;\n    }\n};\nko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\nko.bindingHandlers['style'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor() || {});\n        ko.utils.objectForEach(value, function(styleName, styleValue) {\n            styleValue = ko.utils.unwrapObservable(styleValue);\n\n            if (styleValue === null || styleValue === undefined || styleValue === false) {\n                // Empty string removes the value, whereas null/undefined have no effect\n                styleValue = \"\";\n            }\n\n            element.style[styleName] = styleValue;\n        });\n    }\n};\nko.bindingHandlers['submit'] = {\n    'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        if (typeof valueAccessor() != \"function\")\n            throw new Error(\"The value for a submit binding must be a function\");\n        ko.utils.registerEventHandler(element, \"submit\", function (event) {\n            var handlerReturnValue;\n            var value = valueAccessor();\n            try { handlerReturnValue = value.call(bindingContext['$data'], element); }\n            finally {\n                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                    if (event.preventDefault)\n                        event.preventDefault();\n                    else\n                        event.returnValue = false;\n                }\n            }\n        });\n    }\n};\nko.bindingHandlers['text'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\n        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        ko.utils.setTextContent(element, valueAccessor());\n    }\n};\nko.virtualElements.allowedBindings['text'] = true;\n(function () {\n\nif (window && window.navigator) {\n    var parseVersion = function (matches) {\n        if (matches) {\n            return parseFloat(matches[1]);\n        }\n    };\n\n    // Detect various browser versions because some old versions don't fully support the 'input' event\n    var operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()),\n        userAgent = window.navigator.userAgent,\n        safariVersion = parseVersion(userAgent.match(/^(?:(?!chrome).)*version\\/([^ ]*) safari/i)),\n        firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]*)/));\n}\n\n// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\n// But it does fire the 'selectionchange' event on many of those, presumably because the\n// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\n// fired at the document level only and doesn't directly indicate which element changed. We\n// set up just one event handler for the document and use 'activeElement' to determine which\n// element was changed.\nif (ko.utils.ieVersion < 10) {\n    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\n        selectionChangeHandlerName = ko.utils.domData.nextKey();\n    var selectionChangeHandler = function(event) {\n        var target = this.activeElement,\n            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\n        if (handler) {\n            handler(event);\n        }\n    };\n    var registerForSelectionChangeEvent = function (element, handler) {\n        var ownerDoc = element.ownerDocument;\n        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\n            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\n            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\n        }\n        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\n    };\n}\n\nko.bindingHandlers['textInput'] = {\n    'init': function (element, valueAccessor, allBindings) {\n\n        var previousElementValue = element.value,\n            timeoutHandle,\n            elementValueBeforeEvent;\n\n        var updateModel = function (event) {\n            clearTimeout(timeoutHandle);\n            elementValueBeforeEvent = timeoutHandle = undefined;\n\n            var elementValue = element.value;\n            if (previousElementValue !== elementValue) {\n                // Provide a way for tests to know exactly which event was processed\n                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\n                previousElementValue = elementValue;\n                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\n            }\n        };\n\n        var deferUpdateModel = function (event) {\n            if (!timeoutHandle) {\n                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\n                // event firing and the updateModel function running. This allows us to ignore model\n                // updates that are from the previous state of the element, usually due to techniques\n                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\n                elementValueBeforeEvent = element.value;\n                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\n                timeoutHandle = ko.utils.setTimeout(handler, 4);\n            }\n        };\n\n        // IE9 will mess up the DOM if you handle events synchronously which results in DOM changes (such as other bindings);\n        // so we'll make sure all updates are asynchronous\n        var ieUpdateModel = ko.utils.ieVersion == 9 ? deferUpdateModel : updateModel;\n\n        var updateView = function () {\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (modelValue === null || modelValue === undefined) {\n                modelValue = '';\n            }\n\n            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateView, 4);\n                return;\n            }\n\n            // Update the element only if the element and model are different. On some browsers, updating the value\n            // will move the cursor to the end of the input, which would be bad while the user is typing.\n            if (element.value !== modelValue) {\n                previousElementValue = modelValue;  // Make sure we ignore events (propertychange) that result from updating the value\n                element.value = modelValue;\n            }\n        };\n\n        var onEvent = function (event, handler) {\n            ko.utils.registerEventHandler(element, event, handler);\n        };\n\n        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\n            // Provide a way for tests to specify exactly which events are bound\n            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\n                if (eventName.slice(0,5) == 'after') {\n                    onEvent(eventName.slice(5), deferUpdateModel);\n                } else {\n                    onEvent(eventName, updateModel);\n                }\n            });\n        } else {\n            if (ko.utils.ieVersion < 10) {\n                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\n                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\n                // but that's an acceptable compromise for this binding. IE 9 does support 'input', but since it doesn't fire it\n                // when using autocomplete, we'll use 'propertychange' for it also.\n                onEvent('propertychange', function(event) {\n                    if (event.propertyName === 'value') {\n                        ieUpdateModel(event);\n                    }\n                });\n\n                if (ko.utils.ieVersion == 8) {\n                    // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\n                    // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\n                    // events too.\n                    onEvent('keyup', updateModel);      // A single keystoke\n                    onEvent('keydown', updateModel);    // The first character when a key is held down\n                }\n                if (ko.utils.ieVersion >= 8) {\n                    // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\n                    // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\n                    // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\n                    // can detect all of those except dragging text out of the field, for which we use 'dragend'.\n                    // These are also needed in IE8 because of the bug described above.\n                    registerForSelectionChangeEvent(element, ieUpdateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\n                    onEvent('dragend', deferUpdateModel);\n                }\n            } else {\n                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\n                // through the user interface.\n                onEvent('input', updateModel);\n\n                if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\n                    // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\n                    // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\n                    onEvent('keydown', deferUpdateModel);\n                    onEvent('paste', deferUpdateModel);\n                    onEvent('cut', deferUpdateModel);\n                } else if (operaVersion < 11) {\n                    // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\n                    // We can try to catch some of those using 'keydown'.\n                    onEvent('keydown', deferUpdateModel);\n                } else if (firefoxVersion < 4.0) {\n                    // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\n                    onEvent('DOMAutoComplete', updateModel);\n\n                    // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\n                    onEvent('dragdrop', updateModel);       // <3.5\n                    onEvent('drop', updateModel);           // 3.5\n                }\n            }\n        }\n\n        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\n        onEvent('change', updateModel);\n\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n    }\n};\nko.expressionRewriting.twoWayBindings['textInput'] = true;\n\n// textinput is an alias for textInput\nko.bindingHandlers['textinput'] = {\n    // preprocess is the only way to set up a full alias\n    'preprocess': function (value, name, addBinding) {\n        addBinding('textInput', value);\n    }\n};\n\n})();ko.bindingHandlers['uniqueName'] = {\n    'init': function (element, valueAccessor) {\n        if (valueAccessor()) {\n            var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\n            ko.utils.setElementName(element, name);\n        }\n    }\n};\nko.bindingHandlers['uniqueName'].currentIndex = 0;\nko.bindingHandlers['value'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\n        if (element.tagName.toLowerCase() == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\n            ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\n            return;\n        }\n\n        // Always catch \"change\" event; possibly other events too if asked\n        var eventsToCatch = [\"change\"];\n        var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\n        var propertyChangedFired = false;\n        var elementValueBeforeEvent = null;\n\n        if (requestedEventsToCatch) {\n            if (typeof requestedEventsToCatch == \"string\") // Allow both individual event names, and arrays of event names\n                requestedEventsToCatch = [requestedEventsToCatch];\n            ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch);\n            eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch);\n        }\n\n        var valueUpdateHandler = function() {\n            elementValueBeforeEvent = null;\n            propertyChangedFired = false;\n            var modelValue = valueAccessor();\n            var elementValue = ko.selectExtensions.readValue(element);\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\n        }\n\n        // Workaround for https://github.com/SteveSanderson/knockout/issues/122\n        // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\n        var ieAutoCompleteHackNeeded = ko.utils.ieVersion && element.tagName.toLowerCase() == \"input\" && element.type == \"text\"\n                                       && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\n        if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\n            ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\n            ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\n            ko.utils.registerEventHandler(element, \"blur\", function() {\n                if (propertyChangedFired) {\n                    valueUpdateHandler();\n                }\n            });\n        }\n\n        ko.utils.arrayForEach(eventsToCatch, function(eventName) {\n            // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\n            // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\n            // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\n            var handler = valueUpdateHandler;\n            if (ko.utils.stringStartsWith(eventName, \"after\")) {\n                handler = function() {\n                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\n                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\n                    // at the earliest asynchronous opportunity. We store this temporary information so that\n                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\n                    // we can overwrite that model value change with the value the user just typed. Otherwise,\n                    // techniques like rateLimit can trigger model changes at critical moments that will\n                    // override the user's inputs, causing keystrokes to be lost.\n                    elementValueBeforeEvent = ko.selectExtensions.readValue(element);\n                    ko.utils.setTimeout(valueUpdateHandler, 0);\n                };\n                eventName = eventName.substring(\"after\".length);\n            }\n            ko.utils.registerEventHandler(element, eventName, handler);\n        });\n\n        var updateFromModel = function () {\n            var newValue = ko.utils.unwrapObservable(valueAccessor());\n            var elementValue = ko.selectExtensions.readValue(element);\n\n            if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateFromModel, 0);\n                return;\n            }\n\n            var valueHasChanged = (newValue !== elementValue);\n\n            if (valueHasChanged) {\n                if (ko.utils.tagNameLower(element) === \"select\") {\n                    var allowUnset = allBindings.get('valueAllowUnset');\n                    var applyValueAction = function () {\n                        ko.selectExtensions.writeValue(element, newValue, allowUnset);\n                    };\n                    applyValueAction();\n\n                    if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\n                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\n                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                    } else {\n                        // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\n                        // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\n                        // to apply the value as well.\n                        ko.utils.setTimeout(applyValueAction, 0);\n                    }\n                } else {\n                    ko.selectExtensions.writeValue(element, newValue);\n                }\n            }\n        };\n\n        ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\n    },\n    'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\n};\nko.expressionRewriting.twoWayBindings['value'] = true;\nko.bindingHandlers['visible'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        var isCurrentlyVisible = !(element.style.display == \"none\");\n        if (value && !isCurrentlyVisible)\n            element.style.display = \"\";\n        else if ((!value) && isCurrentlyVisible)\n            element.style.display = \"none\";\n    }\n};\n// 'click' is just a shorthand for the usual full-length event:{click:handler}\nmakeEventHandlerShortcut('click');\n// If you want to make a custom template engine,\n//\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\n//\n//        function (templateSource, bindingContext, options) {\n//            // - templateSource.text() is the text of the template you should render\n//            // - bindingContext.$data is the data you should pass into the template\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\n//            //     and bindingContext.$root available in the template too\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\n//            // - templateDocument is the document object of the template\n//            //\n//            // Return value: an array of DOM nodes\n//        }\n//\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\n//\n//        function (script) {\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\n//        }\n//\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\n\nko.templateEngine = function () { };\n\nko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    throw new Error(\"Override renderTemplateSource\");\n};\n\nko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\n    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\n};\n\nko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\n    // Named template\n    if (typeof template == \"string\") {\n        templateDocument = templateDocument || document;\n        var elem = templateDocument.getElementById(template);\n        if (!elem)\n            throw new Error(\"Cannot find template with ID \" + template);\n        return new ko.templateSources.domElement(elem);\n    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\n        // Anonymous template\n        return new ko.templateSources.anonymousTemplate(template);\n    } else\n        throw new Error(\"Unknown template type: \" + template);\n};\n\nko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\n};\n\nko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\n    // Skip rewriting if requested\n    if (this['allowTemplateRewriting'] === false)\n        return true;\n    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\n};\n\nko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    var rewritten = rewriterCallback(templateSource['text']());\n    templateSource['text'](rewritten);\n    templateSource['data'](\"isRewritten\", true);\n};\n\nko.exportSymbol('templateEngine', ko.templateEngine);\n\nko.templateRewriting = (function () {\n    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\n    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\n\n    function validateDataBindValuesForRewriting(keyValueArray) {\n        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\n        for (var i = 0; i < keyValueArray.length; i++) {\n            var key = keyValueArray[i]['key'];\n            if (allValidators.hasOwnProperty(key)) {\n                var validator = allValidators[key];\n\n                if (typeof validator === \"function\") {\n                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\n                    if (possibleErrorMessage)\n                        throw new Error(possibleErrorMessage);\n                } else if (!validator) {\n                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\n                }\n            }\n        }\n    }\n\n    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\n        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\n        validateDataBindValuesForRewriting(dataBindKeyValueArray);\n        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\n\n        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\n        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\n        // extra indirection.\n        var applyBindingsToNextSiblingScript =\n            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\n        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\n    }\n\n    return {\n        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\n            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\n                templateEngine['rewriteTemplate'](template, function (htmlString) {\n                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\n                }, templateDocument);\n        },\n\n        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\n            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\n            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\n            });\n        },\n\n        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\n            return ko.memoization.memoize(function (domNode, bindingContext) {\n                var nodeToBind = domNode.nextSibling;\n                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\n                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\n                }\n            });\n        }\n    }\n})();\n\n\n// Exported only because it has to be referenced by string lookup from within rewritten template\nko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\n(function() {\n    // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\n    // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\n    //\n    // Two are provided by default:\n    //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\n    //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\n    //                                           without reading/writing the actual element text content, since it will be overwritten\n    //                                           with the rendered template output.\n    // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\n    // Template sources need to have the following functions:\n    //   text() \t\t\t- returns the template text from your storage location\n    //   text(value)\t\t- writes the supplied template text to your storage location\n    //   data(key)\t\t\t- reads values stored using data(key, value) - see below\n    //   data(key, value)\t- associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\n    //\n    // Optionally, template sources can also have the following functions:\n    //   nodes()            - returns a DOM element containing the nodes of this template, where available\n    //   nodes(value)       - writes the given DOM element to your storage location\n    // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\n    // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\n    //\n    // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\n    // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\n\n    ko.templateSources = {};\n\n    // ---- ko.templateSources.domElement -----\n\n    // template types\n    var templateScript = 1,\n        templateTextArea = 2,\n        templateTemplate = 3,\n        templateElement = 4;\n\n    ko.templateSources.domElement = function(element) {\n        this.domElement = element;\n\n        if (element) {\n            var tagNameLower = ko.utils.tagNameLower(element);\n            this.templateType =\n                tagNameLower === \"script\" ? templateScript :\n                tagNameLower === \"textarea\" ? templateTextArea :\n                    // For browsers with proper <template> element support, where the .content property gives a document fragment\n                tagNameLower == \"template\" && element.content && element.content.nodeType === 11 ? templateTemplate :\n                templateElement;\n        }\n    }\n\n    ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\n        var elemContentsProperty = this.templateType === templateScript ? \"text\"\n                                 : this.templateType === templateTextArea ? \"value\"\n                                 : \"innerHTML\";\n\n        if (arguments.length == 0) {\n            return this.domElement[elemContentsProperty];\n        } else {\n            var valueToWrite = arguments[0];\n            if (elemContentsProperty === \"innerHTML\")\n                ko.utils.setHtml(this.domElement, valueToWrite);\n            else\n                this.domElement[elemContentsProperty] = valueToWrite;\n        }\n    };\n\n    var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\n    ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\n        if (arguments.length === 1) {\n            return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\n        } else {\n            ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\n        }\n    };\n\n    var templatesDomDataKey = ko.utils.domData.nextKey();\n    function getTemplateDomData(element) {\n        return ko.utils.domData.get(element, templatesDomDataKey) || {};\n    }\n    function setTemplateDomData(element, data) {\n        ko.utils.domData.set(element, templatesDomDataKey, data);\n    }\n\n    ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\n        var element = this.domElement;\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(element),\n                containerData = templateData.containerData;\n            return containerData || (\n                this.templateType === templateTemplate ? element.content :\n                this.templateType === templateElement ? element :\n                undefined);\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(element, {containerData: valueToWrite});\n        }\n    };\n\n    // ---- ko.templateSources.anonymousTemplate -----\n    // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\n    // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\n    // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\n\n    ko.templateSources.anonymousTemplate = function(element) {\n        this.domElement = element;\n    }\n    ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\n    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\n    ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(this.domElement);\n            if (templateData.textData === undefined && templateData.containerData)\n                templateData.textData = templateData.containerData.innerHTML;\n            return templateData.textData;\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(this.domElement, {textData: valueToWrite});\n        }\n    };\n\n    ko.exportSymbol('templateSources', ko.templateSources);\n    ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\n    ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\n})();\n(function () {\n    var _templateEngine;\n    ko.setTemplateEngine = function (templateEngine) {\n        if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\n            throw new Error(\"templateEngine must inherit from ko.templateEngine\");\n        _templateEngine = templateEngine;\n    }\n\n    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\n        var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\n        while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\n            nextInQueue = ko.virtualElements.nextSibling(node);\n            action(node, nextInQueue);\n        }\n    }\n\n    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\n        // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\n        // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\n        // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\n        // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\n        // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\n\n        if (continuousNodeArray.length) {\n            var firstNode = continuousNodeArray[0],\n                lastNode = continuousNodeArray[continuousNodeArray.length - 1],\n                parentNode = firstNode.parentNode,\n                provider = ko.bindingProvider['instance'],\n                preprocessNode = provider['preprocessNode'];\n\n            if (preprocessNode) {\n                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\n                    var nodePreviousSibling = node.previousSibling;\n                    var newNodes = preprocessNode.call(provider, node);\n                    if (newNodes) {\n                        if (node === firstNode)\n                            firstNode = newNodes[0] || nextNodeInRange;\n                        if (node === lastNode)\n                            lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\n                    }\n                });\n\n                // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\n                // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\n                // first node needs to be in the array).\n                continuousNodeArray.length = 0;\n                if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\n                    return;\n                }\n                if (firstNode === lastNode) {\n                    continuousNodeArray.push(firstNode);\n                } else {\n                    continuousNodeArray.push(firstNode, lastNode);\n                    ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n                }\n            }\n\n            // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\n            // whereas a regular applyBindings won't introduce new memoized nodes\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.applyBindings(bindingContext, node);\n            });\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\n            });\n\n            // Make sure any changes done by applyBindings or unmemoize are reflected in the array\n            ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n        }\n    }\n\n    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\n        return nodeOrNodeArray.nodeType ? nodeOrNodeArray\n                                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\n                                        : null;\n    }\n\n    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\n        options = options || {};\n        var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n        var templateDocument = (firstTargetNode || template || {}).ownerDocument;\n        var templateEngineToUse = (options['templateEngine'] || _templateEngine);\n        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\n        var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\n\n        // Loosely check result is an array of DOM nodes\n        if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\n            throw new Error(\"Template engine must return an array of DOM nodes\");\n\n        var haveAddedNodesToParent = false;\n        switch (renderMode) {\n            case \"replaceChildren\":\n                ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"replaceNode\":\n                ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"ignoreTargetNode\": break;\n            default:\n                throw new Error(\"Unknown renderMode: \" + renderMode);\n        }\n\n        if (haveAddedNodesToParent) {\n            activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\n            if (options['afterRender'])\n                ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext['$data']]);\n        }\n\n        return renderedNodesArray;\n    }\n\n    function resolveTemplateName(template, data, context) {\n        // The template can be specified as:\n        if (ko.isObservable(template)) {\n            // 1. An observable, with string value\n            return template();\n        } else if (typeof template === 'function') {\n            // 2. A function of (data, context) returning a string\n            return template(data, context);\n        } else {\n            // 3. A string\n            return template;\n        }\n    }\n\n    ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\n        options = options || {};\n        if ((options['templateEngine'] || _templateEngine) == undefined)\n            throw new Error(\"Set a template engine before calling renderTemplate\");\n        renderMode = renderMode || \"replaceChildren\";\n\n        if (targetNodeOrNodeArray) {\n            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\n            var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\n            var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\n\n            return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\n                function () {\n                    // Ensure we've got a proper binding context to work with\n                    var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\n                        ? dataOrBindingContext\n                        : new ko.bindingContext(dataOrBindingContext, null, null, null, { \"exportDependencies\": true });\n\n                    var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\n                        renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\n\n                    if (renderMode == \"replaceNode\") {\n                        targetNodeOrNodeArray = renderedNodesArray;\n                        firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n                    }\n                },\n                null,\n                { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\n            );\n        } else {\n            // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\n            return ko.memoization.memoize(function (domNode) {\n                ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\n            });\n        }\n    };\n\n    ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\n        // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\n        // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\n        var arrayItemContext;\n\n        // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\n        var executeTemplateForArrayItem = function (arrayValue, index) {\n            // Support selecting template as a function of the data being rendered\n            arrayItemContext = parentBindingContext['createChildContext'](arrayValue, options['as'], function(context) {\n                context['$index'] = index;\n            });\n\n            var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\n            return executeTemplate(null, \"ignoreTargetNode\", templateName, arrayItemContext, options);\n        }\n\n        // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\n        var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\n            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\n            if (options['afterRender'])\n                options['afterRender'](addedNodesArray, arrayValue);\n\n            // release the \"cache\" variable, so that it can be collected by\n            // the GC when its value isn't used from within the bindings anymore.\n            arrayItemContext = null;\n        };\n\n        return ko.dependentObservable(function () {\n            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            var filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return options['includeDestroyed'] || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\n            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\n            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, filteredArray, executeTemplateForArrayItem, options, activateBindingsCallback]);\n\n        }, null, { disposeWhenNodeIsRemoved: targetNode });\n    };\n\n    var templateComputedDomDataKey = ko.utils.domData.nextKey();\n    function disposeOldComputedAndStoreNewOne(element, newComputed) {\n        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\n        if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\n            oldComputed.dispose();\n        ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && newComputed.isActive()) ? newComputed : undefined);\n    }\n\n    ko.bindingHandlers['template'] = {\n        'init': function(element, valueAccessor) {\n            // Support anonymous templates\n            var bindingValue = ko.utils.unwrapObservable(valueAccessor());\n            if (typeof bindingValue == \"string\" || bindingValue['name']) {\n                // It's a named template - clear the element\n                ko.virtualElements.emptyNode(element);\n            } else if ('nodes' in bindingValue) {\n                // We've been given an array of DOM nodes. Save them as the template source.\n                // There is no known use case for the node array being an observable array (if the output\n                // varies, put that behavior *into* your template - that's what templates are for), and\n                // the implementation would be a mess, so assert that it's not observable.\n                var nodes = bindingValue['nodes'] || [];\n                if (ko.isObservable(nodes)) {\n                    throw new Error('The \"nodes\" option must be a plain, non-observable array.');\n                }\n                var container = ko.utils.moveCleanedNodesToContainerElement(nodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            } else {\n                // It's an anonymous template - store the element contents, then clear the element\n                var templateNodes = ko.virtualElements.childNodes(element),\n                    container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            }\n            return { 'controlsDescendantBindings': true };\n        },\n        'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var value = valueAccessor(),\n                options = ko.utils.unwrapObservable(value),\n                shouldDisplay = true,\n                templateComputed = null,\n                templateName;\n\n            if (typeof options == \"string\") {\n                templateName = value;\n                options = {};\n            } else {\n                templateName = options['name'];\n\n                // Support \"if\"/\"ifnot\" conditions\n                if ('if' in options)\n                    shouldDisplay = ko.utils.unwrapObservable(options['if']);\n                if (shouldDisplay && 'ifnot' in options)\n                    shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\n            }\n\n            if ('foreach' in options) {\n                // Render once for each data point (treating data set as empty if shouldDisplay==false)\n                var dataArray = (shouldDisplay && options['foreach']) || [];\n                templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);\n            } else if (!shouldDisplay) {\n                ko.virtualElements.emptyNode(element);\n            } else {\n                // Render once for this single data point (or use the viewModel if no data was provided)\n                var innerBindingContext = ('data' in options) ?\n                    bindingContext.createStaticChildContext(options['data'], options['as']) :  // Given an explitit 'data' value, we create a child binding context for it\n                    bindingContext;                                                        // Given no explicit 'data' value, we retain the same binding context\n                templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);\n            }\n\n            // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\n            disposeOldComputedAndStoreNewOne(element, templateComputed);\n        }\n    };\n\n    // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\n    ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\n        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\n\n        if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\n            return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\n\n        if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\n            return null; // Named templates can be rewritten, so return \"no error\"\n        return \"This template engine does not support anonymous templates nested within its templates\";\n    };\n\n    ko.virtualElements.allowedBindings['template'] = true;\n})();\n\nko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\nko.exportSymbol('renderTemplate', ko.renderTemplate);\n// Go through the items that have been added and deleted and try to find matches between them.\nko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\n    if (left.length && right.length) {\n        var failedCompares, l, r, leftItem, rightItem;\n        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n            for (r = 0; rightItem = right[r]; ++r) {\n                if (leftItem['value'] === rightItem['value']) {\n                    leftItem['moved'] = rightItem['index'];\n                    rightItem['moved'] = leftItem['index'];\n                    right.splice(r, 1);         // This item is marked as moved; so remove it from right list\n                    failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\n                    break;\n                }\n            }\n            failedCompares += r;\n        }\n    }\n};\n\nko.utils.compareArrays = (function () {\n    var statusNotInOld = 'added', statusNotInNew = 'deleted';\n\n    // Simple calculation based on Levenshtein distance.\n    function compareArrays(oldArray, newArray, options) {\n        // For backward compatibility, if the third arg is actually a bool, interpret\n        // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n        options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\n        oldArray = oldArray || [];\n        newArray = newArray || [];\n\n        if (oldArray.length < newArray.length)\n            return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\n        else\n            return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\n    }\n\n    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n        var myMin = Math.min,\n            myMax = Math.max,\n            editDistanceMatrix = [],\n            smlIndex, smlIndexMax = smlArray.length,\n            bigIndex, bigIndexMax = bigArray.length,\n            compareRange = (bigIndexMax - smlIndexMax) || 1,\n            maxDistance = smlIndexMax + bigIndexMax + 1,\n            thisRow, lastRow,\n            bigIndexMaxForRow, bigIndexMinForRow;\n\n        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n            lastRow = thisRow;\n            editDistanceMatrix.push(thisRow = []);\n            bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n            bigIndexMinForRow = myMax(0, smlIndex - 1);\n            for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n                if (!bigIndex)\n                    thisRow[bigIndex] = smlIndex + 1;\n                else if (!smlIndex)  // Top row - transform empty array into new array via additions\n                    thisRow[bigIndex] = bigIndex + 1;\n                else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\n                    thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\n                else {\n                    var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\n                    var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\n                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n                }\n            }\n        }\n\n        var editScript = [], meMinusOne, notInSml = [], notInBig = [];\n        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n            meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n            if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\n                notInSml.push(editScript[editScript.length] = {     // added\n                    'status': statusNotInSml,\n                    'value': bigArray[--bigIndex],\n                    'index': bigIndex });\n            } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n                notInBig.push(editScript[editScript.length] = {     // deleted\n                    'status': statusNotInBig,\n                    'value': smlArray[--smlIndex],\n                    'index': smlIndex });\n            } else {\n                --bigIndex;\n                --smlIndex;\n                if (!options['sparse']) {\n                    editScript.push({\n                        'status': \"retained\",\n                        'value': bigArray[bigIndex] });\n                }\n            }\n        }\n\n        // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n        // smlIndexMax keeps the time complexity of this algorithm linear.\n        ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\n\n        return editScript.reverse();\n    }\n\n    return compareArrays;\n})();\n\nko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\n(function () {\n    // Objective:\n    // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\n    //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\n    // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\n    //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\n    //   previously mapped - retain those nodes, and just insert/delete other ones\n\n    // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\n    // You can use this, for example, to activate bindings on those nodes.\n\n    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\n        // Map this array value inside a dependentObservable so we re-map when any dependency changes\n        var mappedNodes = [];\n        var dependentObservable = ko.dependentObservable(function() {\n            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\n\n            // On subsequent evaluations, just replace the previously-inserted DOM nodes\n            if (mappedNodes.length > 0) {\n                ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\n                if (callbackAfterAddingNodes)\n                    ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\n            }\n\n            // Replace the contents of the mappedNodes array, thereby updating the record\n            // of which nodes would be deleted if valueToMap was itself later removed\n            mappedNodes.length = 0;\n            ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\n        }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\n        return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\n    }\n\n    var lastMappingResultDomDataKey = ko.utils.domData.nextKey(),\n        deletedItemDummyValue = ko.utils.domData.nextKey();\n\n    ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes) {\n        // Compare the provided array against the previous one\n        array = array || [];\n        options = options || {};\n        var isFirstExecution = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) === undefined;\n        var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) || [];\n        var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; });\n        var editScript = ko.utils.compareArrays(lastArray, array, options['dontLimitMoves']);\n\n        // Build the new mapping result\n        var newMappingResult = [];\n        var lastMappingResultIndex = 0;\n        var newMappingResultIndex = 0;\n\n        var nodesToDelete = [];\n        var itemsToProcess = [];\n        var itemsForBeforeRemoveCallbacks = [];\n        var itemsForMoveCallbacks = [];\n        var itemsForAfterAddCallbacks = [];\n        var mapData;\n\n        function itemMovedOrRetained(editScriptIndex, oldPosition) {\n            mapData = lastMappingResult[oldPosition];\n            if (newMappingResultIndex !== oldPosition)\n                itemsForMoveCallbacks[editScriptIndex] = mapData;\n            // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\n            mapData.indexObservable(newMappingResultIndex++);\n            ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\n            newMappingResult.push(mapData);\n            itemsToProcess.push(mapData);\n        }\n\n        function callCallback(callback, items) {\n            if (callback) {\n                for (var i = 0, n = items.length; i < n; i++) {\n                    if (items[i]) {\n                        ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\n                            callback(node, i, items[i].arrayEntry);\n                        });\n                    }\n                }\n            }\n        }\n\n        for (var i = 0, editScriptItem, movedIndex; editScriptItem = editScript[i]; i++) {\n            movedIndex = editScriptItem['moved'];\n            switch (editScriptItem['status']) {\n                case \"deleted\":\n                    if (movedIndex === undefined) {\n                        mapData = lastMappingResult[lastMappingResultIndex];\n\n                        // Stop tracking changes to the mapping for these nodes\n                        if (mapData.dependentObservable) {\n                            mapData.dependentObservable.dispose();\n                            mapData.dependentObservable = undefined;\n                        }\n\n                        // Queue these nodes for later removal\n                        if (ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\n                            if (options['beforeRemove']) {\n                                newMappingResult.push(mapData);\n                                itemsToProcess.push(mapData);\n                                if (mapData.arrayEntry === deletedItemDummyValue) {\n                                    mapData = null;\n                                } else {\n                                    itemsForBeforeRemoveCallbacks[i] = mapData;\n                                }\n                            }\n                            if (mapData) {\n                                nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\n                            }\n                        }\n                    }\n                    lastMappingResultIndex++;\n                    break;\n\n                case \"retained\":\n                    itemMovedOrRetained(i, lastMappingResultIndex++);\n                    break;\n\n                case \"added\":\n                    if (movedIndex !== undefined) {\n                        itemMovedOrRetained(i, movedIndex);\n                    } else {\n                        mapData = { arrayEntry: editScriptItem['value'], indexObservable: ko.observable(newMappingResultIndex++) };\n                        newMappingResult.push(mapData);\n                        itemsToProcess.push(mapData);\n                        if (!isFirstExecution)\n                            itemsForAfterAddCallbacks[i] = mapData;\n                    }\n                    break;\n            }\n        }\n\n        // Store a copy of the array items we just considered so we can difference it next time\n        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\n\n        // Call beforeMove first before any changes have been made to the DOM\n        callCallback(options['beforeMove'], itemsForMoveCallbacks);\n\n        // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\n        ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\n\n        // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\n        for (var i = 0, nextNode = ko.virtualElements.firstChild(domNode), lastNode, node; mapData = itemsToProcess[i]; i++) {\n            // Get nodes for newly added items\n            if (!mapData.mappedNodes)\n                ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\n\n            // Put nodes in the right place if they aren't there already\n            for (var j = 0; node = mapData.mappedNodes[j]; nextNode = node.nextSibling, lastNode = node, j++) {\n                if (node !== nextNode)\n                    ko.virtualElements.insertAfter(domNode, node, lastNode);\n            }\n\n            // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\n            if (!mapData.initialized && callbackAfterAddingNodes) {\n                callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\n                mapData.initialized = true;\n            }\n        }\n\n        // If there's a beforeRemove callback, call it after reordering.\n        // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\n        // some sort of animation, which is why we first reorder the nodes that will be removed. If the\n        // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\n        // Perhaps we'll make that change in the future if this scenario becomes more common.\n        callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\n\n        // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\n        // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\n        // with an actual item in the array and appear as \"retained\" or \"moved\".\n        for (i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) {\n            if (itemsForBeforeRemoveCallbacks[i]) {\n                itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue;\n            }\n        }\n\n        // Finally call afterMove and afterAdd callbacks\n        callCallback(options['afterMove'], itemsForMoveCallbacks);\n        callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\n    }\n})();\n\nko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\nko.nativeTemplateEngine = function () {\n    this['allowTemplateRewriting'] = false;\n}\n\nko.nativeTemplateEngine.prototype = new ko.templateEngine();\nko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\nko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\n        templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\n        templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\n\n    if (templateNodes) {\n        return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\n    } else {\n        var templateText = templateSource['text']();\n        return ko.utils.parseHtmlFragment(templateText, templateDocument);\n    }\n};\n\nko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\nko.setTemplateEngine(ko.nativeTemplateEngine.instance);\n\nko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\n(function() {\n    ko.jqueryTmplTemplateEngine = function () {\n        // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\n        // doesn't expose a version number, so we have to infer it.\n        // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\n        // which KO internally refers to as version \"2\", so older versions are no longer detected.\n        var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\n            if (!jQueryInstance || !(jQueryInstance['tmpl']))\n                return 0;\n            // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\n            try {\n                if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\n                    // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\n                    return 2; // Final version of jquery.tmpl\n                }\n            } catch(ex) { /* Apparently not the version we were looking for */ }\n\n            return 1; // Any older version that we don't support\n        })();\n\n        function ensureHasReferencedJQueryTemplates() {\n            if (jQueryTmplVersion < 2)\n                throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\n        }\n\n        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\n            return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\n        }\n\n        this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\n            templateDocument = templateDocument || document;\n            options = options || {};\n            ensureHasReferencedJQueryTemplates();\n\n            // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\n            var precompiled = templateSource['data']('precompiled');\n            if (!precompiled) {\n                var templateText = templateSource['text']() || \"\";\n                // Wrap in \"with($whatever.koBindingContext) { ... }\"\n                templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\n\n                precompiled = jQueryInstance['template'](null, templateText);\n                templateSource['data']('precompiled', precompiled);\n            }\n\n            var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\n            var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\n\n            var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\n            resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\n\n            jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\n            return resultNodes;\n        };\n\n        this['createJavaScriptEvaluatorBlock'] = function(script) {\n            return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\n        };\n\n        this['addTemplate'] = function(templateName, templateMarkup) {\n            document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\n        };\n\n        if (jQueryTmplVersion > 0) {\n            jQueryInstance['tmpl']['tag']['ko_code'] = {\n                open: \"__.push($1 || '');\"\n            };\n            jQueryInstance['tmpl']['tag']['ko_with'] = {\n                open: \"with($1) {\",\n                close: \"} \"\n            };\n        }\n    };\n\n    ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\n    ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\n\n    // Use this one by default *only if jquery.tmpl is referenced*\n    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\n    if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\n        ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\n\n    ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\n})();\n}));\n}());\n})();\n","// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n/*@__PURE__*/ (function () {\n    if (!_root) {\n        throw /*@__PURE__*/ new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\nexport { _root as root };\n//# sourceMappingURL=root.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport var config = {\n    /**\n     * The promise constructor used by default for methods such as\n     * {@link toPromise} and {@link forEach}\n     */\n    Promise: undefined,\n    /**\n     * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n     * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n     * call in a try/catch block. It also enables producer interference, a nasty bug\n     * where a multicast can be broken for all observers by a downstream consumer with\n     * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n     * FOR MIGRATION REASONS.\n     */\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; });\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x != null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","// typeof any so that it we don't have to cast when comparing a result to the error object\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n","/** PURE_IMPORTS_START _errorObject PURE_IMPORTS_END */\nimport { errorObject } from './errorObject';\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nexport function tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n//# sourceMappingURL=tryCatch.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        var _this = _super.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '') || this;\n        _this.errors = errors;\n        _this.name = 'UnsubscriptionError';\n        Object.setPrototypeOf(_this, UnsubscriptionError.prototype);\n        return _this;\n    }\n    return UnsubscriptionError;\n}(Error));\nexport { UnsubscriptionError };\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_tryCatch,_util_errorObject,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = /*@__PURE__*/ (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        /** @internal */\n        this._parent = null;\n        /** @internal */\n        this._parents = null;\n        /** @internal */\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            var trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    var trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    /** @internal */\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    /** @nocollapse */\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? /*@__PURE__*/ Symbol.for('rxSubscriber')\n    : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        /** @internal */ _this.syncErrorValue = null;\n        /** @internal */ _this.syncErrorThrown = false;\n        /** @internal */ _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    // HACK(benlesh): For situations where Node has multiple copies of rxjs in\n                    // node_modules, we cannot rely on `instanceof` checks\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriberSymbol]();\n                        _this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        _this.destination = trustedSubscriber;\n                        trustedSubscriber.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     * @nocollapse\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n//# sourceMappingURL=Subscriber.js.map\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n//# sourceMappingURL=observable.js.map\n","/* tslint:disable:no-empty */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\nimport { noop } from './noop';\n/* tslint:enable:max-line-length */\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\n/* @internal */\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","/** PURE_IMPORTS_START _util_toSubscriber,_internal_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = /*@__PURE__*/ (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        /** Internal implementation detail, do not use directly. */\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     * @nocollapse\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/**\r\n * @author base1.christiaan@gmail.com (Christiaan Lombard)\r\n */\r\nimport ko from 'knockout';\r\n\r\n/**\r\n * The LocationViewModel represents a general location/address\r\n * provided by the GeocoderService\r\n */\r\nexport class LocationViewModel {\r\n    constructor(placeId, address, geoBounds, geoLocation){\r\n        this.placeId = placeId;\r\n        this.geoBounds = geoBounds;\r\n        this.address = address;\r\n        this.geoLocation = geoLocation;\r\n    }\r\n}\r\n\r\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var _this = _super.call(this, 'object unsubscribed') || this;\n        _this.name = 'ObjectUnsubscribedError';\n        Object.setPrototypeOf(_this, ObjectUnsubscribedError.prototype);\n        return _this;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexport { ObjectUnsubscribedError };\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\nexport { SubjectSubscription };\n//# sourceMappingURL=SubjectSubscription.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nexport { SubjectSubscriber };\n/**\n * @class Subject<T>\n */\nvar Subject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    /**@nocollapse */\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @deprecated This is an internal implementation detail, do not use. */\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject));\nexport { BehaviorSubject };\n//# sourceMappingURL=BehaviorSubject.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n","/** PURE_IMPORTS_START tslib,_.._util_root,_.._util_tryCatch,_.._util_errorObject,_.._Observable,_.._Subscriber,_.._operators_map PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { root } from '../../util/root';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\nfunction getCORSRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else if (!!root.XDomainRequest) {\n        return new root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                    //suppress exceptions\n                }\n            }\n            return new root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nexport function ajaxGet(url, headers) {\n    if (headers === void 0) {\n        headers = null;\n    }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\nexport function ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\nexport function ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\nexport function ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\nexport function ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\nvar mapResponse = /*@__PURE__*/ map(function (x, index) { return x.response; });\nexport function ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url: url,\n        responseType: 'json',\n        headers: headers\n    }));\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar AjaxObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        var _this = _super.call(this) || this;\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n            },\n            crossDomain: true,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        _this.request = request;\n        return _this;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    /**\n     * Creates an observable for an Ajax request with either a request object with\n     * url, headers, etc or a string for a URL.\n     *\n     * @example\n     * source = Rx.Observable.ajax('/products');\n     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n     *\n     * @param {string|Object} request Can be one of the following:\n     *   A string of the URL to make the Ajax call.\n     *   An object with the following properties\n     *   - url: URL of the request\n     *   - body: The body of the request\n     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n     *   - async: Whether the request is async\n     *   - headers: Optional headers\n     *   - crossDomain: true if a cross domain request, else false\n     *   - createXHR: a function to override if you need to use an alternate\n     *   XMLHttpRequest implementation.\n     *   - resultSelector: a function to use to alter the output value type of\n     *   the Observable. Gets {@link AjaxResponse} as an argument.\n     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n     * @static true\n     * @name ajax\n     * @owner Observable\n     * @nocollapse\n    */\n    AjaxObservable.create = (function () {\n        var create = function (urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.patch = ajaxPatch;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    })();\n    return AjaxObservable;\n}(Observable));\nexport { AjaxObservable };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AjaxSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        var _this = _super.call(this, destination) || this;\n        _this.request = request;\n        _this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = _this.serializeBody(request.body, request.headers['Content-Type']);\n        _this.send();\n        return _this;\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var response = new AjaxResponse(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch(createXHR).call(request);\n        if (xhr === errorObject) {\n            this.error(errorObject.e);\n        }\n        else {\n            this.xhr = xhr;\n            // set up the events before open XHR\n            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n            // You need to add the event listeners before calling open() on the request.\n            // Otherwise the progress events will not fire.\n            this.setupEvents(xhr, request);\n            // open XHR\n            var result = void 0;\n            if (user) {\n                result = tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            }\n            else {\n                result = tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject) {\n                this.error(errorObject.e);\n                return null;\n            }\n            // timeout, responseType and withCredentials can be set once the XHR is open\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            // set headers\n            this.setHeaders(xhr, headers);\n            // finally send the request\n            result = body ? tryCatch(xhr.send).call(xhr, body) : tryCatch(xhr.send).call(xhr);\n            if (result === errorObject) {\n                this.error(errorObject.e);\n                return null;\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root.FormData && body instanceof root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(body[key]); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n        }\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var xhrProgress_1;\n                xhrProgress_1 = function (e) {\n                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress_1;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress_1;\n                }\n                xhrProgress_1.progressSubscriber = progressSubscriber;\n            }\n            var xhrError_1;\n            xhrError_1 = function (e) {\n                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError('ajax error', this, request));\n            };\n            xhr.onerror = xhrError_1;\n            xhrError_1.request = request;\n            xhrError_1.subscriber = this;\n            xhrError_1.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                // 4xx and 5xx should error (https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html)\n                if (status_1 < 400) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n                }\n            }\n        }\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber));\nexport { AjaxSubscriber };\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nvar AjaxResponse = /*@__PURE__*/ (function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxResponse;\n}());\nexport { AjaxResponse };\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nvar AjaxError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        _this.xhr = xhr;\n        _this.request = request;\n        _this.status = xhr.status;\n        _this.responseType = xhr.responseType || request.responseType;\n        _this.response = parseXhrResponse(_this.responseType, xhr);\n        _this.name = 'AjaxError';\n        Object.setPrototypeOf(_this, AjaxError.prototype);\n        return _this;\n    }\n    return AjaxError;\n}(Error));\nexport { AjaxError };\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            // HACK(benlesh): TypeScript shennanigans\n            // tslint:disable-next-line:no-any XMLHttpRequest is defined to always have 'response' inferring xhr as never for the else clause.\n            if ('response' in xhr) {\n                //IE does not support json as responseType, parse it internally\n                return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n            }\n            else {\n                return JSON.parse(xhr.responseText || 'null');\n            }\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            // HACK(benlesh): TypeScript shennanigans\n            // tslint:disable-next-line:no-any XMLHttpRequest is defined to always have 'response' inferring xhr as never for the else sub-expression.\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nvar AjaxTimeoutError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        var _this = _super.call(this, 'ajax timeout', xhr, request) || this;\n        Object.setPrototypeOf(_this, AjaxTimeoutError.prototype);\n        return _this;\n    }\n    return AjaxTimeoutError;\n}(AjaxError));\nexport { AjaxTimeoutError };\n//# sourceMappingURL=AjaxObservable.js.map\n","/** PURE_IMPORTS_START _AjaxObservable PURE_IMPORTS_END */\nimport { AjaxObservable } from './AjaxObservable';\nexport var ajax = AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map\n","/**\r\n * @author base1.christiaan@gmail.com (Christiaan Lombard)\r\n */\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { ajax } from 'rxjs/ajax';\r\n\r\nexport const FS_CATEGORY_BAR = '4bf58dd8d48988d116941735';\r\nexport const FS_CATEGORY_BREWERY = '50327c8591d4c4b30a586d5d';\r\n\r\n\r\n/**\r\n * The FoursquareService requests venues from the Foursquare API\r\n */\r\nexport class FoursquareService {\r\n\r\n    /**\r\n     * \"Returns a list of venues near the current location\"\r\n     * See https://developer.foursquare.com/docs/api/venues/search\r\n     *\r\n     * @param {LatLng} geoLocation\r\n     * @param {Array[string]} categories\r\n     */\r\n    searchVenues(geoLocation, categories){\r\n\r\n        let ll = [geoLocation.lat, geoLocation.lng].join(',');\r\n        let intent = 'browse';\r\n        let radius = 10000;\r\n        let categoryId = categories.join(',');\r\n\r\n        return this._request('venues/search', {ll, intent, radius, categoryId});\r\n    }\r\n\r\n    /**\r\n     * \"Gives the full details about a venue including location, tips, and categories.\"\r\n     * See https://developer.foursquare.com/docs/api/venues/details\r\n     *\r\n     * @param {string} venueId\r\n     */\r\n    venueDetail(venueId){\r\n        return this._request(`venues/${venueId}`);\r\n    }\r\n\r\n    /**\r\n     * Build a base ajax request\r\n     *\r\n     * @param {string} urlSlug\r\n     * @param {any} params\r\n     */\r\n    _request(urlSlug, params){\r\n\r\n        let defaults = {\r\n            client_id: \"HETCXLL4DLMY1E0AYRIMRAC3J1YQBT4OVOIVSZVBWYCMKNVP\",\r\n            client_secret: \"HYWDNHYSCC0MG1XQ3ZK1ATUM0Y2CN3DEPO5M2X50FNZP3SQY\",\r\n            v: \"20180511\",\r\n        };\r\n\r\n        let query = this._getQuery(Object.assign(defaults, params));\r\n\r\n        return ajax(`https://api.foursquare.com/v2/${urlSlug}${query}`)\r\n                    .pipe(\r\n                        map(resource => {\r\n                            let result = resource.response.response;\r\n                            return result;\r\n                        })\r\n                    );\r\n    }\r\n\r\n    /**\r\n     * Convert object to query string\r\n     * @param {any} obj\r\n     */\r\n    _getQuery(obj){\r\n        return Object.keys(obj).reduce(function (str, key, i) {\r\n            var delimiter, val;\r\n            delimiter = (i === 0) ? '?' : '&';\r\n            key = encodeURIComponent(key);\r\n            val = encodeURIComponent(obj[key]);\r\n            return [str, delimiter, key, '=', val].join('');\r\n        }, '');\r\n    }\r\n\r\n}","/**\r\n * @author base1.christiaan@gmail.com (Christiaan Lombard)\r\n */\r\n\r\nexport const PLACES_SEED = [\r\n    {\r\n        \"id\": \"4d821092bede5481ef540ad1\",\r\n        \"name\": \"Spice Route\",\r\n        \"address\": \"Agter Suid Paarl Road, Paarl, 7624, South Africa\",\r\n        \"geoLocation\": {\r\n            \"lat\": -33.763847650765754,\r\n            \"lng\": 18.918949966040618\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"52a8bf69498e46d020e60924\",\r\n        \"name\": \"EJ's\",\r\n        \"address\": \"South Africa\",\r\n        \"geoLocation\": {\r\n            \"lat\": -33.709931,\r\n            \"lng\": 18.97583\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"55576b0e498e23395a06e309\",\r\n        \"name\": \"Bar Di Bar\",\r\n        \"address\": \"R301 Hartebees Farm, Paarl, South Africa\",\r\n        \"geoLocation\": {\r\n            \"lat\": -33.76539334770274,\r\n            \"lng\": 18.958107470745208\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"5a969bf731ac6c13bb963dc3\",\r\n        \"name\": \"Berg River Brewery\",\r\n        \"address\": \"Paarl, 7646, South Africa\",\r\n        \"geoLocation\": {\r\n            \"lat\": -33.709625,\r\n            \"lng\": 18.973954\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"4fe352e0e4b09319dba871b3\",\r\n        \"name\": \"Crown Bar\",\r\n        \"address\": \"Main, Paarl, South Africa\",\r\n        \"geoLocation\": {\r\n            \"lat\": -33.722465,\r\n            \"lng\": 18.963316\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"5752db5c498ef777130a2cfa\",\r\n        \"name\": \"The Alchemist\",\r\n        \"address\": \"South Africa\",\r\n        \"geoLocation\": {\r\n            \"lat\": -33.385113,\r\n            \"lng\": 18.89609\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"4ba76f01f964a5208d9339e3\",\r\n        \"name\": \"The Farmers' Arms\",\r\n        \"address\": \"South Africa\",\r\n        \"geoLocation\": {\r\n            \"lat\": -33.353678,\r\n            \"lng\": 18.872149\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"4bdef070c3392d7f7d9c9bd5\",\r\n        \"name\": \"The Trumpet Tree\",\r\n        \"address\": \"84 Dorp Street, Stellenbosch, South Africa\",\r\n        \"geoLocation\": {\r\n            \"lat\": -33.93938515345174,\r\n            \"lng\": 18.855748861461073\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"4b86bac0f964a520489931e3\",\r\n        \"name\": \"Aandklas\",\r\n        \"address\": \"43A Bird Street, Stellenbosch, 7600, South Africa\",\r\n        \"geoLocation\": {\r\n            \"lat\": -33.93412163793121,\r\n            \"lng\": 18.85874960309748\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"514c23a8164883a0713b6309\",\r\n        \"name\": \"Stellenbrau Brewery\",\r\n        \"address\": \"Vredenburg Road, Stellenbosch, South Africa\",\r\n        \"geoLocation\": {\r\n            \"lat\": -33.942783252630086,\r\n            \"lng\": 18.828218307636728\r\n        }\r\n    }\r\n];","/**\r\n * @author base1.christiaan@gmail.com (Christiaan Lombard)\r\n */\r\n\r\nimport ko from 'knockout';\r\n\r\n/**\r\n * The PlaceDetailViewModel represents a specific\r\n * venue/place provided by the PlacesService\r\n *\r\n */\r\nexport class PlaceViewModel {\r\n\r\n    /**\r\n     * Make a PlaceViewModel instance\r\n     * @param {string} id\r\n     * @param {string} name\r\n     * @param {string} address\r\n     * @param {LatLng} geoLocation\r\n     * @param {boolean} isSaved\r\n     */\r\n    constructor(id, name, address, geoLocation, isSaved){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.address = address;\r\n        this.geoLocation = geoLocation;\r\n        this.isSaved = ko.observable(isSaved);\r\n        this.marker = null;\r\n    }\r\n\r\n    /**\r\n     * Convert to object for JSONification\r\n     */\r\n    serialize(){\r\n        return {\r\n            id: this.id,\r\n            name: this.name,\r\n            address: this.address,\r\n            geoLocation: this.geoLocation\r\n        };\r\n    }\r\n\r\n}\r\n","/**\r\n * Source: https://snazzymaps.com/style/79825/retro-eco\r\n */\r\n\r\nexport const MAP_STYLES = [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ebe3cd\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#523735\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f5f1e6\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#c9b2a6\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.land_parcel\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#dcd2be\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.land_parcel\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ae9e90\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.natural\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#dfd2ae\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#dfd2ae\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#93817c\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi.park\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#a5b076\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi.park\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#447530\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f5f1e6\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f8c967\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#e9bc62\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway.controlled_access\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#e98d58\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway.controlled_access\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#db8555\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#fdfcf8\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#806b63\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit.line\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#dfd2ae\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit.line\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#8f7d77\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit.line\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ebe3cd\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit.station\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#dfd2ae\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#b9d3c2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#92998d\"\r\n            }\r\n        ]\r\n    }\r\n];","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        return _this;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=filter.js.map\n","/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Action } from './Action';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\nexport { Action };\n//# sourceMappingURL=Action.js.map\n","/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nvar Scheduler = /*@__PURE__*/ (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    /** @nocollapse */\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexport { Scheduler };\n//# sourceMappingURL=Scheduler.js.map\n","/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexport var async = /*@__PURE__*/ new AsyncScheduler(AsyncAction);\n//# sourceMappingURL=async.js.map\n","/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        var _this = _super.call(this, SchedulerAction, function () {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        }) || this;\n        _this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         * @deprecated internal use only\n         */\n        _this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         * @deprecated internal use only\n         */\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return _super.prototype.schedule.call(this, work, delay, state);\n        }\n    };\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n//# sourceMappingURL=AsyncScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };\n}\nvar DebounceTimeOperator = /*@__PURE__*/ (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.dueTime = dueTime;\n        _this.scheduler = scheduler;\n        _this.debouncedSubscription = null;\n        _this.lastValue = null;\n        _this.hasValue = false;\n        return _this;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            var lastValue = this.lastValue;\n            // This must be done *before* passing the value\n            // along to the destination because it's possible for\n            // the value to synchronously re-enter this operator\n            // recursively when scheduled with things like\n            // VirtualScheduler/TestScheduler.\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map\n","/**\r\n * @author base1.christiaan@gmail.com (Christiaan Lombard)\r\n */\r\n\r\nexport const RECOMMENDED_LOCATIONS = [\r\n    {\r\n        \"placeId\": \"ChIJrYtLqoAHzR0RueimdhBPEW0\",\r\n        \"geoLocation\": {\r\n            \"lat\" : -33.7342304,\r\n            \"lng\" : 18.9621091\r\n        },\r\n        \"address\": \"Paarl, South Africa\",\r\n        \"geoBounds\": null,\r\n    },\r\n    {\r\n        \"placeId\": \"ChIJ1-4miA9QzB0Rh6ooKPzhf2g\",\r\n        \"geoLocation\": {\r\n            \"lat\" : -33.9248685,\r\n            \"lng\" : 18.4240553\r\n        },\r\n        \"address\": \"Cape Town, South Africa\",\r\n        \"geoBounds\": null,\r\n    },\r\n    {\r\n        \"placeId\": \"ChIJrYtLqoAHzR0RueimdhBPEW0\",\r\n        \"geoLocation\": {\r\n            \"lat\" : -32.595174,\r\n            \"lng\" : 26.9322553\r\n        },\r\n        \"address\": \"Hogsback, 5721, South Africa\",\r\n        \"geoBounds\": null,\r\n    }\r\n];","/**\r\n * @author base1.christiaan@gmail.com (Christiaan Lombard)\r\n */\r\n\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { map, debounceTime, filter, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\r\nimport ko from 'knockout';\r\nimport { RECOMMENDED_LOCATIONS } from '../services/locations-seed';\r\n\r\n/**\r\n * The ExploreViewModel binds to .section-explore\r\n *\r\n * - Text input is geocoded to find a general location\r\n * - Selecting a location initiates a search for venues near the location\r\n *\r\n */\r\nexport class ExploreViewModel {\r\n\r\n    /**\r\n     * Make an ExploreViewModel instance\r\n     *\r\n     * @param {MapService} mapService\r\n     * @param {GeocoderService} geocoderService\r\n     * @param {PlacesService} placesService\r\n     */\r\n    constructor(mapService, geocoderService, placesService){\r\n\r\n        this._mapService = mapService;\r\n        this._geocoderService = geocoderService;\r\n        this._placesService = placesService;\r\n        this._filterText$ = new BehaviorSubject('');\r\n        this._filterTextSub = null;\r\n\r\n        this.filterText = ko.observable('');\r\n        this.places = ko.observableArray([]);\r\n        this.locations = ko.observableArray([]);\r\n        this.error = ko.observable(null);\r\n        this.isLocationsEmpty = ko.observable(false);\r\n        this.focusedLocation = ko.observable(null);\r\n        this.showLocations = ko.observable(false);\r\n        this.showPlaces = ko.observableArray(false);\r\n\r\n        /**\r\n         * Focus on a location\r\n         *  - centers the map on the location\r\n         *  - initiates a search for places/venues\r\n         *\r\n         * @param {LocationViewModel} location\r\n         */\r\n        this.selectLocation = (location) => {\r\n\r\n            if(location.geoBounds){\r\n                this._mapService.fitBounds(location.geoBounds);\r\n            }else{\r\n                this._mapService.setCenter(location.geoLocation);\r\n                this._mapService.setZoom(12);\r\n            }\r\n\r\n            this.focusedLocation(location);\r\n            this.filterText(location.address);\r\n            this.showLocations(false);\r\n            this.searchPlaces(location.geoLocation);\r\n        };\r\n\r\n        /**\r\n         * Focus on a place\r\n         * - requests the place details\r\n         * - displays details on map\r\n         *\r\n         * @param {PlaceViewModel} place\r\n         */\r\n        this.selectPlace = (place) => {\r\n\r\n            this._mapService.setCenter(place.geoLocation);\r\n            this._mapService.setZoom(18);\r\n\r\n            this._placesService.getDetail(place)\r\n                               .subscribe(detail => {\r\n                                   this._mapService.showInfo(place, detail);\r\n                               });\r\n        };\r\n\r\n        /**\r\n         * Toggle show/hide places\r\n         */\r\n        this.togglePlaces = () => {\r\n            this.showPlaces(!this.showPlaces());\r\n        };\r\n\r\n        /**\r\n         * The computed button icon\r\n         */\r\n        this.toggleButtonIcon = ko.computed(() => {\r\n            return this.showPlaces() ? 'keyboard_arrow_down' : 'keyboard_arrow_up';\r\n        });\r\n\r\n        /**\r\n         * Add/remove a place from favorites\r\n         * @param {PlaceViewModel} place\r\n         */\r\n        this.toggleSave = (place) => {\r\n            if(place.isSaved()){\r\n                this._placesService.remove(place);\r\n            }else{\r\n                this._placesService.add(place);\r\n            }\r\n        };\r\n\r\n        this.filterText.subscribe(value => {\r\n            this._filterText$.next(value);\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Search locations matching the given address\r\n     *\r\n     * @param {string} text\r\n     */\r\n    searchLocations(text){\r\n        this._geocoderService\r\n            .geocode(text)\r\n            .subscribe(\r\n                locations => {\r\n                    this.isLocationsEmpty(locations.length === 0);\r\n                    this.locations(locations);\r\n                    this.showLocations(true);\r\n                    this.error(null);\r\n                },\r\n                error => {\r\n                    this.error('Oops! Error retreiving location results...');\r\n                    this.locations([]);\r\n                    this.showLocations(false);\r\n                    this.isLocationsEmpty(false);\r\n                }\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Search for places near the given geolocation\r\n     *\r\n     * @param {LatLng} geoLocation\r\n     */\r\n    searchPlaces(geoLocation){\r\n        this._placesService\r\n            .searchNear(geoLocation)\r\n            .subscribe(\r\n                places => {\r\n                    this.places(places);\r\n                    this.showPlaces(true);\r\n                    this.error(null);\r\n                    this.updateMapMarkers();\r\n                },\r\n                err => {\r\n                    this.places([]);\r\n                    this.showPlaces(false);\r\n                    this.error('Oops! Error retreiving places...');\r\n                    this.updateMapMarkers();\r\n                }\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Focus this component\r\n     *  - subscribes to change stream\r\n     */\r\n    focus(){\r\n        this.updateMapMarkers();\r\n\r\n        // subscribe to filter input changes,\r\n        // debounce input, initiate search\r\n        this._filterTextSub =\r\n            this._filterText$\r\n                .pipe(\r\n                    debounceTime(500),\r\n                    filter(text => {\r\n\r\n                        let focused =\r\n                            this.focusedLocation() ?\r\n                                this.focusedLocation().address : null;\r\n\r\n                        return text &&\r\n                                text.length > 1 &&\r\n                                text !== focused;\r\n                    })\r\n                )\r\n                .subscribe(\r\n                    text => {\r\n                        this.searchLocations(text);\r\n                    }\r\n                );\r\n\r\n        // select a random location if not currently selected\r\n        if(!this.focusedLocation()){\r\n            let location = this._getRandomLocation();\r\n            this.selectLocation(location);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Blur this component\r\n     *  - unsubscribes from change stream\r\n     */\r\n    blur(){\r\n        if(this._filterTextSub){\r\n            this._filterTextSub.unsubscribe();\r\n            this._filterTextSub = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the map markers with the current places\r\n     */\r\n    updateMapMarkers(){\r\n        let places = this.places();\r\n        this._mapService.fitPlaces(places);\r\n        this._mapService.clearMarkers();\r\n\r\n        places.forEach(place => {\r\n            let marker = this._mapService.placeMarker(place);\r\n            marker.addListener('click', () => {\r\n                this.selectPlace(place);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get a random location\r\n     *\r\n     * @private\r\n     */\r\n    _getRandomLocation(){\r\n        return RECOMMENDED_LOCATIONS[Math.floor(Math.random() * RECOMMENDED_LOCATIONS.length)];\r\n    }\r\n}","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber));\nexport { OuterSubscriber };\n//# sourceMappingURL=OuterSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.outerValue = outerValue;\n        _this.outerIndex = outerIndex;\n        _this.index = 0;\n        return _this;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber));\nexport { InnerSubscriber };\n//# sourceMappingURL=InnerSubscriber.js.map\n","/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        if (!subscriber.closed) {\n            subscriber.complete();\n        }\n    };\n};\n//# sourceMappingURL=subscribeToArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = /*@__PURE__*/ getSymbolIterator();\n/**\n * @deprecated use {@link iterator} instead\n */\nexport var $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map\n","/** PURE_IMPORTS_START _Observable,_subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeTo = function (result) {\n    if (result instanceof Observable) {\n        return function (subscriber) {\n            if (result._isScalar) {\n                subscriber.next(result.value);\n                subscriber.complete();\n                return undefined;\n            }\n            else {\n                return result.subscribe(subscriber);\n            }\n        };\n    }\n    else if (isArrayLike(result)) {\n        return subscribeToArray(result);\n    }\n    else if (isPromise(result)) {\n        return subscribeToPromise(result);\n    }\n    else if (result && typeof result[Symbol_iterator] === 'function') {\n        return subscribeToIterable(result);\n    }\n    else if (result && typeof result[Symbol_observable] === 'function') {\n        return subscribeToObservable(result);\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\"\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n//# sourceMappingURL=subscribeTo.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map\n","/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\nimport { hostReportError } from './hostReportError';\nexport var subscribeToPromise = function (promise) {\n    return function (subscriber) {\n        promise.then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, hostReportError);\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToPromise.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport var subscribeToIterable = function (iterable) {\n    return function (subscriber) {\n        var iterator = iterable[Symbol_iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                subscriber.complete();\n                break;\n            }\n            subscriber.next(item.value);\n            if (subscriber.closed) {\n                break;\n            }\n        } while (true);\n        // Finalize the iterator if it happens to be a Generator\n        if (typeof iterator.return === 'function') {\n            subscriber.add(function () {\n                if (iterator.return) {\n                    iterator.return();\n                }\n            });\n        }\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToIterable.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport var subscribeToObservable = function (obj) {\n    return function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            // Should be caught by observable subscribe function error handling.\n            throw new TypeError('Provided object does not correctly implement Symbol.observable');\n        }\n        else {\n            return obs.subscribe(subscriber);\n        }\n    };\n};\n//# sourceMappingURL=subscribeToObservable.js.map\n","/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = null;\n    var scheduler = null;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nvar CombineLatestOperator = /*@__PURE__*/ (function () {\n    function CombineLatestOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    };\n    return CombineLatestOperator;\n}());\nexport { CombineLatestOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber));\nexport { CombineLatestSubscriber };\n//# sourceMappingURL=combineLatest.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var i = 0;\n            sub.add(scheduler.schedule(function () {\n                if (i === input.length) {\n                    subscriber.complete();\n                    return;\n                }\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    sub.add(this.schedule());\n                }\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromArray.js.map\n","/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo PURE_IMPORTS_END */\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeTo } from './subscribeTo';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    return subscribeTo(result)(destination);\n}\n//# sourceMappingURL=subscribeToResult.js.map\n","/**\r\n * @author base1.christiaan@gmail.com (Christiaan Lombard)\r\n */\r\n\r\nimport { BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map, debounceTime, filter, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\r\nimport ko from 'knockout';\r\n\r\n/**\r\n * The FavoritesViewModel binds to .section-favorites\r\n *\r\n * - Text input is used to filter stored places\r\n * - Places can be selected, removed\r\n *\r\n */\r\nexport class FavoritesViewModel {\r\n\r\n    /**\r\n     * Make a FavoritesViewModel instance\r\n     *\r\n     * @param {MapService} mapService\r\n     * @param {GeocoderService} geocoderService\r\n     * @param {PlacesService} placesService\r\n     */\r\n    constructor(mapService, geocoderService, placesService){\r\n        this._mapService = mapService;\r\n        this._geocoderService = geocoderService;\r\n        this._placesService = placesService;\r\n\r\n        this._filterText$ = new BehaviorSubject('');\r\n        this._filterSub = null;\r\n\r\n        this.filterText = ko.observable('');\r\n        this.showPlaces = ko.observable(true);\r\n        this.isPlacesEmpty = ko.observable(false);\r\n        this.isFilteredEmpty = ko.observable(false);\r\n\r\n        this.places = ko.observableArray([]);\r\n\r\n        /**\r\n         * Toggle show/hide places\r\n         */\r\n        this.togglePlaces = () => {\r\n            this.showPlaces(!this.showPlaces());\r\n        };\r\n\r\n        /**\r\n         * The computed button icon\r\n         */\r\n        this.toggleButtonIcon = ko.computed(() => {\r\n            return this.showPlaces() ? 'keyboard_arrow_down' : 'keyboard_arrow_up';\r\n        });\r\n\r\n        /**\r\n         * Focus on a place\r\n         * - requests the place details\r\n         * - displays details on map\r\n         *\r\n         * @param {PlaceViewModel} place\r\n         */\r\n        this.selectPlace = (place) => {\r\n\r\n            this._placesService.getDetail(place)\r\n                               .subscribe(detail => {\r\n                                   this._mapService.showInfo(place, detail);\r\n                               });\r\n\r\n        };\r\n\r\n        /**\r\n         * Remove a place from favorites\r\n         *\r\n         * @param {PlaceViewModel} place\r\n         */\r\n        this.removePlace = (place) => {\r\n            this._placesService.remove(place);\r\n        };\r\n\r\n        // pass filter text to the BehaviorSubject\r\n        this.filterText.subscribe(text => {\r\n            this._filterText$.next(text);\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Focus this component\r\n     *  - subscribes to change stream\r\n     */\r\n    focus(){\r\n\r\n        let favorites$ = this._placesService.favorites();\r\n\r\n        // combine stream list of favorites with filter text stream\r\n        // to poulate the places list\r\n        this._filterSub = combineLatest(this._filterText$, favorites$)\r\n            .pipe(debounceTime(200))\r\n            .subscribe(changes => {\r\n\r\n                let [filterText, favorites] = changes;\r\n\r\n                if(favorites.length > 0){\r\n                    this.isPlacesEmpty(false);\r\n                }else{\r\n                    this.isPlacesEmpty(true);\r\n                }\r\n\r\n                if(filterText && filterText.length > 1){\r\n                    favorites = favorites\r\n                                    .filter(place => {\r\n                                        let target = filterText.toLowerCase();\r\n                                        let search = place.name.toLowerCase();\r\n                                        return search.search(target) !== -1;\r\n                                    });\r\n                    this.isFilteredEmpty(favorites.length === 0);\r\n                }else{\r\n                    this.isFilteredEmpty(false);\r\n                }\r\n\r\n                this.places(favorites);\r\n                this.showPlaces(true);\r\n                this.updateMapMarkers();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Blur this component\r\n     *  - unsubscribes from change stream\r\n     */\r\n    blur(){\r\n        if(this._filterSub){\r\n            this._filterSub.unsubscribe();\r\n        }\r\n        this._mapService.clearMarkers();\r\n        this._mapService.closeInfo();\r\n    }\r\n\r\n    /**\r\n     * Update the map markers with the current places\r\n     */\r\n    updateMapMarkers(){\r\n        let places = this.places();\r\n        this._mapService.fitPlaces(places);\r\n        this._mapService.clearMarkers();\r\n\r\n        places.forEach(place => {\r\n            let marker = this._mapService.placeMarker(place);\r\n            marker.addListener('click', () => {\r\n                this.selectPlace(place);\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n}","/**\r\n * @author base1.christiaan@gmail.com (Christiaan Lombard)\r\n */\r\n\r\nimport './scss/styles.scss';\r\nimport ko from 'knockout';\r\nimport { BehaviorSubject, Observable, combineLatest, of, Subject } from 'rxjs';\r\nimport { map, debounceTime, filter, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\r\n\r\nimport { GeocoderService } from './services/geocoder-service';\r\nimport { PlacesService } from './services/places-service';\r\nimport { MapService } from './services/map-service';\r\n\r\nimport { LocationViewModel } from './models/location';\r\nimport { PlaceViewModel } from './models/place';\r\n\r\nimport { ExploreViewModel } from './components/explore';\r\nimport { FavoritesViewModel } from './components/favorites';\r\n\r\n\r\n/**\r\n *\r\n * The AppViewModel acts as a router for sub components\r\n *\r\n * One model to control them all and the darkness bind them\r\n *\r\n */\r\nclass AppViewModel {\r\n\r\n    /**\r\n     * Create an instance of AppViewModel\r\n     *\r\n     * @param {MapService} mapService\r\n     * @param {GeocoderService} geocoderService\r\n     * @param {PlacesService} placesService\r\n     */\r\n    constructor(mapService, geocoderService, placesService){\r\n\r\n        this._mapService = mapService;\r\n        this._geocoderService = geocoderService;\r\n        this._placesService = placesService;\r\n\r\n        // init sub components\r\n        this.favorites = new FavoritesViewModel(mapService, geocoderService, placesService);\r\n        this.explore = new ExploreViewModel(mapService, geocoderService, placesService);\r\n\r\n        // switching the mode selects which component\r\n        // to show, 'explore' or 'favorite'\r\n        this.mode = ko.observable('explore');\r\n\r\n        // switch mode explore\r\n        this.switchModeExplore = () => {\r\n            this.mode('explore');\r\n            this.favorites.blur();\r\n            this.explore.focus();\r\n        };\r\n\r\n        // switch mode favorite\r\n        this.switchModeFavorite = () => {\r\n            this.mode('favorite');\r\n            this.explore.blur();\r\n            this.favorites.focus();\r\n        };\r\n\r\n        // default mode\r\n        this.switchModeExplore();\r\n    }\r\n\r\n}\r\n\r\n/**\r\n *  Ready-callback function for Google Maps JS\r\n *\r\n *  Initializes the application and services and applies knockout bindings\r\n *\r\n */\r\nwindow.initMap = function() {\r\n    let mapService = new MapService();\r\n    let geocoderService = new GeocoderService();\r\n    let placesService = new PlacesService();\r\n    let app = new AppViewModel(mapService, geocoderService, placesService);\r\n\r\n    ko.applyBindings(app);\r\n};\r\n\r\n\r\n\r\n","/**\r\n * @author base1.christiaan@gmail.com (Christiaan Lombard)\r\n */\r\n\r\nimport { MAP_STYLES } from './map-styles'\r\n\r\n\r\n /**\r\n  * The MapService interacts with a google.maps.Map instance\r\n  *\r\n  */\r\nexport class MapService {\r\n\r\n    /**\r\n     * Make a MapService instance\r\n     */\r\n    constructor(){\r\n        this.markers = [];\r\n        this.infoWindow = null;\r\n        this._locationListener = ()=>{};\r\n\r\n        this.map = new google.maps.Map(document.getElementById('map'), {\r\n            center: {lat: -34.397, lng: 150.644},\r\n            zoom: 8,\r\n            disableDefaultUI: true,\r\n            styles: MAP_STYLES\r\n        });\r\n        this.infoWindow = new google.maps.InfoWindow({});\r\n    }\r\n\r\n    /**\r\n     * Center the map on location\r\n     *\r\n     * @param {LatLng} pos\r\n     */\r\n    setCenter(pos){\r\n        this.map.setCenter(pos);\r\n    }\r\n\r\n    /**\r\n     * Map viewport fit boundary\r\n     *\r\n     * @param {LatLngBounds} bounds\r\n     */\r\n    fitBounds(bounds){\r\n        this.map.fitBounds(bounds);\r\n    }\r\n\r\n    /**\r\n     * Set map zoom level\r\n     *\r\n     * @param {number} level\r\n     */\r\n    setZoom(level){\r\n        this.map.setZoom(level);\r\n    }\r\n\r\n    /**\r\n     * Show an info window at the given place\r\n     * presenting the given details\r\n     *\r\n     * @param {PlaceViewModel} place\r\n     * @param {PlaceDetailViewModel} details\r\n     */\r\n    showInfo(place, details){\r\n        this.infoWindow.setContent(`\r\n            <div class=\"place-info-window\">\r\n                <h4 class=\"name\">${place.name}</h4>\r\n                <p class=\"address\">${place.address}</p>\r\n                <p class=\"categories\">${details.categories}</p>\r\n                <a class=\"link\"href=\"${details.link}\" target=\"_blank\">MORE INFO</a>\r\n            </div>\r\n        `);\r\n\r\n        place.marker.setAnimation(google.maps.Animation.BOUNCE);\r\n        setTimeout(() => {\r\n            place.marker.setAnimation(null);\r\n        }, 800);\r\n\r\n        this.infoWindow.open(this.map, place.marker);\r\n        this.setCenter(place.geoLocation);\r\n    }\r\n\r\n    /**\r\n     * Close the info window\r\n     */\r\n    closeInfo(){\r\n        this.infoWindow.close();\r\n    }\r\n\r\n    /**\r\n     * Fit the given array of places into the map viewport\r\n     *\r\n     * @param {PlaceViewModel[]} places\r\n     */\r\n    fitPlaces(places){\r\n        let bounds = new google.maps.LatLngBounds();\r\n        places.forEach(place => {\r\n            bounds.extend(place.geoLocation);\r\n        });\r\n        this.fitBounds(bounds);\r\n    }\r\n\r\n    /**\r\n     * Create a marker at the given place\r\n     *\r\n     * @param {PlaceViewModel} place\r\n     */\r\n    placeMarker(place){\r\n        let marker = new google.maps.Marker( {\r\n            map: this.map,\r\n            // animation: google.maps.Animation.DROP,\r\n            position: place.geoLocation,\r\n            title: place.name\r\n        });\r\n\r\n        this.markers.push(marker);\r\n        place.marker = marker;\r\n\r\n        return marker;\r\n    }\r\n\r\n    /**\r\n     * Remove all the markers from the map\r\n     */\r\n    clearMarkers(){\r\n        this.markers.forEach(marker => marker.setMap(null));\r\n        this.markers = [];\r\n    }\r\n\r\n}\r\n","/**\r\n * @author base1.christiaan@gmail.com (Christiaan Lombard)\r\n */\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { LocationViewModel } from '../models/location';\r\n\r\n/**\r\n *  GeocoderService wraps maps.google.Geocoder\r\n *  with rxjs observables. Provides LocationViewModels\r\n *\r\n */\r\nexport class GeocoderService {\r\n    constructor(){\r\n        this._googleGeocoder = new google.maps.Geocoder();\r\n    }\r\n\r\n    geocode(address){\r\n\r\n        if(!this._googleGeocoder){\r\n            throw Error('GeocoderService: Not ready for geocoding');\r\n        }\r\n\r\n        return new Observable(observer => {\r\n\r\n            let cancelled = false;\r\n\r\n            this._googleGeocoder.geocode({address}, (results, status) => {\r\n\r\n                if(cancelled) return;\r\n\r\n                if (status == 'OK') {\r\n                    let models = results.map(result => this._resultToLocationModel(result));\r\n                    observer.next(models);\r\n                    observer.complete();\r\n                }else if(status === 'ZERO_RESULTS'){\r\n                    observer.next([]);\r\n                    observer.complete();\r\n                }else{\r\n                    observer.error(status);\r\n                }\r\n\r\n            });\r\n\r\n            return () => {\r\n                this.cancelled = true;\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Convert a geocode result to a LocationViewModel\r\n     *\r\n     * @param {any} result\r\n     */\r\n    _resultToLocationModel(result){\r\n        return new LocationViewModel(\r\n            result.place_id,\r\n            result.formatted_address,\r\n            result.geometry.bounds,\r\n            {\r\n                lat: result.geometry.location.lat(),\r\n                lng: result.geometry.location.lng(),\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n\r\n}","/**\r\n * @author base1.christiaan@gmail.com (Christiaan Lombard)\r\n */\r\n\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ajax } from 'rxjs/ajax';\r\nimport { FoursquareService, FS_CATEGORY_BAR, FS_CATEGORY_BREWERY } from './foursquare-service';\r\nimport { PLACES_SEED } from './places-seed';\r\nimport { PlaceViewModel } from '../models/place';\r\nimport { PlaceDetailViewModel } from '../models/place-detail';\r\n\r\n/**\r\n * The PlacesService provides locally stored places\r\n * and interacts with Foursquare to explore new places\r\n *\r\n *\r\n */\r\nexport class PlacesService {\r\n\r\n    /**\r\n     * Make a PlacesService instance\r\n     */\r\n    constructor(){\r\n        /** @private @const {BehaviorSubject<PlaceViewModel[]>} */\r\n        this._places$ = new BehaviorSubject([]);\r\n\r\n        /** @private @const {FoursquareService} */\r\n        this._foursquare = new FoursquareService();\r\n\r\n        this._load();\r\n    }\r\n\r\n    /**\r\n     * Get an Observable stream of locally stored places\r\n     *\r\n     *  - Emits changes when adding, removing places\r\n     *  - Observer never completes\r\n     *\r\n     */\r\n    favorites(){\r\n        return this._places$.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Check if locally stored place exists\r\n     *\r\n     * @param {string} id\r\n     * @returns {boolean}\r\n     */\r\n    has(id){\r\n        return !!(this.find(id));\r\n    }\r\n\r\n    /**\r\n     * Find a locally stored place by id or Foursquare venueId\r\n     *\r\n     * @param {string} id\r\n     * @returns {PlaceViewModel | undefined}\r\n     */\r\n    find(id){\r\n        return this._places$.value.find(place => place.id === id);\r\n    }\r\n\r\n    /**\r\n     * Add a place to the locally stored places\r\n     *\r\n     * @param {PlaceViewModel} place\r\n     */\r\n    add(place){\r\n        this._places$.next([...this._places$.value, place]);\r\n        this._save();\r\n        place.isSaved(true);\r\n    }\r\n\r\n    /**\r\n     * Remove a place from the locally stored places\r\n     *\r\n     * @param {PlaceViewModel} place\r\n     */\r\n    remove(place){\r\n        let places = this._places$.value.filter(saved => saved.id !== place.id);\r\n        this._places$.next(places);\r\n        this._save();\r\n        place.isSaved(false);\r\n    }\r\n\r\n    /**\r\n     * Requests the detail of the given place\r\n     * from Foursquare\r\n     *\r\n     * @param {PlaceViewModel} place\r\n     * @returns {Observable<PlaceDetailViewModel>}\r\n     */\r\n    getDetail(place){\r\n        return this._foursquare\r\n                    .venueDetail(place.id)\r\n                    .pipe(\r\n                        map(result => {\r\n\r\n                            let categories =\r\n                                result.venue\r\n                                      .categories\r\n                                      .map(cat => cat.name)\r\n                                      .join(' | ');\r\n\r\n                            return {\r\n                                categories: categories,\r\n                                link: result.venue.shortUrl,\r\n                                rating: result.venue.rating,\r\n                            };\r\n                        })\r\n                    );\r\n    }\r\n\r\n    /**\r\n     * Search for places (Foursquare venues) near the given lat, lng\r\n     *\r\n     * @param {LatLng} geoLocation\r\n     */\r\n    searchNear(geoLocation){\r\n        return this._foursquare\r\n                    .searchVenues(geoLocation, [FS_CATEGORY_BAR, FS_CATEGORY_BREWERY])\r\n                    .pipe(\r\n                        map(result => {\r\n                            let models = result.venues.map(venue => this._foursquareResultToPlace(venue));\r\n                            return models;\r\n                        })\r\n                    );\r\n    }\r\n\r\n    /**\r\n     * Commit the in-memory places array to localStorage\r\n     *\r\n     */\r\n    _save(){\r\n\r\n        let ojects = this._places$.value.map(place => place.serialize());\r\n\r\n        let value = JSON.stringify(ojects);\r\n        localStorage.setItem('my_places', value);\r\n    }\r\n\r\n    /**\r\n     * Load stored places from localStorage to memory,\r\n     * or use the PLACES_SEED\r\n     *\r\n     */\r\n    _load(){\r\n        let places = [];\r\n        let stored = localStorage.getItem('my_places');\r\n        let parsed = JSON.parse(stored);\r\n        if(Array.isArray(parsed)){\r\n            places = parsed;\r\n        }else{\r\n            places = PLACES_SEED;\r\n        }\r\n        this._places$.next(places.map(obj => this._objectToPlace(obj)));\r\n    }\r\n\r\n    /**\r\n     * Map a serialized object to a PlaceViewModel\r\n     *\r\n     * @param {any} obj\r\n     */\r\n    _objectToPlace(obj){\r\n        return new PlaceViewModel(\r\n            // this,\r\n            obj.id,\r\n            obj.name,\r\n            obj.address,\r\n            obj.geoLocation,\r\n            true\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Map a Foursquare Venue result to a PlaceViewModel\r\n     *\r\n     * @param {any} obj\r\n     */\r\n    _foursquareResultToPlace(result){\r\n\r\n        let isSaved =\r\n            this._places$.value.findIndex(place => result.id === place.id) !== -1;\r\n\r\n        return new PlaceViewModel(\r\n            // this,\r\n            result.id,\r\n            result.name,\r\n            result.location.formattedAddress.join(', '),\r\n            {\r\n                lat: result.location.lat,\r\n                lng: result.location.lng,\r\n            },\r\n            isSaved\r\n        );\r\n    }\r\n\r\n\r\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Bevan|Roboto:400,700);\", \"\"]);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/icon?family=Material+Icons);\", \"\"]);\n\n// module\nexports.push([module.id, \"/**\\r\\n * @author base1.christiaan@gmail.com (Christiaan Lombard)\\r\\n */\\n/**\\r\\n * @author base1.christiaan@gmail.com (Christiaan Lombard)\\r\\n */\\n/**\\r\\n\\r\\n---- FONTS ----\\r\\n\\r\\nfont-family: 'Bevan', cursive;\\r\\nfont-family: 'Roboto', sans-serif;\\r\\n\\r\\n---- COLOR SCHEME ----\\r\\n\\r\\nmat-grey:\\r\\n    50: #fafafa\\r\\n    100: #f5f5f5\\r\\n    200: #eeeeee\\r\\n    300: #e0e0e0\\r\\n    400: #bdbdbd\\r\\n    500: #9e9e9e\\r\\n    600: #757575\\r\\n    700: #616161\\r\\n    800: #424242\\r\\n    900: #212121\\r\\n\\r\\nmat-orange:\\r\\n  50: #fff3e0\\r\\n  100: #ffe0b2\\r\\n  200: #ffcc80\\r\\n  300: #ffb74d\\r\\n  400: #ffa726\\r\\n  500: #ff9800\\r\\n  600: #fb8c00\\r\\n  700: #f57c00\\r\\n  800: #ef6c00\\r\\n  900: #e65100\\r\\n\\r\\n*/\\n/**\\r\\n\\r\\n    User agent overrides\\r\\n\\r\\n*/\\nhtml, body {\\n  font-family: 'Roboto', sans-serif;\\n  margin: 0;\\n  padding: 0;\\n  min-height: 100%;\\n  height: 100%;\\n  background-color: #FAFAFA; }\\n\\nh1, h2, h3, h4, h5, h6 {\\n  font-family: 'Bevan', Arial, Helvetica, sans-serif;\\n  font-weight: 400; }\\n\\ninput {\\n  font-family: 'Roboto', sans-serif; }\\n\\ni.material-icons {\\n  vertical-align: middle; }\\n\\ntextarea:focus, input:focus {\\n  outline: none; }\\n\\nbutton {\\n  outline: none;\\n  border: none;\\n  background: none; }\\n\\n/**\\r\\n\\r\\n    App Container\\r\\n\\r\\n*/\\n.app {\\n  display: flex;\\n  flex-flow: column nowrap;\\n  position: relative;\\n  align-content: stretch;\\n  align-items: stretch;\\n  width: 100%;\\n  height: 100%; }\\n\\n/**\\r\\n\\r\\n    Header - Logo and navigation\\r\\n\\r\\n*/\\n.header {\\n  display: flex;\\n  flex: 0 0 auto;\\n  background-color: #E65100;\\n  color: rgba(255, 255, 255, 0.87);\\n  width: 100%;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24); }\\n  .header h1 {\\n    font-size: 1.6em;\\n    margin: 0;\\n    padding: 6px 12px 6px 12px; }\\n  .header p {\\n    font-size: 12px;\\n    margin: 0;\\n    padding: 0 12px 12px 12px;\\n    display: none; }\\n  .header .nav {\\n    display: flex;\\n    flex: 1 1 auto;\\n    justify-content: flex-end; }\\n    .header .nav .nav-item {\\n      background: none;\\n      color: rgba(255, 255, 255, 0.87);\\n      border: none;\\n      padding: 12px;\\n      box-sizing: border-box; }\\n      .header .nav .nav-item:hover {\\n        background-color: rgba(255, 255, 255, 0.12); }\\n      .header .nav .nav-item i {\\n        vertical-align: middle; }\\n      .header .nav .nav-item span {\\n        display: none; }\\n      .header .nav .nav-item.active {\\n        background-color: rgba(255, 255, 255, 0.25);\\n        border-bottom: 2px solid rgba(255, 255, 255, 0.87); }\\n\\n/**\\r\\n    Main\\r\\n     - container for Search Form and Map\\r\\n*/\\n.main {\\n  flex: 1 1 auto;\\n  background-color: #FFFFFF;\\n  display: flex;\\n  flex-flow: column; }\\n\\n/**\\r\\n    Search Form\\r\\n     - styles shared by explore and favorite sections\\r\\n*/\\n.search-form {\\n  display: flex;\\n  flex-flow: column nowrap;\\n  background-color: #F5F5F5; }\\n  .search-form .search-bar {\\n    flex: 0 0 auto;\\n    display: flex;\\n    align-items: center; }\\n    .search-form .search-bar .search-label {\\n      display: block;\\n      padding: 3px; }\\n    .search-form .search-bar .input-search {\\n      border: none;\\n      flex: 1 1 auto;\\n      background: transparent;\\n      padding-left: 12px;\\n      line-height: 36px;\\n      vertical-align: middle; }\\n    .search-form .search-bar .toggle-btn {\\n      padding: 0;\\n      border: none; }\\n      .search-form .search-bar .toggle-btn i {\\n        vertical-align: middle;\\n        font-size: 36px; }\\n      .search-form .search-bar .toggle-btn:hover {\\n        background-color: #FFF3E0; }\\n  .search-form .place-list {\\n    width: 100%;\\n    overflow-y: auto;\\n    list-style: none;\\n    margin: 0;\\n    padding: 0;\\n    max-height: 150px; }\\n    .search-form .place-list .place-item {\\n      display: flex;\\n      cursor: pointer;\\n      border-bottom: 1px solid #E0E0E0;\\n      background-color: #FFFFFF;\\n      padding: 6px; }\\n      .search-form .place-list .place-item .place-info {\\n        flex: 1 1 auto;\\n        overflow: hidden; }\\n        .search-form .place-list .place-item .place-info .place-title {\\n          font-size: 14px;\\n          margin: 0;\\n          font-weight: 700;\\n          font-family: 'Roboto', sans-serif; }\\n        .search-form .place-list .place-item .place-info .place-address {\\n          font-size: 12px;\\n          margin: 0;\\n          white-space: nowrap;\\n          text-overflow: ellipsis;\\n          overflow: hidden;\\n          max-width: 100%; }\\n      .search-form .place-list .place-item .place-add-btn {\\n        padding: 0;\\n        border-radius: 50%;\\n        display: block;\\n        width: 36px;\\n        height: 36px;\\n        flex: 0 0 auto; }\\n        .search-form .place-list .place-item .place-add-btn.added {\\n          color: #E65100; }\\n        .search-form .place-list .place-item .place-add-btn:hover {\\n          background-color: #E0E0E0; }\\n      .search-form .place-list .place-item .place-rm-btn {\\n        padding: 0;\\n        border-radius: 50%;\\n        display: block;\\n        width: 36px;\\n        height: 36px;\\n        flex: 0 0 auto; }\\n        .search-form .place-list .place-item .place-rm-btn:hover {\\n          background-color: #E0E0E0; }\\n      .search-form .place-list .place-item:hover {\\n        background-color: #FFF3E0; }\\n  .search-form .location-list {\\n    width: 100%;\\n    padding: 0;\\n    margin: 0;\\n    list-style: none;\\n    background-color: #FFFFFF; }\\n    .search-form .location-list .location-item {\\n      cursor: pointer;\\n      font-size: 14px;\\n      padding: 6px 12px; }\\n      .search-form .location-list .location-item .location-explore {\\n        color: #E65100; }\\n      .search-form .location-list .location-item:hover {\\n        background-color: #FFF3E0; }\\n  .search-form .info-message {\\n    width: 100%;\\n    margin: 0;\\n    font-size: 12px;\\n    padding: 6px; }\\n  .search-form .error-message {\\n    width: 100%;\\n    margin: 0;\\n    font-size: 12px;\\n    padding: 6px;\\n    color: rgba(255, 255, 255, 0.87);\\n    background-color: #F44336; }\\n\\n/**\\r\\n    Map and InfoWindow\\r\\n\\r\\n*/\\n.map {\\n  flex: 1 1 auto; }\\n  .map .place-info-window {\\n    max-width: 250px;\\n    text-align: center; }\\n    .map .place-info-window .name {\\n      margin: 0;\\n      font-weight: 400;\\n      font-size: 18px; }\\n    .map .place-info-window .link {\\n      display: inline-block;\\n      text-decoration: none;\\n      color: rgba(255, 255, 255, 0.87);\\n      background-color: #EF6C00;\\n      padding: 12px; }\\n    .map .place-info-window p {\\n      font-size: 14px; }\\n\\n/**\\r\\n\\r\\n    Responsive breakpoint at 650px\\r\\n    switches search to a sidebar\\r\\n\\r\\n*/\\n@media screen and (min-width: 650px) {\\n  .main {\\n    flex-flow: row wrap; }\\n    .main .search-form {\\n      width: 300px; }\\n      .main .search-form .place-list {\\n        overflow-y: auto;\\n        max-height: unset; }\\n    .main .map {\\n      flex: 1 1 auto; }\\n  .header {\\n    align-self: flex-start; }\\n  .header .nav .nav-item span {\\n    display: inline; } }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./styles.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./styles.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./styles.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}